# coding: utf-8

"""
    Security Creation

    This service is used to create CDS, CDX, Equity Equity, Equity Option, Futures, FX NDF, FX SPOT, FX FWRD, FX CSWAP, FX Option, Swap, Swaption, CASH/TD, CASH/REPO, ARM/TBA and MBS/TBA securities.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class EnumsFrequencyType(str, Enum):
    """
    - FREQUENCY_TYPE_UNSPECIFIED: UNSPECIFIED  - FREQUENCY_TYPE_ZERO: ZERO  - FREQUENCY_TYPE_DAILY: DAILY  - FREQUENCY_TYPE_WEEKLY: WEEKLY  - FREQUENCY_TYPE_MONTHLY: MONTHLY  - FREQUENCY_TYPE_BIMONTHLY: BIMONTHLY  - FREQUENCY_TYPE_QUARTERLY: QUARTERLY  - FREQUENCY_TYPE_SEMI_ANNUALLY: SEMI_ANNUALLY  - FREQUENCY_TYPE_ANNUALLY: ANNUALLY  - FREQUENCY_TYPE_N_CAL_DAYS: N_CAL_DAYS  - FREQUENCY_TYPE_N_BUS_DAYS: N_BUS_DAYS  - FREQUENCY_TYPE_M_PLUS_N_BUS_DAYS: M_PLUS_N_BUS_DAYS  - FREQUENCY_TYPE_Q_PLUS_N_BUS_DAYS: Q_PLUS_N_BUS_DAYS  - FREQUENCY_TYPE_S_PLUS_N_BUS_DAYS: S_PLUS_N_BUS_DAYS  - FREQUENCY_TYPE_A_PLUS_N_BUS_DAYS: A_PLUS_N_BUS_DAYS  - FREQUENCY_TYPE_NTH_WED_QUARTERLY: NTH_WED_QUARTERLY  - FREQUENCY_TYPE_NTH_WED_SEMI_ANNUALLY: NTH_WED_SEMI_ANNUALLY  - FREQUENCY_TYPE_NTH_WED_ANNUALLY: NTH_WED_ANNUALLY  - FREQUENCY_TYPE_SINGLE: SINGLE  - FREQUENCY_TYPE_EACH_MONDAY: EACH_MONDAY  - FREQUENCY_TYPE_EACH_TUESDAY: EACH_TUESDAY  - FREQUENCY_TYPE_EACH_WEDNESDAY: EACH_WEDNESDAY  - FREQUENCY_TYPE_EACH_THURSDAY: EACH_THURSDAY  - FREQUENCY_TYPE_EACH_FRIDAY: EACH_FRIDAY  - FREQUENCY_TYPE_END_OF_EACH_MONTH: END_OF_EACH_MONTH  - FREQUENCY_TYPE_FIRST_BUSINESS_DAY_OF_WEEK: FIRST_BUSINESS_DAY_OF_WEEK  - FREQUENCY_TYPE_SECOND_BUSINESS_DAY_OF_WEEK: SECOND_BUSINESS_DAY_OF_WEEK  - FREQUENCY_TYPE_THIRD_BUSINESS_DAY_OF_WEEK: THIRD_BUSINESS_DAY_OF_WEEK  - FREQUENCY_TYPE_FOURTH_BUSINESS_DAY_OF_WEEK: FOURTH_BUSINESS_DAY_OF_WEEK  - FREQUENCY_TYPE_WEEKLY_AND_ON_PAYMENT_DAY: WEEKLY_AND_ON_PAYMENT_DAY  - FREQUENCY_TYPE_NTH_BUSINESS_DAY_OF_WEEK: NTH_BUSINESS_DAY_OF_WEEK  - FREQUENCY_TYPE_NTH_BUSINESS_DAY_MONTHLY: NTH_BUSINESS_DAY_MONTHLY  - FREQUENCY_TYPE_NTH_BUSINESS_DAY_QUARTERLY: NTH_BUSINESS_DAY_QUARTERLY  - FREQUENCY_TYPE_NTH_BUSINESS_DAY_SEMI_ANNUALLY: NTH_BUSINESS_DAY_SEMI_ANNUALLY  - FREQUENCY_TYPE_NTH_CALENDAR_DAY_MONTHLY: NTH_CALENDAR_DAY_MONTHLY  - FREQUENCY_TYPE_NTH_CALENDAR_DAY_QUARTERLY: NTH_CALENDAR_DAY_QUARTERLY  - FREQUENCY_TYPE_NTH_CALENDAR_DAY_SEMI_ANNUALLY: NTH_CALENDAR_DAY_SEMI_ANNUALLY  - FREQUENCY_TYPE_NTH_MONDAY_OF_MONTH: NTH_MONDAY_OF_MONTH  - FREQUENCY_TYPE_NTH_TUESDAY_OF_MONTH: NTH_TUESDAY_OF_MONTH  - FREQUENCY_TYPE_NTH_WEDNESDAY_OF_MONTH: NTH_WEDNESDAY_OF_MONTH  - FREQUENCY_TYPE_NTH_THURSDAY_OF_MONTH: NTH_THURSDAY_OF_MONTH  - FREQUENCY_TYPE_NTH_FRIDAY_OF_MONTH: NTH_FRIDAY_OF_MONTH  - FREQUENCY_TYPE_N_WEEKS: N_WEEKS  - FREQUENCY_TYPE_N_MONTHS: N_MONTHS  - FREQUENCY_TYPE_N_YEARS: N_YEARS  - FREQUENCY_TYPE_N_TIMES_PER_YEAR: N_TIMES_PER_YEAR
    """

    """
    allowed enum values
    """
    FREQUENCY_TYPE_UNSPECIFIED = 'FREQUENCY_TYPE_UNSPECIFIED'
    FREQUENCY_TYPE_ZERO = 'FREQUENCY_TYPE_ZERO'
    FREQUENCY_TYPE_DAILY = 'FREQUENCY_TYPE_DAILY'
    FREQUENCY_TYPE_WEEKLY = 'FREQUENCY_TYPE_WEEKLY'
    FREQUENCY_TYPE_MONTHLY = 'FREQUENCY_TYPE_MONTHLY'
    FREQUENCY_TYPE_BIMONTHLY = 'FREQUENCY_TYPE_BIMONTHLY'
    FREQUENCY_TYPE_QUARTERLY = 'FREQUENCY_TYPE_QUARTERLY'
    FREQUENCY_TYPE_SEMI_ANNUALLY = 'FREQUENCY_TYPE_SEMI_ANNUALLY'
    FREQUENCY_TYPE_ANNUALLY = 'FREQUENCY_TYPE_ANNUALLY'
    FREQUENCY_TYPE_N_CAL_DAYS = 'FREQUENCY_TYPE_N_CAL_DAYS'
    FREQUENCY_TYPE_N_BUS_DAYS = 'FREQUENCY_TYPE_N_BUS_DAYS'
    FREQUENCY_TYPE_M_PLUS_N_BUS_DAYS = 'FREQUENCY_TYPE_M_PLUS_N_BUS_DAYS'
    FREQUENCY_TYPE_Q_PLUS_N_BUS_DAYS = 'FREQUENCY_TYPE_Q_PLUS_N_BUS_DAYS'
    FREQUENCY_TYPE_S_PLUS_N_BUS_DAYS = 'FREQUENCY_TYPE_S_PLUS_N_BUS_DAYS'
    FREQUENCY_TYPE_A_PLUS_N_BUS_DAYS = 'FREQUENCY_TYPE_A_PLUS_N_BUS_DAYS'
    FREQUENCY_TYPE_NTH_WED_QUARTERLY = 'FREQUENCY_TYPE_NTH_WED_QUARTERLY'
    FREQUENCY_TYPE_NTH_WED_SEMI_ANNUALLY = 'FREQUENCY_TYPE_NTH_WED_SEMI_ANNUALLY'
    FREQUENCY_TYPE_NTH_WED_ANNUALLY = 'FREQUENCY_TYPE_NTH_WED_ANNUALLY'
    FREQUENCY_TYPE_SINGLE = 'FREQUENCY_TYPE_SINGLE'
    FREQUENCY_TYPE_EACH_MONDAY = 'FREQUENCY_TYPE_EACH_MONDAY'
    FREQUENCY_TYPE_EACH_TUESDAY = 'FREQUENCY_TYPE_EACH_TUESDAY'
    FREQUENCY_TYPE_EACH_WEDNESDAY = 'FREQUENCY_TYPE_EACH_WEDNESDAY'
    FREQUENCY_TYPE_EACH_THURSDAY = 'FREQUENCY_TYPE_EACH_THURSDAY'
    FREQUENCY_TYPE_EACH_FRIDAY = 'FREQUENCY_TYPE_EACH_FRIDAY'
    FREQUENCY_TYPE_END_OF_EACH_MONTH = 'FREQUENCY_TYPE_END_OF_EACH_MONTH'
    FREQUENCY_TYPE_FIRST_BUSINESS_DAY_OF_WEEK = 'FREQUENCY_TYPE_FIRST_BUSINESS_DAY_OF_WEEK'
    FREQUENCY_TYPE_SECOND_BUSINESS_DAY_OF_WEEK = 'FREQUENCY_TYPE_SECOND_BUSINESS_DAY_OF_WEEK'
    FREQUENCY_TYPE_THIRD_BUSINESS_DAY_OF_WEEK = 'FREQUENCY_TYPE_THIRD_BUSINESS_DAY_OF_WEEK'
    FREQUENCY_TYPE_FOURTH_BUSINESS_DAY_OF_WEEK = 'FREQUENCY_TYPE_FOURTH_BUSINESS_DAY_OF_WEEK'
    FREQUENCY_TYPE_WEEKLY_AND_ON_PAYMENT_DAY = 'FREQUENCY_TYPE_WEEKLY_AND_ON_PAYMENT_DAY'
    FREQUENCY_TYPE_NTH_BUSINESS_DAY_OF_WEEK = 'FREQUENCY_TYPE_NTH_BUSINESS_DAY_OF_WEEK'
    FREQUENCY_TYPE_NTH_BUSINESS_DAY_MONTHLY = 'FREQUENCY_TYPE_NTH_BUSINESS_DAY_MONTHLY'
    FREQUENCY_TYPE_NTH_BUSINESS_DAY_QUARTERLY = 'FREQUENCY_TYPE_NTH_BUSINESS_DAY_QUARTERLY'
    FREQUENCY_TYPE_NTH_BUSINESS_DAY_SEMI_ANNUALLY = 'FREQUENCY_TYPE_NTH_BUSINESS_DAY_SEMI_ANNUALLY'
    FREQUENCY_TYPE_NTH_CALENDAR_DAY_MONTHLY = 'FREQUENCY_TYPE_NTH_CALENDAR_DAY_MONTHLY'
    FREQUENCY_TYPE_NTH_CALENDAR_DAY_QUARTERLY = 'FREQUENCY_TYPE_NTH_CALENDAR_DAY_QUARTERLY'
    FREQUENCY_TYPE_NTH_CALENDAR_DAY_SEMI_ANNUALLY = 'FREQUENCY_TYPE_NTH_CALENDAR_DAY_SEMI_ANNUALLY'
    FREQUENCY_TYPE_NTH_MONDAY_OF_MONTH = 'FREQUENCY_TYPE_NTH_MONDAY_OF_MONTH'
    FREQUENCY_TYPE_NTH_TUESDAY_OF_MONTH = 'FREQUENCY_TYPE_NTH_TUESDAY_OF_MONTH'
    FREQUENCY_TYPE_NTH_WEDNESDAY_OF_MONTH = 'FREQUENCY_TYPE_NTH_WEDNESDAY_OF_MONTH'
    FREQUENCY_TYPE_NTH_THURSDAY_OF_MONTH = 'FREQUENCY_TYPE_NTH_THURSDAY_OF_MONTH'
    FREQUENCY_TYPE_NTH_FRIDAY_OF_MONTH = 'FREQUENCY_TYPE_NTH_FRIDAY_OF_MONTH'
    FREQUENCY_TYPE_N_WEEKS = 'FREQUENCY_TYPE_N_WEEKS'
    FREQUENCY_TYPE_N_MONTHS = 'FREQUENCY_TYPE_N_MONTHS'
    FREQUENCY_TYPE_N_YEARS = 'FREQUENCY_TYPE_N_YEARS'
    FREQUENCY_TYPE_N_TIMES_PER_YEAR = 'FREQUENCY_TYPE_N_TIMES_PER_YEAR'

    @classmethod
    def from_json(cls, json_str: str) -> EnumsFrequencyType:
        """Create an instance of EnumsFrequencyType from a JSON string"""
        return EnumsFrequencyType(json.loads(json_str))


