# coding: utf-8

"""
    Security Creation

    This service is used to create CDS, CDX, Equity Equity, Equity Option, Futures, FX NDF, FX SPOT, FX FWRD, FX CSWAP, FX Option, Swap, Swaption, CASH/TD, CASH/REPO, ARM/TBA and MBS/TBA securities.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class EnumsBasketTypeRating(str, Enum):
    """
    enum BasketTypeRating represents underlying security basket type, for example A, AA etc.   - BASKET_TYPE_RATING_UNSPECIFIED: UNSPECIFIED  - BASKET_TYPE_RATING_A: A  - BASKET_TYPE_RATING_AA: AA  - BASKET_TYPE_RATING_AAA: AAA  - BASKET_TYPE_RATING_AAA_JUNIOR: AAA_JUNIOR  - BASKET_TYPE_RATING_AAA_PENT_ULTIMATE: AAA_PENT_ULTIMATE  - BASKET_TYPE_RATING_AAA_MEZZANINE: AAA_MEZZANINE  - BASKET_TYPE_RATING_AAA_ARM: AAA_ARM  - BASKET_TYPE_RATING_AAA_FRM: AAA FRM  - BASKET_TYPE_RATING_BB: BB  - BASKET_TYPE_RATING_BBB: BBB  - BASKET_TYPE_RATING_BBB_MINUS: BBB_MINUS  - BASKET_TYPE_RATING_CROSSOVER: CROSSOVER  - BASKET_TYPE_RATING_HIGH_YIELD: HIGH YIELD  - BASKET_TYPE_RATING_HIGH_YIELD_B: HIGH YIELD B  - BASKET_TYPE_RATING_HIGH_YIELD_BB: HIGH YIELD BB  - BASKET_TYPE_RATING_HIGH_YIELD_HB: HIGH YIELD HB  - BASKET_TYPE_RATING_HIGH_YIELD_EX_BB: HIGH YIELD EX B  - BASKET_TYPE_RATING_INVESTMENT_GRADE: INVESTMENT GRADE  - BASKET_TYPE_RATING_INVESTMENT_GRADE_BBB: INVESTMENT GRADE BBB
    """

    """
    allowed enum values
    """
    BASKET_TYPE_RATING_UNSPECIFIED = 'BASKET_TYPE_RATING_UNSPECIFIED'
    BASKET_TYPE_RATING_A = 'BASKET_TYPE_RATING_A'
    BASKET_TYPE_RATING_AA = 'BASKET_TYPE_RATING_AA'
    BASKET_TYPE_RATING_AAA = 'BASKET_TYPE_RATING_AAA'
    BASKET_TYPE_RATING_AAA_JUNIOR = 'BASKET_TYPE_RATING_AAA_JUNIOR'
    BASKET_TYPE_RATING_AAA_PENT_ULTIMATE = 'BASKET_TYPE_RATING_AAA_PENT_ULTIMATE'
    BASKET_TYPE_RATING_AAA_MEZZANINE = 'BASKET_TYPE_RATING_AAA_MEZZANINE'
    BASKET_TYPE_RATING_AAA_ARM = 'BASKET_TYPE_RATING_AAA_ARM'
    BASKET_TYPE_RATING_AAA_FRM = 'BASKET_TYPE_RATING_AAA_FRM'
    BASKET_TYPE_RATING_BB = 'BASKET_TYPE_RATING_BB'
    BASKET_TYPE_RATING_BBB = 'BASKET_TYPE_RATING_BBB'
    BASKET_TYPE_RATING_BBB_MINUS = 'BASKET_TYPE_RATING_BBB_MINUS'
    BASKET_TYPE_RATING_CROSSOVER = 'BASKET_TYPE_RATING_CROSSOVER'
    BASKET_TYPE_RATING_HIGH_YIELD = 'BASKET_TYPE_RATING_HIGH_YIELD'
    BASKET_TYPE_RATING_HIGH_YIELD_B = 'BASKET_TYPE_RATING_HIGH_YIELD_B'
    BASKET_TYPE_RATING_HIGH_YIELD_BB = 'BASKET_TYPE_RATING_HIGH_YIELD_BB'
    BASKET_TYPE_RATING_HIGH_YIELD_HB = 'BASKET_TYPE_RATING_HIGH_YIELD_HB'
    BASKET_TYPE_RATING_HIGH_YIELD_EX_BB = 'BASKET_TYPE_RATING_HIGH_YIELD_EX_BB'
    BASKET_TYPE_RATING_INVESTMENT_GRADE = 'BASKET_TYPE_RATING_INVESTMENT_GRADE'
    BASKET_TYPE_RATING_INVESTMENT_GRADE_BBB = 'BASKET_TYPE_RATING_INVESTMENT_GRADE_BBB'

    @classmethod
    def from_json(cls, json_str: str) -> EnumsBasketTypeRating:
        """Create an instance of EnumsBasketTypeRating from a JSON string"""
        return EnumsBasketTypeRating(json.loads(json_str))


