{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This service is used to create CDS, CDX, Equity Equity, Equity Option, Futures, FX NDF, FX SPOT, FX FWRD, FX CSWAP, FX Option, Swap, Swaption, CASH/TD, CASH/REPO, ARM/TBA and MBS/TBA securities.",
        "title": "Security Creation",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.data.reference_data.asset.asset_creation.SecurityCreationAPI",
        "x-aladdin-api-stability": "stable",
        "x-aladdin-spec-id": "agraph.data.reference_data.asset.asset_creation.v1.SecurityCreationAPI"
    },
    "basePath": "/api/data/reference-data/asset/asset-creation/v1/",
    "paths": {
        "/armTbaSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create ARM/TBA Securities based upon inputs provided by user\n\nWhen creating ARM/TBA security, required fields are\n\n   - agency      \t \t\t\t- ex: GNMAII\n\n   - term      \t \t \t\t\t- ex: 10\t\t\n\n   - initialCoupon      \t \t \t- ex: 1.0\t\t\n\n   - wac      \t \t \t\t\t- ex: 20.0\n\n   - wam      \t \t \t\t\t- ex: 56\n\n   - wala      \t \t \t\t\t- ex: 100\n\nYou MAY provide all other fields \n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: We need to do this way only --)",
                "summary": "Create ARM/TBA Securities",
                "operationId": "SecurityCreationAPI_CreateArmTbaSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "arm_tba_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1ArmTbaSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1ArmTbaSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/cashRepoSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create CASH/REPO Securities based upon inputs provided by user\n\nWhen creating CASH/REPO security, all fields are optional\n\nWhen variableRate is TRUE, required fields are \n\n   - resetIndex      \t - ex: PREVRATE\n\nYou MAY provide all other fields",
                "summary": "Create CASH/REPO Securities",
                "operationId": "SecurityCreationAPI_CreateCashRepoSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "cash_repo_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1CashRepoSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1CashRepoSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/cashTimeDepositSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create CASH/TD Securities based upon inputs provided by user\n\nWhen creating CASH/TD security, required fields are:\n\n   - rateType          \t\t - ex: MAT\n\nWhen rateType is FIXED, required fields are\n\n   - paymentFrequency      \t - ex: DAILY\n\n   - rate     \t\t \t\t - ex: 1\n\nWhen rateType is FLOAT, required fields are\n\n   - paymentFrequency      \t - ex: DAILY\n\n   - resetIndex      \t     - ex: PREVRATE\n\nYou MAY provide all other fields \n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: We need to do this way only --)",
                "summary": "Create CASH/TD Securities",
                "operationId": "SecurityCreationAPI_CreateCashTimeDepositSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "cash_time_deposit_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1CashTimeDepositSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1CashTimeDepositSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/cdsSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create CDS Securities based upon inputs provided by user\n\nWhen creating a CDS security, required fields are:\n\n   - dealSpread           - ex: DEAL_SPREAD_100\n\n   - maturityDate         - ex: 2026-06-01\n\n   - referenceEntity      - ex: F67209\n\n   - restructureType      - ex: RESTRUCTURE_TYPE_2014_MOD_MOD\n\nYou MAY provide all other fields\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create CDS Securities",
                "operationId": "SecurityCreationAPI_CreateCdsSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "cds_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1CdsSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1CdsSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/cdxSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create CDX Securities based upon inputs provided by user\n\nWhen creating a CDX security, required fields are:\n\n   - exchange          - Check out the decodes table CDS_EXCHANGE for corresponding cde value to be used. For example, use \"BILATERAL\" for BILATERAL.\n\ncdxInfo:\n\n   - basketTypeRating  - ex: BASKET_TYPE_RATING_INVESTMENT_GRADE\n\n   - indexType         - ex: INDEX_GROUP_CDX\n\n   - series      \t  - ex: 29\n\n   - term              - ex: 7\n\nYou MAY provide all other fields\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create CDX Securities",
                "operationId": "SecurityCreationAPI_CreateCdxSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "cdx_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1CdxSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1CdxSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/equityEquitySecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create EQUITY/EQUITY Securities based upon inputs provided by user\n\nWhen creating a EQUITY EQUITY security, required fields are:\n\n   - ticker             - ex: SPRGR\n\n   - name               - ex: AXEL SPRINGER SE NPV\n\n   - currencyCode       - ex: EUR\n\n   - countryCode        - ex: DE\n\n\t  - lotSize\t\t       - ex: 1.00\n\nYou MAY provide all other fields\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: We need to do this way only --)",
                "summary": "Create EQUITY/EQUITY Securities",
                "operationId": "SecurityCreationAPI_CreateEquityEquitySecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "equity_equity_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1EquityEquitySecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1EquityEquitySecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/equityOptionSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create Equity Option Securities based upon inputs provided by user\n\nWhen creating an Equity Option security, required fields are:\n\n   - equityOptionType        - ex: EQUITY_OPTION_TYPE_OTC\n\n   - expirationDate         \t- ex: 2022-08-24\n\n   - strikePrice      \t \t- ex: 13\n\n   - underlyingAssetId       - ex: 037833100\n\n   - callPutType         \t- ex: CALL_PUT_TYPE_CALL\n\nYou MAY provide all other fields when Equity Option type is OTC\n\nYou MAY provide all other fields except fxRate and expiryTime when Equity Option type is FLEX\n\nYou should not provide all other fields except exchange when Equity Option type is LISTED\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create Equity Option Securities",
                "operationId": "SecurityCreationAPI_CreateEquityOptionSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "equity_option_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1EquityOptionSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1EquityOptionSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/futuresSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create Futures Securities based upon inputs provided by user\n\nWhen creating a Futures security, required fields may vary:\n\nCase 1: If RIC is provided, no other fields are needed:\n\n   - ric        \t\t\t\t- ex: PFDH1\n\nCase 2: If no RIC is provided, required fields are:\n\n   - contractMonth      \t \t- ex: MARCH\n\n   - contractName       \t\t- ex: COTTON\n\n   - contractYear         \t- ex: 23\n\nYou MAY provide all other fields except RIC\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create Futures Securities",
                "operationId": "SecurityCreationAPI_CreateFuturesSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "futures_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1FuturesSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1FuturesSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/fxOptionSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create FX Option Securities based upon inputs provided by user\n\nWhen creating a FX Option security, required fields may vary based upon Option Style\n\nCase 1. When Option Style is American or European or FVA, required fields are:\n\n   - optionStyle           - ex: OPTION_STYLE_AMERICAN\n\n   - callPutType           - ex: CALL_PUT_TYPE_CALL\n\n   - strike      \t   \t  - ex: 1\n\n   - expirationDate        - ex: 2026-06-20\n\n   - currencyPair          - ex: USDCAD\n\nYou MAY provide all other fields except barrier information as it is not needed when option style is American or European or FVA\n\nCase 2. When Option Style is Double Knock In or Double Knock Out, required fields are:\n\n   - optionStyle           - ex: OPTION_STYLE_DOUBLE_KNOCK_IN\n\n   - callPutType           - ex: CALL_PUT_TYPE_CALL\n\n   - strike      \t   \t  - ex: 1\n\n   - expirationDate        - ex: 2026-06-20\n\n   - currencyPair          - ex: USDCAD\n\n   - lowerBarrier      \t  - ex: 1\n\n   - upperBarrier      \t  - ex: 2\n\nYou MAY provide other fields\n\nCase 3. When Option Style is Up and In or Up and Out, required fields are:\n\n   - optionStyle           - ex: OPTION_STYLE_UP_AND_IN\n\n   - callPutType           - ex: CALL_PUT_TYPE_CALL\n\n   - strike      \t   \t  - ex: 1\n\n   - expirationDate        - ex: 2026-06-20\n\n   - currencyPair          - ex: USDCAD\n\n   - upperBarrier      \t  - ex: 2\n\nYou MAY provide all other fields except lowerBarrier as it is not needed when option style is Up and In or Up and Out\n\nCase 4. When Option Style is Down and In or Down and Out, required fields are:\n\n   - optionStyle           - ex: OPTION_STYLE_DOWN_AND_IN\n\n   - callPutType           - ex: CALL_PUT_TYPE_CALL\n\n   - strike      \t   \t  - ex: 1\n\n   - expirationDate        - ex: 2026-06-20\n\n   - currencyPair          - ex: USDCAD\n\n   - lowerBarrier      \t  - ex: 2\n\nYou MAY provide all other fields except upperBarrier as it is not needed when option style is Down and In or Down and Out\n\nCase 5. When Option Style is One Touch or Instant One Touch or No Touch, required fields are:\n\n   - optionStyle           \t\t\t\t  - ex: OPTION_STYLE_ONE_TOUCH\n\n   - expirationDate        \t\t\t\t  - ex: 2026-06-20\n\n   - currencyPair          \t\t\t\t  - ex: USDCAD\n\n   - lowerBarrier or upperBarrier      \t  - ex: 2\n\nYou MAY provide all other fields except callPutType, nonDeliverable and strike as they are not needed when option style is One Touch or Instant One Touch or No Touch\n\nCase 6. When Option Style is Double Touch or Double No Touch, required fields are:\n\n   - optionStyle           \t\t\t\t  - ex: OPTION_STYLE_DOUBLE_TOUCH\n\n   - expirationDate        \t\t\t\t  - ex: 2026-06-20\n\n   - currencyPair          \t\t\t\t  - ex: USDCAD\n\n   - lowerBarrier      \t  \t\t\t\t  - ex: 1\n\n   - upperBarrier      \t \t\t\t\t  - ex: 2\n\nYou MAY provide all other fields except callPutType, nonDeliverable and strike as they are not needed when option style is Double Touch or Double No Touch\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create FX Option Securities",
                "operationId": "SecurityCreationAPI_CreateFxOptionSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "fx_option_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1FxOptionSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1FxOptionSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/fxSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create FX SPOT, FX FWRD, FX CSWAP Securities based upon inputs provided by user\n\nWhen creating a FX security, required fields are:\n\n   - currencyPair      - ex: USDCAD\n\nYou MAY provide all other fields \n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)\n(-- api-linter: aladdin::9105::method-comment-summary=disabled\n aip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create FX SPOT, FX FWRD, FX CSWAP Securities",
                "operationId": "SecurityCreationAPI_CreateFxSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "fx_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1FxSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1FxSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/fxndfSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create FX NDF Securities based upon inputs provided by user\n\nWhen creating a FX NDF security, required fields are:\n\n   - currencyPair      - ex: USDCAD\n\n   - valueDate         - ex: 2022-08-11\n\nYou MAY provide all other fields \n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create FX NDF Securities",
                "operationId": "SecurityCreationAPI_CreateFxndfSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "fxndf_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1FxndfSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1FxndfSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/interestRateSwapSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create Interest Rate Swap Securities based upon inputs provided by user\n\nWhen creating an Interest Rate Swap security, required fields may vary based upon Swap type\n\nBy default, Pay Leg Swap type is FLOAT and Rec Leg Swap type is FIXED\n\nCase 1. When Swap type is not provided by user, it will take default values for Swap type, and required fields are:\n\n   - maturityDate        - ex: 2022-12-24\n\nswapInfo -\u003e recLeg\n\n   - rate      \t   \t    - ex: 1\n\nCase 2. When both Leg are of FLOAT type, required fields are:\n\n   - maturityDate        - ex: 2022-12-24\n\nswapInfo -\u003e recLeg\n\n   - type      \t   \t\t- ex: SWAP_LEG_FLOAT\n\n   - resetIndex         \t- ex: US3MLIB\n\nswapInfo -\u003e payLeg\n\n   - type      \t  \t \t- ex: SWAP_LEG_FLOAT\n\n   - resetIndex         \t- ex: US3MLIB\n\nYou MAY provide all other fields \n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create Interest Rate Swap Securities",
                "operationId": "SecurityCreationAPI_CreateInterestRateSwapSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "interest_rate_swap_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1InterestRateSwapSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1InterestRateSwapSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/mbsTbaSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create MBS/TBA Securities based upon inputs provided by user\n\nWhen creating MBS/TBA security, required fields are\n\n   - agency      \t \t\t\t- ex: GNMAII\n\n   - term      \t \t \t\t\t- ex: 10\t\t\n\n   - coupon      \t \t \t\t- ex: 1.0\t\t\n\nYou MAY provide all other fields\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: We need to do this way only --)",
                "summary": "Create MBS/TBA Securities",
                "operationId": "SecurityCreationAPI_CreateMbsTbaSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ambs_tba_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1MbsTbaSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1MbsTbaSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/swaptionSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create Swaption Securities based upon inputs provided by user\n\nWhen creating a Swaption security, required fields may vary based upon Swaption type\n\nBy default, Swaption type is Plain Vanilla\n\nCase 1. When Swaption type is Plain Vanilla, required fields are:\n\n   - swaptionType           - ex: SWAPTION_TYPE_PLAIN_VANILLA\n\n   - expirationDate         - ex: 2026-06-20\n\n   - callPutType      \t   - ex: CALL_PUT_TYPE_PUT\n\n   - underlyingTerm         - ex: 1\n\nYou MAY provide all other fields except underlyingStart\n\nCase 2. When Swaption type is Mid Curve, required fields are:\n\n   - swaptionType           - ex: SWAPTION_TYPE_MID_CURVE\n\n   - expirationDate         - ex: 2026-06-20\n\n   - callPutType      \t   - ex: CALL_PUT_TYPE_PUT\n\n   - underlyingTerm         - ex: 1\n\n   - underlyingStart\t\t   - ex: 1\n\nYou MAY provide all other fields \n\nCase 3. When Swaption type is CDX, required fields are:\n\n   - swaptionType           - ex: SWAPTION_TYPE_CDX\n\n   - expirationDate         - ex: 2026-06-20\n\n   - callPutType      \t   - ex: CALL_PUT_TYPE_PUT\n\nunderlyingCdxInfo:\n\n   - basketTypeRating       - ex: BASKET_TYPE_RATING_INVESTMENT_GRADE\n\n   - indexType              - ex: INDEX_GROUP_CDX\n\n   - series      \t       - ex: 29\n\n   - term                   - ex: 7\n\nYou MAY provide all other fields except underlyingTerm and underlyingStart\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create Swaption Securities",
                "operationId": "SecurityCreationAPI_CreateSwaptionSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "swaption_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1SwaptionSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1SwaptionSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/totalReturnSwapSecurity": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "data.reference_data.asset.asset_creation.v1.SecurityCreation:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create Total Return Swap Securities based upon inputs provided by user\n\nWhen creating a Total Return Swap security, required fields may vary based upon Swap type\n\nRec Leg Swap type is always FLOAT\n\nBy default, Pay Leg Swap type is FlOAT\n\nCase 1. When Pay Leg Swap type is not provided by user, it will take default value for Swap type, and required fields are:\n\nswapInfo -\u003e payLeg\n\n   - endDate     \t   \t   \t\t- ex: 2022-12-24\n\nswapInfo -\u003e recLeg\n\n   - endDate      \t   \t\t\t- ex: 2022-12-24\n\n   - underlyingAssetId         \t- ex: BRSQRCT63\n\nYou may provide all other fields except rate as it is not needed when Pay Leg is of FLOAT type\n\nCase 2. When Pay Leg Swap type is provided by user, required fields will be same as in Case 1\n\nYou may provide all other fields except initialRate, spread and resetIndex as it is not needed when Pay Leg is of FIXED type\n(-- api-linter: aladdin::9105::method-comment-description=disabled\naip.dev/not-precedent: This description was present before this change. --)",
                "summary": "Create Total Return Swap Securities",
                "operationId": "SecurityCreationAPI_CreateTotalReturnSwapSecurity",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "total_return_swap_security_request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reference_dataassetv1TotalReturnSwapSecurity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/assetasset_creationv1TotalReturnSwapSecurity"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "assetasset_creationv1ArmTbaSecurity": {
            "type": "object",
            "title": "Response message for ARM/TBA securities",
            "properties": {
                "armTbaSecurityResponse": {
                    "title": "Response message for ARM/TBA securities",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1CashRepoSecurity": {
            "type": "object",
            "title": "Response message for CASH/REPO securities",
            "properties": {
                "cashRepoSecurityResponse": {
                    "title": "cash_repo_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1CashTimeDepositSecurity": {
            "type": "object",
            "title": "Response message for CASH/TD securities",
            "properties": {
                "cashTimeDepositSecurityResponse": {
                    "title": "cash_time_deposit_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1CdsSecurity": {
            "type": "object",
            "title": "Response message for CDS securities",
            "properties": {
                "cdsSecurityResponse": {
                    "title": "cds_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1CdxSecurity": {
            "type": "object",
            "title": "Response message for CDX securities",
            "properties": {
                "cdxSecurityResponse": {
                    "title": "cdx_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1EquityEquitySecurity": {
            "type": "object",
            "title": "Response message for Equity/Equity securities",
            "properties": {
                "equityEquitySecurityResponse": {
                    "title": "equity_equity_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1EquityOptionSecurity": {
            "type": "object",
            "title": "Response message for Equity Option securities",
            "properties": {
                "equityOptionSecurityResponse": {
                    "title": "equity_option_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1FuturesSecurity": {
            "type": "object",
            "title": "Response message for Futures securities",
            "properties": {
                "futuresSecurityResponse": {
                    "title": "future_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1FxOptionSecurity": {
            "type": "object",
            "title": "Response message for FX Option securities",
            "properties": {
                "fxOptionSecurityResponse": {
                    "title": "fx_option_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1FxSecurity": {
            "type": "object",
            "title": "Response message for FX SPOT, FX FWRD, FX CSWAP securities",
            "properties": {
                "fxSecurityResponse": {
                    "title": "fx_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1FxndfSecurity": {
            "type": "object",
            "title": "Response message for FX NDF securities",
            "properties": {
                "fxndfSecurityResponse": {
                    "title": "fxndf_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1InterestRateSwapSecurity": {
            "type": "object",
            "title": "Response message for Interest rate swap securities",
            "properties": {
                "interestRateSwapSecurityResponse": {
                    "title": "interest_rate_swap_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1MbsTbaSecurity": {
            "type": "object",
            "title": "Response message for MBS/TBA securities",
            "properties": {
                "mbsTbaSecurityResponse": {
                    "title": "Response message for MBS/TBA securities",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1SwaptionSecurity": {
            "type": "object",
            "title": "Response message for Swaption securities",
            "properties": {
                "swaptionSecurityResponse": {
                    "title": "swaption_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "assetasset_creationv1TotalReturnSwapSecurity": {
            "type": "object",
            "title": "Response message for Total return Swap securities",
            "properties": {
                "totalReturnSwapSecurityResponse": {
                    "title": "total_return_swap_security_response",
                    "$ref": "#/definitions/v1CreateSecurityResponse"
                }
            }
        },
        "enumsAccrualBase": {
            "description": "- ACCRUAL_BASE_UNSPECIFIED: UNSPECIFIED\n - ACCRUAL_BASE_D30360: D30360\n - ACCRUAL_BASE_ACT360: ACT360\n - ACCRUAL_BASE_ACT365: ACT365\n - ACCRUAL_BASE_30E360: 30E360\n - ACCRUAL_BASE_BUS252: BUS252\n - ACCRUAL_BASE_ACT365L: ACT365L\n - ACCRUAL_BASE_ACTACT: ACTACT\n - ACCRUAL_BASE_30P360: 30P360\n - ACCRUAL_BASE_C30360: C30360\n - ACCRUAL_BASE_N30360: N30360\n - ACCRUAL_BASE_ACT366: ACT366\n - ACCRUAL_BASE_NL365: NL365",
            "type": "string",
            "title": "enum AccrualBase represents how interest amounts are calculated both for payments and accruals, for example,  D30/360, ACT/360 etc",
            "default": "ACCRUAL_BASE_UNSPECIFIED",
            "enum": [
                "ACCRUAL_BASE_UNSPECIFIED",
                "ACCRUAL_BASE_D30360",
                "ACCRUAL_BASE_ACT360",
                "ACCRUAL_BASE_ACT365",
                "ACCRUAL_BASE_30E360",
                "ACCRUAL_BASE_BUS252",
                "ACCRUAL_BASE_ACT365L",
                "ACCRUAL_BASE_ACTACT",
                "ACCRUAL_BASE_30P360",
                "ACCRUAL_BASE_C30360",
                "ACCRUAL_BASE_N30360",
                "ACCRUAL_BASE_ACT366",
                "ACCRUAL_BASE_NL365"
            ]
        },
        "enumsAccrualPeriod": {
            "description": "- ACCRUAL_PERIOD_UNSPECIFIED: UNSPECIFIED\n - ACCRUAL_PERIOD_EXCLUDE_ALL_PAYMENT_DELAYS: EXCLUDE_ALL_PAYMENT_DELAYS\n - ACCRUAL_PERIOD_INCLUDE_FIRST_PAYMENT_DELAY: INCLUDE_FIRST_PAYMENT_DELAY\n - ACCRUAL_PERIOD_INCLUDE_ALL_PAYMENT_DELAYS: INCLUDE_ALL_PAYMENT_DELAYS",
            "type": "string",
            "title": "enum AccrualPeriod represents the period commencing on, for example, EXCLUDE ALL PAYMENT DELAYS OR INCLUDE ALL PAYMENT DELAYS",
            "default": "ACCRUAL_PERIOD_UNSPECIFIED",
            "enum": [
                "ACCRUAL_PERIOD_UNSPECIFIED",
                "ACCRUAL_PERIOD_EXCLUDE_ALL_PAYMENT_DELAYS",
                "ACCRUAL_PERIOD_INCLUDE_FIRST_PAYMENT_DELAY",
                "ACCRUAL_PERIOD_INCLUDE_ALL_PAYMENT_DELAYS"
            ]
        },
        "enumsAdjustMethod": {
            "description": "- ADJUST_METHOD_UNSPECIFIED: UNSPECIFIED\n - ADJUST_METHOD_NO_ADJUST: NO ADJUST\n - ADJUST_METHOD_FOLLOWING: FOLLOWING\n - ADJUST_METHOD_MOD_FOLLOWING: MOD FOLLOWING\n - ADJUST_METHOD_PREVIOUS: PREVIOUS\n - ADJUST_METHOD_KOREAN: KOREAN\n - ADJUST_METHOD_FRN: FRN",
            "type": "string",
            "title": "enum AdjustMethod represents method of adjustment, for example, NO ADJUST, FOLLOWING etc",
            "default": "ADJUST_METHOD_UNSPECIFIED",
            "enum": [
                "ADJUST_METHOD_UNSPECIFIED",
                "ADJUST_METHOD_NO_ADJUST",
                "ADJUST_METHOD_FOLLOWING",
                "ADJUST_METHOD_MOD_FOLLOWING",
                "ADJUST_METHOD_PREVIOUS",
                "ADJUST_METHOD_KOREAN",
                "ADJUST_METHOD_FRN"
            ]
        },
        "enumsAgency": {
            "description": "- AGENCY_UNSPECIFIED: UNSPECIFIED\n - AGENCY_FGOLD: FGOLD\n - AGENCY_FHLMC: FHLMC\n - AGENCY_FNMA: FNMA\n - AGENCY_GNMAII: GNMAII\n - AGENCY_GNMA: GNMA\n - AGENCY_UMBS: UMBS",
            "type": "string",
            "title": "enum Agency",
            "default": "AGENCY_UNSPECIFIED",
            "enum": [
                "AGENCY_UNSPECIFIED",
                "AGENCY_FGOLD",
                "AGENCY_FHLMC",
                "AGENCY_FNMA",
                "AGENCY_GNMAII",
                "AGENCY_GNMA",
                "AGENCY_UMBS"
            ]
        },
        "enumsAgreedDiscountRate": {
            "description": "- AGREED_DISCOUNT_RATE_UNSPECIFIED: UNSPECIFIED\n - AGREED_DISCOUNT_RATE_EURO_SHORT_TERM_RATE: ESTR\n - AGREED_DISCOUNT_RATE_SECURED_OVERNIGHT_FINANCING_RATE: SOFRRATE\n - AGREED_DISCOUNT_RATE_STERLING_OVERNIGHT_INDEX_AVERAGE: SONIA\n - AGREED_DISCOUNT_RATE_EFFECTIVE_OVERNIGHT_INDEX_AVERAGE: EONIA\n - AGREED_DISCOUNT_RATE_OVERNIGHT_FED_FUNDS_EFFECTIVE_RATE: FEDL01",
            "type": "string",
            "title": "enum AgreedDiscountRate",
            "default": "AGREED_DISCOUNT_RATE_UNSPECIFIED",
            "enum": [
                "AGREED_DISCOUNT_RATE_UNSPECIFIED",
                "AGREED_DISCOUNT_RATE_EURO_SHORT_TERM_RATE",
                "AGREED_DISCOUNT_RATE_SECURED_OVERNIGHT_FINANCING_RATE",
                "AGREED_DISCOUNT_RATE_STERLING_OVERNIGHT_INDEX_AVERAGE",
                "AGREED_DISCOUNT_RATE_EFFECTIVE_OVERNIGHT_INDEX_AVERAGE",
                "AGREED_DISCOUNT_RATE_OVERNIGHT_FED_FUNDS_EFFECTIVE_RATE"
            ]
        },
        "enumsAmortTiming": {
            "description": "- AMORT_TIMING_UNSPECIFIED: UNSPECIFIED\n - AMORT_TIMING_AT_FIXING: AT_FIXING\n - AMORT_TIMING_AT_PAYMENT: AT_PAYMENT",
            "type": "string",
            "title": "enum AmortTiming represents amort timing, for example, AT FIXING or AT PAYMENT",
            "default": "AMORT_TIMING_UNSPECIFIED",
            "enum": [
                "AMORT_TIMING_UNSPECIFIED",
                "AMORT_TIMING_AT_FIXING",
                "AMORT_TIMING_AT_PAYMENT"
            ]
        },
        "enumsArmStructure": {
            "description": "- ARM_STRUCTURE_UNSPECIFIED: UNSPECIFIED\n - ARM_STRUCTURE_0_0: 0/0\n - ARM_STRUCTURE_0_1: 0/1\n - ARM_STRUCTURE_1_1: 1/1\n - ARM_STRUCTURE_10_0: 10/0\n - ARM_STRUCTURE_10_1: 10/1\n - ARM_STRUCTURE_10_10: 10/10\n - ARM_STRUCTURE_10_5: 10/5\n - ARM_STRUCTURE_10_6M: 10/6M\n - ARM_STRUCTURE_2_0: 2/0\n - ARM_STRUCTURE_2_1: 2/1\n - ARM_STRUCTURE_3_0: 3/0\n - ARM_STRUCTURE_3_1: 3/1\n - ARM_STRUCTURE_3_2: 3/2\n - ARM_STRUCTURE_3_3: 3/3\n - ARM_STRUCTURE_3_6M: 3/6M\n - ARM_STRUCTURE_5_0: 5/0\n - ARM_STRUCTURE_5_1: 5/1\n - ARM_STRUCTURE_5_3: 5/3\n - ARM_STRUCTURE_5_5: 5/5\n - ARM_STRUCTURE_5_6M: 5/6M\n - ARM_STRUCTURE_7_0: 7/0\n - ARM_STRUCTURE_7_1: 7/1\n - ARM_STRUCTURE_7_6: 7/6\n - ARM_STRUCTURE_7_6M: 7/6M\n - ARM_STRUCTURE_7_7: 7/7\n - ARM_STRUCTURE_9_0: 9/0",
            "type": "string",
            "title": "enum ArmStructure",
            "default": "ARM_STRUCTURE_UNSPECIFIED",
            "enum": [
                "ARM_STRUCTURE_UNSPECIFIED",
                "ARM_STRUCTURE_0_0",
                "ARM_STRUCTURE_0_1",
                "ARM_STRUCTURE_1_1",
                "ARM_STRUCTURE_10_0",
                "ARM_STRUCTURE_10_1",
                "ARM_STRUCTURE_10_10",
                "ARM_STRUCTURE_10_5",
                "ARM_STRUCTURE_10_6M",
                "ARM_STRUCTURE_2_0",
                "ARM_STRUCTURE_2_1",
                "ARM_STRUCTURE_3_0",
                "ARM_STRUCTURE_3_1",
                "ARM_STRUCTURE_3_2",
                "ARM_STRUCTURE_3_3",
                "ARM_STRUCTURE_3_6M",
                "ARM_STRUCTURE_5_0",
                "ARM_STRUCTURE_5_1",
                "ARM_STRUCTURE_5_3",
                "ARM_STRUCTURE_5_5",
                "ARM_STRUCTURE_5_6M",
                "ARM_STRUCTURE_7_0",
                "ARM_STRUCTURE_7_1",
                "ARM_STRUCTURE_7_6",
                "ARM_STRUCTURE_7_6M",
                "ARM_STRUCTURE_7_7",
                "ARM_STRUCTURE_9_0"
            ]
        },
        "enumsBasketTypeAssetType": {
            "description": "- BASKET_TYPE_ASSET_TYPE_UNSPECIFIED: UNSPECIFIED\n - BASKET_TYPE_ASSET_TYPE_LOAN: LOAN",
            "type": "string",
            "title": "enum BasketTypeAssetType represents underlying security basket type, for example LOAN",
            "default": "BASKET_TYPE_ASSET_TYPE_UNSPECIFIED",
            "enum": [
                "BASKET_TYPE_ASSET_TYPE_UNSPECIFIED",
                "BASKET_TYPE_ASSET_TYPE_LOAN"
            ]
        },
        "enumsBasketTypeRating": {
            "description": "enum BasketTypeRating represents underlying security basket type, for example A, AA etc.\n\n - BASKET_TYPE_RATING_UNSPECIFIED: UNSPECIFIED\n - BASKET_TYPE_RATING_A: A\n - BASKET_TYPE_RATING_AA: AA\n - BASKET_TYPE_RATING_AAA: AAA\n - BASKET_TYPE_RATING_AAA_JUNIOR: AAA_JUNIOR\n - BASKET_TYPE_RATING_AAA_PENT_ULTIMATE: AAA_PENT_ULTIMATE\n - BASKET_TYPE_RATING_AAA_MEZZANINE: AAA_MEZZANINE\n - BASKET_TYPE_RATING_AAA_ARM: AAA_ARM\n - BASKET_TYPE_RATING_AAA_FRM: AAA FRM\n - BASKET_TYPE_RATING_BB: BB\n - BASKET_TYPE_RATING_BBB: BBB\n - BASKET_TYPE_RATING_BBB_MINUS: BBB_MINUS\n - BASKET_TYPE_RATING_CROSSOVER: CROSSOVER\n - BASKET_TYPE_RATING_HIGH_YIELD: HIGH YIELD\n - BASKET_TYPE_RATING_HIGH_YIELD_B: HIGH YIELD B\n - BASKET_TYPE_RATING_HIGH_YIELD_BB: HIGH YIELD BB\n - BASKET_TYPE_RATING_HIGH_YIELD_HB: HIGH YIELD HB\n - BASKET_TYPE_RATING_HIGH_YIELD_EX_BB: HIGH YIELD EX B\n - BASKET_TYPE_RATING_INVESTMENT_GRADE: INVESTMENT GRADE\n - BASKET_TYPE_RATING_INVESTMENT_GRADE_BBB: INVESTMENT GRADE BBB",
            "type": "string",
            "default": "BASKET_TYPE_RATING_UNSPECIFIED",
            "enum": [
                "BASKET_TYPE_RATING_UNSPECIFIED",
                "BASKET_TYPE_RATING_A",
                "BASKET_TYPE_RATING_AA",
                "BASKET_TYPE_RATING_AAA",
                "BASKET_TYPE_RATING_AAA_JUNIOR",
                "BASKET_TYPE_RATING_AAA_PENT_ULTIMATE",
                "BASKET_TYPE_RATING_AAA_MEZZANINE",
                "BASKET_TYPE_RATING_AAA_ARM",
                "BASKET_TYPE_RATING_AAA_FRM",
                "BASKET_TYPE_RATING_BB",
                "BASKET_TYPE_RATING_BBB",
                "BASKET_TYPE_RATING_BBB_MINUS",
                "BASKET_TYPE_RATING_CROSSOVER",
                "BASKET_TYPE_RATING_HIGH_YIELD",
                "BASKET_TYPE_RATING_HIGH_YIELD_B",
                "BASKET_TYPE_RATING_HIGH_YIELD_BB",
                "BASKET_TYPE_RATING_HIGH_YIELD_HB",
                "BASKET_TYPE_RATING_HIGH_YIELD_EX_BB",
                "BASKET_TYPE_RATING_INVESTMENT_GRADE",
                "BASKET_TYPE_RATING_INVESTMENT_GRADE_BBB"
            ]
        },
        "enumsBasketTypeRegion": {
            "description": "enum BasketTypeRegion represents underlying security basket type, for example AUSTRALIA, EUROPE etc.\n\n - BASKET_TYPE_REGION_UNSPECIFIED: UNSPECIFIED\n - BASKET_TYPE_REGION_ASIA_EX_JAPAN: ASIA_EX_JAPAN\n - BASKET_TYPE_REGION_ASIA_EX_JAPAN_HY: ASIA_EX_JAPAN_HY\n - BASKET_TYPE_REGION_ASIA_EX_JAPAN_IG: ASIA_EX_JAPAN_IG\n - BASKET_TYPE_REGION_AUSTRALIA: AUSTRALIA\n - BASKET_TYPE_REGION_CEEMEA: CEEMEA\n - BASKET_TYPE_REGION_CEEMEA_EX_EU: CEEMEA_EX_EU\n - BASKET_TYPE_REGION_EM_EX_EU: EM EX EU\n - BASKET_TYPE_REGION_EUROPE: EUROPE\n - BASKET_TYPE_REGION_JAPAN: JAPAN\n - BASKET_TYPE_REGION_NORTH_AMERICA: NORTH AMERICA\n - BASKET_TYPE_REGION_SOVX_ASIA_PACIFIC: SOVX ASIA PACIFIC\n - BASKET_TYPE_REGION_SOVX_WESTERN_EUROPE: SOVX WESTERN EUROPE\n - BASKET_TYPE_REGION_LATIN_AMERICA_CORP: LATIN AMERICA CORP\n - BASKET_TYPE_REGION_JAPAN_80: LATIN JAPAN 80\n - BASKET_TYPE_REGION_JAPAN_HIVOL: JAPAN HIVOL",
            "type": "string",
            "default": "BASKET_TYPE_REGION_UNSPECIFIED",
            "enum": [
                "BASKET_TYPE_REGION_UNSPECIFIED",
                "BASKET_TYPE_REGION_ASIA_EX_JAPAN",
                "BASKET_TYPE_REGION_ASIA_EX_JAPAN_HY",
                "BASKET_TYPE_REGION_ASIA_EX_JAPAN_IG",
                "BASKET_TYPE_REGION_AUSTRALIA",
                "BASKET_TYPE_REGION_CEEMEA",
                "BASKET_TYPE_REGION_CEEMEA_EX_EU",
                "BASKET_TYPE_REGION_EM_EX_EU",
                "BASKET_TYPE_REGION_EUROPE",
                "BASKET_TYPE_REGION_JAPAN",
                "BASKET_TYPE_REGION_NORTH_AMERICA",
                "BASKET_TYPE_REGION_SOVX_ASIA_PACIFIC",
                "BASKET_TYPE_REGION_SOVX_WESTERN_EUROPE",
                "BASKET_TYPE_REGION_LATIN_AMERICA_CORP",
                "BASKET_TYPE_REGION_JAPAN_80",
                "BASKET_TYPE_REGION_JAPAN_HIVOL"
            ]
        },
        "enumsBasketTypeSector": {
            "description": "enum BasketTypeSector represents underlying security basket type, for example CONSUMER PRODUCTS, EMERGING MARKET etc.\n\n - BASKET_TYPE_SECTOR_UNSPECIFIED: UNSPECIFIED\n - BASKET_TYPE_SECTOR_CONSUMER_PRODUCTS: CONSUMER PRODUCTS\n - BASKET_TYPE_SECTOR_EMERGING_MARKETS: EMERGING MARKETS\n - BASKET_TYPE_SECTOR_EMERGING_DIVERSIFIED: EMERGING DIVERSIFIED\n - BASKET_TYPE_SECTOR_ENERGY: ENERGY\n - BASKET_TYPE_SECTOR_ESG_SCREENED_EU: ESG SCREENED EU\n - BASKET_TYPE_SECTOR_FINANCIALS_DJ: FINANCIALS DJ\n - BASKET_TYPE_SECTOR_FINANCIALS_SENIOR: FINANCIALS SENIOR\n - BASKET_TYPE_SECTOR_FINANCIALS_SUB: FINANCIALS SUB\n - BASKET_TYPE_SECTOR_HIGH_VOLATILITY: HIGH VOLATILITY\n - BASKET_TYPE_SECTOR_INDUSTRIALS: INDUSTRIALS\n - BASKET_TYPE_SECTOR_NON_FINANCIALS: NON FINANCIALS\n - BASKET_TYPE_SECTOR_SOVX_CEEMEA: SOVX CEEMEA\n - BASKET_TYPE_SECTOR_SOVX_G7: SOVX G7\n - BASKET_TYPE_SECTOR_SOVX_GLOBAL_LIQUID_IG: SOVX GLOBAL LIQUID IG\n - BASKET_TYPE_SECTOR_TMT: TMT\n - BASKET_TYPE_SECTOR_TRACX: TRACX",
            "type": "string",
            "default": "BASKET_TYPE_SECTOR_UNSPECIFIED",
            "enum": [
                "BASKET_TYPE_SECTOR_UNSPECIFIED",
                "BASKET_TYPE_SECTOR_CONSUMER_PRODUCTS",
                "BASKET_TYPE_SECTOR_EMERGING_MARKETS",
                "BASKET_TYPE_SECTOR_EMERGING_DIVERSIFIED",
                "BASKET_TYPE_SECTOR_ENERGY",
                "BASKET_TYPE_SECTOR_ESG_SCREENED_EU",
                "BASKET_TYPE_SECTOR_FINANCIALS_DJ",
                "BASKET_TYPE_SECTOR_FINANCIALS_SENIOR",
                "BASKET_TYPE_SECTOR_FINANCIALS_SUB",
                "BASKET_TYPE_SECTOR_HIGH_VOLATILITY",
                "BASKET_TYPE_SECTOR_INDUSTRIALS",
                "BASKET_TYPE_SECTOR_NON_FINANCIALS",
                "BASKET_TYPE_SECTOR_SOVX_CEEMEA",
                "BASKET_TYPE_SECTOR_SOVX_G7",
                "BASKET_TYPE_SECTOR_SOVX_GLOBAL_LIQUID_IG",
                "BASKET_TYPE_SECTOR_TMT",
                "BASKET_TYPE_SECTOR_TRACX"
            ]
        },
        "enumsCallPutType": {
            "description": "- CALL_PUT_TYPE_UNSPECIFIED: UNSPECIFIED\n - CALL_PUT_TYPE_CALL: CALL\n - CALL_PUT_TYPE_PUT: PUT",
            "type": "string",
            "title": "enum CallPutType represents either CALL or PUT",
            "default": "CALL_PUT_TYPE_UNSPECIFIED",
            "enum": [
                "CALL_PUT_TYPE_UNSPECIFIED",
                "CALL_PUT_TYPE_CALL",
                "CALL_PUT_TYPE_PUT"
            ]
        },
        "enumsCapStructure": {
            "description": "- CAP_STRUCTURE_UNSPECIFIED: UNSPECIFIED\n - CAP_STRUCTURE_2_1_5: 2/1/5\n - CAP_STRUCTURE_2_2_6: 2/2/6\n - CAP_STRUCTURE_5_1_5: 5/1/5\n - CAP_STRUCTURE_2_2_5: 2/2/5\n - CAP_STRUCTURE_5_2_5: 5/2/5\n - CAP_STRUCTURE_1_1_5: 1/1/5\n - CAP_STRUCTURE_2_2_3: 2/2/3",
            "type": "string",
            "title": "enum CapStructure",
            "default": "CAP_STRUCTURE_UNSPECIFIED",
            "enum": [
                "CAP_STRUCTURE_UNSPECIFIED",
                "CAP_STRUCTURE_2_1_5",
                "CAP_STRUCTURE_2_2_6",
                "CAP_STRUCTURE_5_1_5",
                "CAP_STRUCTURE_2_2_5",
                "CAP_STRUCTURE_5_2_5",
                "CAP_STRUCTURE_1_1_5",
                "CAP_STRUCTURE_2_2_3"
            ]
        },
        "enumsCashTimeDepositClass": {
            "description": "- CASH_TIME_DEPOSIT_CLASS_UNSPECIFIED: UNSPECIFIED\n - CASH_TIME_DEPOSIT_CLASS_EURO: EURO\n - CASH_TIME_DEPOSIT_CLASS_YANKEE: YANKEE\n - CASH_TIME_DEPOSIT_CLASS_LP: LP\n - CASH_TIME_DEPOSIT_CLASS_BN: BN\n - CASH_TIME_DEPOSIT_CLASS_BEARER_DEPOSIT_NOTE: BEARER DEPOSIT NOTE\n - CASH_TIME_DEPOSIT_CLASS_DEPOSIT_NOTE: DEPOSIT NOTE\n - CASH_TIME_DEPOSIT_CLASS_GOVERNMENT_GUARANTEED: GOVERNMENT GUARANTEED\n - CASH_TIME_DEPOSIT_CLASS_GOVERNMENT_FRDEP: FRDEP",
            "type": "string",
            "title": "enum CashTimeDepositClass represents sec_desc2",
            "default": "CASH_TIME_DEPOSIT_CLASS_UNSPECIFIED",
            "enum": [
                "CASH_TIME_DEPOSIT_CLASS_UNSPECIFIED",
                "CASH_TIME_DEPOSIT_CLASS_EURO",
                "CASH_TIME_DEPOSIT_CLASS_YANKEE",
                "CASH_TIME_DEPOSIT_CLASS_LP",
                "CASH_TIME_DEPOSIT_CLASS_BN",
                "CASH_TIME_DEPOSIT_CLASS_BEARER_DEPOSIT_NOTE",
                "CASH_TIME_DEPOSIT_CLASS_DEPOSIT_NOTE",
                "CASH_TIME_DEPOSIT_CLASS_GOVERNMENT_GUARANTEED",
                "CASH_TIME_DEPOSIT_CLASS_GOVERNMENT_FRDEP"
            ]
        },
        "enumsCashTimeDepositRateType": {
            "description": "- CASH_TIME_DEPOSIT_RATE_TYPE_UNSPECIFIED: UNSPECIFIED\n - CASH_TIME_DEPOSIT_RATE_TYPE_MAT: MAT\n - CASH_TIME_DEPOSIT_RATE_TYPE_FIXED: FIXED\n - CASH_TIME_DEPOSIT_RATE_TYPE_FLOAT: FLOAT\n - CASH_TIME_DEPOSIT_RATE_TYPE_ZERO: ZERO",
            "type": "string",
            "title": "enum CashTimeDepositRateType represents rate type, for example, MAT, FLOAT, FIXED and ZERO",
            "default": "CASH_TIME_DEPOSIT_RATE_TYPE_UNSPECIFIED",
            "enum": [
                "CASH_TIME_DEPOSIT_RATE_TYPE_UNSPECIFIED",
                "CASH_TIME_DEPOSIT_RATE_TYPE_MAT",
                "CASH_TIME_DEPOSIT_RATE_TYPE_FIXED",
                "CASH_TIME_DEPOSIT_RATE_TYPE_FLOAT",
                "CASH_TIME_DEPOSIT_RATE_TYPE_ZERO"
            ]
        },
        "enumsCashTimeDepositStructure": {
            "description": "- CASH_TIME_DEPOSIT_STRUCTURE_UNSPECIFIED: UNSPECIFIED\n - CASH_TIME_DEPOSIT_STRUCTURE_ABCP: ABCP\n - CASH_TIME_DEPOSIT_STRUCTURE_EABCP: EABCP\n - CASH_TIME_DEPOSIT_STRUCTURE_ECN: ECN\n - CASH_TIME_DEPOSIT_STRUCTURE_MULTI_MODAL: MULTI MODAL\n - CASH_TIME_DEPOSIT_STRUCTURE_GOVERNMENT_GUARANTEED: GOVERNMENT GUARANTEED\n - CASH_TIME_DEPOSIT_STRUCTURE_ISLAMIC_SUKUK: ISLAMIC SUKUK",
            "type": "string",
            "title": "enum CashTimeDepositStructure",
            "default": "CASH_TIME_DEPOSIT_STRUCTURE_UNSPECIFIED",
            "enum": [
                "CASH_TIME_DEPOSIT_STRUCTURE_UNSPECIFIED",
                "CASH_TIME_DEPOSIT_STRUCTURE_ABCP",
                "CASH_TIME_DEPOSIT_STRUCTURE_EABCP",
                "CASH_TIME_DEPOSIT_STRUCTURE_ECN",
                "CASH_TIME_DEPOSIT_STRUCTURE_MULTI_MODAL",
                "CASH_TIME_DEPOSIT_STRUCTURE_GOVERNMENT_GUARANTEED",
                "CASH_TIME_DEPOSIT_STRUCTURE_ISLAMIC_SUKUK"
            ]
        },
        "enumsCollateralType": {
            "description": "- COLLATERAL_TYPE_UNSPECIFIED: UNSPECIFIED\n - COLLATERAL_TYPE_CASH: CASH\n - COLLATERAL_TYPE_US_TREASURY: US TREASURY\n - COLLATERAL_TYPE_EURO_CENTRAL_BANK: EURO CENTRAL BANK\n - COLLATERAL_TYPE_EU_GOVERNMENT: EU GOVERNMENT\n - COLLATERAL_TYPE_AGENCY_DEBENTURES_AND_STRIPS: AGENCY DEBENTURES AND STRIPS\n - COLLATERAL_TYPE_GNMA: GNMA\n - COLLATERAL_TYPE_GILT: GILT\n - COLLATERAL_TYPE_AGENCY_MBS: AGENCY MBS\n - COLLATERAL_TYPE_AGENCY_CMO: AGENCY CMO\n - COLLATERAL_TYPE_DBV: DBV\n - COLLATERAL_TYPE_STRIPPED_UKGOV: STRIPPED UKGOV\n - COLLATERAL_TYPE_STRIPPED_TREASURY_INFLATED_PROTECTION_SECURITY: TREASURY INFLATED PROTECTION SECURITY\n - COLLATERAL_TYPE_US_TREASURY_STRIPS: US TREASURY STRIPS\n - COLLATERAL_TYPE_AGENCY_INTEREST_ONLY_PRINCIPAL_ONLY: AGENCY INTEREST ONLY PRINCIPAL_ONLY",
            "type": "string",
            "title": "enum CollateralType",
            "default": "COLLATERAL_TYPE_UNSPECIFIED",
            "enum": [
                "COLLATERAL_TYPE_UNSPECIFIED",
                "COLLATERAL_TYPE_CASH",
                "COLLATERAL_TYPE_US_TREASURY",
                "COLLATERAL_TYPE_EURO_CENTRAL_BANK",
                "COLLATERAL_TYPE_EU_GOVERNMENT",
                "COLLATERAL_TYPE_AGENCY_DEBENTURES_AND_STRIPS",
                "COLLATERAL_TYPE_GNMA",
                "COLLATERAL_TYPE_GILT",
                "COLLATERAL_TYPE_AGENCY_MBS",
                "COLLATERAL_TYPE_AGENCY_CMO",
                "COLLATERAL_TYPE_DBV",
                "COLLATERAL_TYPE_STRIPPED_UKGOV",
                "COLLATERAL_TYPE_STRIPPED_TREASURY_INFLATED_PROTECTION_SECURITY",
                "COLLATERAL_TYPE_US_TREASURY_STRIPS",
                "COLLATERAL_TYPE_AGENCY_INTEREST_ONLY_PRINCIPAL_ONLY"
            ]
        },
        "enumsCouponCalcMethod": {
            "description": "enum CouponCalcMethod represents method of coupon calculation, for example, AVERAGE, COMPOUNDING etc.\n\n - COUPON_CALC_METHOD_UNSPECIFIED: UNSPECIFIED\n - COUPON_CALC_METHOD_AVERAGE: AVERAGE\n - COUPON_CALC_METHOD_COMPOUNDING: COMPOUNDING\n - COUPON_CALC_METHOD_FLAT_COMPOUNDING: FLAT COMPOUNDING\n - COUPON_CALC_METHOD_SIMPLE_SPREAD_COMPUNDING: SIMPLE SPREAD COMPUNDING\n - COUPON_CALC_METHOD_WEIGHTED_AVERAGE: WEIGHTED AVERAGE\n - COUPON_CALC_METHOD_FRACTION_OF_INDEX_VALUES: FRACTION OF INDEX VALUES\n - COUPON_CALC_METHOD_BRAZILIAN_COMPOUND_INDEX_AND_DI_SPREAD: BRAZILIAN COMPOUND INDEX AND DI SPREAD\n - COUPON_CALC_METHOD_BRAZILIAN_COMPOUND_INDEX_AND_DI_MULTIPLIER: BRAZILIAN COMPOUND AND DI MULTIPLIER",
            "type": "string",
            "default": "COUPON_CALC_METHOD_UNSPECIFIED",
            "enum": [
                "COUPON_CALC_METHOD_UNSPECIFIED",
                "COUPON_CALC_METHOD_AVERAGE",
                "COUPON_CALC_METHOD_COMPOUNDING",
                "COUPON_CALC_METHOD_FLAT_COMPOUNDING",
                "COUPON_CALC_METHOD_SIMPLE_SPREAD_COMPUNDING",
                "COUPON_CALC_METHOD_WEIGHTED_AVERAGE",
                "COUPON_CALC_METHOD_FRACTION_OF_INDEX_VALUES",
                "COUPON_CALC_METHOD_BRAZILIAN_COMPOUND_INDEX_AND_DI_SPREAD",
                "COUPON_CALC_METHOD_BRAZILIAN_COMPOUND_INDEX_AND_DI_MULTIPLIER"
            ]
        },
        "enumsDealSpread": {
            "description": "- DEAL_SPREAD_UNSPECIFIED: UNSPECIFIED\n - DEAL_SPREAD_25: 25\n - DEAL_SPREAD_100: 100\n - DEAL_SPREAD_300: 300\n - DEAL_SPREAD_500: 500\n - DEAL_SPREAD_750: 750\n - DEAL_SPREAD_1000: 1000",
            "type": "string",
            "title": "enum DealSpread represents deal spread in bps on the basis of which coupon is calculated, for example, 25, 100 etc",
            "default": "DEAL_SPREAD_UNSPECIFIED",
            "enum": [
                "DEAL_SPREAD_UNSPECIFIED",
                "DEAL_SPREAD_25",
                "DEAL_SPREAD_100",
                "DEAL_SPREAD_300",
                "DEAL_SPREAD_500",
                "DEAL_SPREAD_750",
                "DEAL_SPREAD_1000"
            ]
        },
        "enumsDealerRole": {
            "description": "- DEALER_ROLE_UNSPECIFIED: UNSPECIFIED\n - DEALER_ROLE_LEAD_MANAGER: LEAD MANAGER\n - DEALER_ROLE_BR_ACTIVE: BR-ACTIVE\n - DEALER_ROLE_BR_PASSIVE: BR-PASSIVE\n - DEALER_ROLE_CO_MANAGER: CO-MANAGER\n - DEALER_ROLE_DISCRETIONARY: DISCRETIONARY",
            "type": "string",
            "title": "enum Dealer Role",
            "default": "DEALER_ROLE_UNSPECIFIED",
            "enum": [
                "DEALER_ROLE_UNSPECIFIED",
                "DEALER_ROLE_LEAD_MANAGER",
                "DEALER_ROLE_BR_ACTIVE",
                "DEALER_ROLE_BR_PASSIVE",
                "DEALER_ROLE_CO_MANAGER",
                "DEALER_ROLE_DISCRETIONARY"
            ]
        },
        "enumsDelayType": {
            "description": "- DELAY_TYPE_UNSPECIFIED: UNSPECIFIED\n - DELAY_TYPE_BUSINESS: BUSINESS\n - DELAY_TYPE_CALENDAR: CALENDAR",
            "type": "string",
            "title": "enum DelayType represents either payment or reset delay should be BUSINESS or CALENDAR",
            "default": "DELAY_TYPE_UNSPECIFIED",
            "enum": [
                "DELAY_TYPE_UNSPECIFIED",
                "DELAY_TYPE_BUSINESS",
                "DELAY_TYPE_CALENDAR"
            ]
        },
        "enumsEquityOptionType": {
            "description": "- EQUITY_OPTION_TYPE_UNSPECIFIED: UNSPECIFIED\n - EQUITY_OPTION_TYPE_LISTED: LISTED\n - EQUITY_OPTION_TYPE_OTC: OTC\n - EQUITY_OPTION_TYPE_FLEX: FLEX",
            "type": "string",
            "title": "enum EquityOptionType represents type of EQUITY OPTION, for example, Listed, OTC and FLEX",
            "default": "EQUITY_OPTION_TYPE_UNSPECIFIED",
            "enum": [
                "EQUITY_OPTION_TYPE_UNSPECIFIED",
                "EQUITY_OPTION_TYPE_LISTED",
                "EQUITY_OPTION_TYPE_OTC",
                "EQUITY_OPTION_TYPE_FLEX"
            ]
        },
        "enumsExpiryTime": {
            "description": "- EXPIRY_TIME_UNSPECIFIED: UNSPECIFIED\n - EXPIRY_TIME_2_PM_TOKYO_TIME: 2_PM_TOKYO_TIME\n - EXPIRY_TIME_3_PM_TOKYO_TIME: 3_PM_TOKYO_TIME\n - EXPIRY_TIME_3_PM_LONDON_TIME: 3_PM_LONDON_TIME\n - EXPIRY_TIME_4_PM_LONDON_TIME: 4_PM_LONDON_TIME\n - EXPIRY_TIME_10_AM_NEWYORK_TIME: 10_AM_NEWYORK_TIME\n - EXPIRY_TIME_2_PM_ANKARA_CUT: 2_PM_ANKARA_CUT\n - EXPIRY_TIME_9_15_AM_BEIJING_CUT: 9_15_AM_BEIJING_CUT\n - EXPIRY_TIME_12_PM_BUDAPEST_CUT: 12_PM_BUDAPEST_CUT\n - EXPIRY_TIME_1_PM_BUENO_AIRES_CUT: 1_PM_BUENO_AIRES_CUT\n - EXPIRY_TIME_10_AM_JAKARTA_CUT: 10_AM_JAKARTA_CUT\n - EXPIRY_TIME_3_PM_KL_CUT: 3_PM_KL_CUT\n - EXPIRY_TIME_11_30_AM_MANILA_CUT: 11_30_AM_MANILA_CUT\n - EXPIRY_TIME_12_30_PM_NEWYORK_CUT: 12_30_PM_NEWYORK_CUT\n - EXPIRY_TIME_12_30_PM_MOSCOW_CUT: 12_30_PM_MOSCOW_CUT\n - EXPIRY_TIME_1_30_PM_MUMBAI_CUT: 1_30_PM_MUMBAI_CUT\n - EXPIRY_TIME_10_30_AM_SANTIAGO_CUT: 10_30_AM_SANTIAGO_CUT\n - EXPIRY_TIME_1_15_PM_SAO_PAULO_CUT: 1_15_PM_SAO_PAULO_CUT\n - EXPIRY_TIME_3_30_PM_SEOUL_CUT: 3_30_PM_SEOUL_CUT\n - EXPIRY_TIME_11_AM_TAIPEI_CUT: 11_AM_TAIPEI_CUT\n - EXPIRY_TIME_3_PM_TEL_AVIV_CUT: 3_PM_TEL_AVIV_CUT\n - EXPIRY_TIME_11_AM_WARSAW_CUT: 11_AM_WARSAW_CUT\n - EXPIRY_TIME_12_PM_LONDON_TIME: 12_PM_LONDON_TIME\n - EXPIRY_TIME_11_15_AM_HONGKONG_CUT: 11_15_AM_HONGKONG_CUT\n - EXPIRY_TIME_11_PM_TOKYO_TIME: 11_PM_TOKYO_TIME\n - EXPIRY_TIME_11_AM_TOKYO_TIME: 11_AM_TOKYO_TIME\n - EXPIRY_TIME_10_AM_NY_WMR_FIXING: 10_AM__NY_WMR_FIXING\n - EXPIRY_TIME_1_PM_BUCHAREST_CUT: 1_PM_BUCHAREST_CUT\n - EXPIRY_TIME_11_30_AM_HONGKONG_TIME: 11_30_AM_HONGKONG_TIME\n - EXPIRY_TIME_CLOSE: CLOSE\n - EXPIRY_TIME_EDSP: EDSP",
            "type": "string",
            "title": "enum ExpiryTime represents expiry time, for example, 2PM TOKYO TIME, 3PM TOKYO TIME etc",
            "default": "EXPIRY_TIME_UNSPECIFIED",
            "enum": [
                "EXPIRY_TIME_UNSPECIFIED",
                "EXPIRY_TIME_2_PM_TOKYO_TIME",
                "EXPIRY_TIME_3_PM_TOKYO_TIME",
                "EXPIRY_TIME_3_PM_LONDON_TIME",
                "EXPIRY_TIME_4_PM_LONDON_TIME",
                "EXPIRY_TIME_10_AM_NEWYORK_TIME",
                "EXPIRY_TIME_2_PM_ANKARA_CUT",
                "EXPIRY_TIME_9_15_AM_BEIJING_CUT",
                "EXPIRY_TIME_12_PM_BUDAPEST_CUT",
                "EXPIRY_TIME_1_PM_BUENO_AIRES_CUT",
                "EXPIRY_TIME_10_AM_JAKARTA_CUT",
                "EXPIRY_TIME_3_PM_KL_CUT",
                "EXPIRY_TIME_11_30_AM_MANILA_CUT",
                "EXPIRY_TIME_12_30_PM_NEWYORK_CUT",
                "EXPIRY_TIME_12_30_PM_MOSCOW_CUT",
                "EXPIRY_TIME_1_30_PM_MUMBAI_CUT",
                "EXPIRY_TIME_10_30_AM_SANTIAGO_CUT",
                "EXPIRY_TIME_1_15_PM_SAO_PAULO_CUT",
                "EXPIRY_TIME_3_30_PM_SEOUL_CUT",
                "EXPIRY_TIME_11_AM_TAIPEI_CUT",
                "EXPIRY_TIME_3_PM_TEL_AVIV_CUT",
                "EXPIRY_TIME_11_AM_WARSAW_CUT",
                "EXPIRY_TIME_12_PM_LONDON_TIME",
                "EXPIRY_TIME_11_15_AM_HONGKONG_CUT",
                "EXPIRY_TIME_11_PM_TOKYO_TIME",
                "EXPIRY_TIME_11_AM_TOKYO_TIME",
                "EXPIRY_TIME_10_AM_NY_WMR_FIXING",
                "EXPIRY_TIME_1_PM_BUCHAREST_CUT",
                "EXPIRY_TIME_11_30_AM_HONGKONG_TIME",
                "EXPIRY_TIME_CLOSE",
                "EXPIRY_TIME_EDSP"
            ]
        },
        "enumsFXType": {
            "description": "- FX_TYPE_UNSPECIFIED: UNSPECIFIED\n - FX_TYPE_SPOT: SPOT\n - FX_TYPE_FORWARD: FORWARD\n - FX_TYPE_CSWAP: CSWAP",
            "type": "string",
            "title": "enum FXType represents FX security type, for example, SPOT, FORWARD and CSWAP",
            "default": "FX_TYPE_UNSPECIFIED",
            "enum": [
                "FX_TYPE_UNSPECIFIED",
                "FX_TYPE_SPOT",
                "FX_TYPE_FORWARD",
                "FX_TYPE_CSWAP"
            ]
        },
        "enumsFrequencyType": {
            "description": "- FREQUENCY_TYPE_UNSPECIFIED: UNSPECIFIED\n - FREQUENCY_TYPE_ZERO: ZERO\n - FREQUENCY_TYPE_DAILY: DAILY\n - FREQUENCY_TYPE_WEEKLY: WEEKLY\n - FREQUENCY_TYPE_MONTHLY: MONTHLY\n - FREQUENCY_TYPE_BIMONTHLY: BIMONTHLY\n - FREQUENCY_TYPE_QUARTERLY: QUARTERLY\n - FREQUENCY_TYPE_SEMI_ANNUALLY: SEMI_ANNUALLY\n - FREQUENCY_TYPE_ANNUALLY: ANNUALLY\n - FREQUENCY_TYPE_N_CAL_DAYS: N_CAL_DAYS\n - FREQUENCY_TYPE_N_BUS_DAYS: N_BUS_DAYS\n - FREQUENCY_TYPE_M_PLUS_N_BUS_DAYS: M_PLUS_N_BUS_DAYS\n - FREQUENCY_TYPE_Q_PLUS_N_BUS_DAYS: Q_PLUS_N_BUS_DAYS\n - FREQUENCY_TYPE_S_PLUS_N_BUS_DAYS: S_PLUS_N_BUS_DAYS\n - FREQUENCY_TYPE_A_PLUS_N_BUS_DAYS: A_PLUS_N_BUS_DAYS\n - FREQUENCY_TYPE_NTH_WED_QUARTERLY: NTH_WED_QUARTERLY\n - FREQUENCY_TYPE_NTH_WED_SEMI_ANNUALLY: NTH_WED_SEMI_ANNUALLY\n - FREQUENCY_TYPE_NTH_WED_ANNUALLY: NTH_WED_ANNUALLY\n - FREQUENCY_TYPE_SINGLE: SINGLE\n - FREQUENCY_TYPE_EACH_MONDAY: EACH_MONDAY\n - FREQUENCY_TYPE_EACH_TUESDAY: EACH_TUESDAY\n - FREQUENCY_TYPE_EACH_WEDNESDAY: EACH_WEDNESDAY\n - FREQUENCY_TYPE_EACH_THURSDAY: EACH_THURSDAY\n - FREQUENCY_TYPE_EACH_FRIDAY: EACH_FRIDAY\n - FREQUENCY_TYPE_END_OF_EACH_MONTH: END_OF_EACH_MONTH\n - FREQUENCY_TYPE_FIRST_BUSINESS_DAY_OF_WEEK: FIRST_BUSINESS_DAY_OF_WEEK\n - FREQUENCY_TYPE_SECOND_BUSINESS_DAY_OF_WEEK: SECOND_BUSINESS_DAY_OF_WEEK\n - FREQUENCY_TYPE_THIRD_BUSINESS_DAY_OF_WEEK: THIRD_BUSINESS_DAY_OF_WEEK\n - FREQUENCY_TYPE_FOURTH_BUSINESS_DAY_OF_WEEK: FOURTH_BUSINESS_DAY_OF_WEEK\n - FREQUENCY_TYPE_WEEKLY_AND_ON_PAYMENT_DAY: WEEKLY_AND_ON_PAYMENT_DAY\n - FREQUENCY_TYPE_NTH_BUSINESS_DAY_OF_WEEK: NTH_BUSINESS_DAY_OF_WEEK\n - FREQUENCY_TYPE_NTH_BUSINESS_DAY_MONTHLY: NTH_BUSINESS_DAY_MONTHLY\n - FREQUENCY_TYPE_NTH_BUSINESS_DAY_QUARTERLY: NTH_BUSINESS_DAY_QUARTERLY\n - FREQUENCY_TYPE_NTH_BUSINESS_DAY_SEMI_ANNUALLY: NTH_BUSINESS_DAY_SEMI_ANNUALLY\n - FREQUENCY_TYPE_NTH_CALENDAR_DAY_MONTHLY: NTH_CALENDAR_DAY_MONTHLY\n - FREQUENCY_TYPE_NTH_CALENDAR_DAY_QUARTERLY: NTH_CALENDAR_DAY_QUARTERLY\n - FREQUENCY_TYPE_NTH_CALENDAR_DAY_SEMI_ANNUALLY: NTH_CALENDAR_DAY_SEMI_ANNUALLY\n - FREQUENCY_TYPE_NTH_MONDAY_OF_MONTH: NTH_MONDAY_OF_MONTH\n - FREQUENCY_TYPE_NTH_TUESDAY_OF_MONTH: NTH_TUESDAY_OF_MONTH\n - FREQUENCY_TYPE_NTH_WEDNESDAY_OF_MONTH: NTH_WEDNESDAY_OF_MONTH\n - FREQUENCY_TYPE_NTH_THURSDAY_OF_MONTH: NTH_THURSDAY_OF_MONTH\n - FREQUENCY_TYPE_NTH_FRIDAY_OF_MONTH: NTH_FRIDAY_OF_MONTH\n - FREQUENCY_TYPE_N_WEEKS: N_WEEKS\n - FREQUENCY_TYPE_N_MONTHS: N_MONTHS\n - FREQUENCY_TYPE_N_YEARS: N_YEARS\n - FREQUENCY_TYPE_N_TIMES_PER_YEAR: N_TIMES_PER_YEAR",
            "type": "string",
            "title": "enum FrequencyType represents the frequency at which the swap leg pays\nfor example, ANNUALLY, QUARTERLY, Nth WEDNESDAY ANNUALLY, Q+N BUSINESS DAYS etc",
            "default": "FREQUENCY_TYPE_UNSPECIFIED",
            "enum": [
                "FREQUENCY_TYPE_UNSPECIFIED",
                "FREQUENCY_TYPE_ZERO",
                "FREQUENCY_TYPE_DAILY",
                "FREQUENCY_TYPE_WEEKLY",
                "FREQUENCY_TYPE_MONTHLY",
                "FREQUENCY_TYPE_BIMONTHLY",
                "FREQUENCY_TYPE_QUARTERLY",
                "FREQUENCY_TYPE_SEMI_ANNUALLY",
                "FREQUENCY_TYPE_ANNUALLY",
                "FREQUENCY_TYPE_N_CAL_DAYS",
                "FREQUENCY_TYPE_N_BUS_DAYS",
                "FREQUENCY_TYPE_M_PLUS_N_BUS_DAYS",
                "FREQUENCY_TYPE_Q_PLUS_N_BUS_DAYS",
                "FREQUENCY_TYPE_S_PLUS_N_BUS_DAYS",
                "FREQUENCY_TYPE_A_PLUS_N_BUS_DAYS",
                "FREQUENCY_TYPE_NTH_WED_QUARTERLY",
                "FREQUENCY_TYPE_NTH_WED_SEMI_ANNUALLY",
                "FREQUENCY_TYPE_NTH_WED_ANNUALLY",
                "FREQUENCY_TYPE_SINGLE",
                "FREQUENCY_TYPE_EACH_MONDAY",
                "FREQUENCY_TYPE_EACH_TUESDAY",
                "FREQUENCY_TYPE_EACH_WEDNESDAY",
                "FREQUENCY_TYPE_EACH_THURSDAY",
                "FREQUENCY_TYPE_EACH_FRIDAY",
                "FREQUENCY_TYPE_END_OF_EACH_MONTH",
                "FREQUENCY_TYPE_FIRST_BUSINESS_DAY_OF_WEEK",
                "FREQUENCY_TYPE_SECOND_BUSINESS_DAY_OF_WEEK",
                "FREQUENCY_TYPE_THIRD_BUSINESS_DAY_OF_WEEK",
                "FREQUENCY_TYPE_FOURTH_BUSINESS_DAY_OF_WEEK",
                "FREQUENCY_TYPE_WEEKLY_AND_ON_PAYMENT_DAY",
                "FREQUENCY_TYPE_NTH_BUSINESS_DAY_OF_WEEK",
                "FREQUENCY_TYPE_NTH_BUSINESS_DAY_MONTHLY",
                "FREQUENCY_TYPE_NTH_BUSINESS_DAY_QUARTERLY",
                "FREQUENCY_TYPE_NTH_BUSINESS_DAY_SEMI_ANNUALLY",
                "FREQUENCY_TYPE_NTH_CALENDAR_DAY_MONTHLY",
                "FREQUENCY_TYPE_NTH_CALENDAR_DAY_QUARTERLY",
                "FREQUENCY_TYPE_NTH_CALENDAR_DAY_SEMI_ANNUALLY",
                "FREQUENCY_TYPE_NTH_MONDAY_OF_MONTH",
                "FREQUENCY_TYPE_NTH_TUESDAY_OF_MONTH",
                "FREQUENCY_TYPE_NTH_WEDNESDAY_OF_MONTH",
                "FREQUENCY_TYPE_NTH_THURSDAY_OF_MONTH",
                "FREQUENCY_TYPE_NTH_FRIDAY_OF_MONTH",
                "FREQUENCY_TYPE_N_WEEKS",
                "FREQUENCY_TYPE_N_MONTHS",
                "FREQUENCY_TYPE_N_YEARS",
                "FREQUENCY_TYPE_N_TIMES_PER_YEAR"
            ]
        },
        "enumsIndependentAmountType": {
            "description": "- INDEPENDENT_AMOUNT_TYPE_UNSPECIFIED: UNSPECIFIED\n - INDEPENDENT_AMOUNT_TYPE_PERCENT: PERCENT\n - INDEPENDENT_AMOUNT_TYPE_ABSOLUTE_VALUE: ABSOLUTE_VALUE",
            "type": "string",
            "title": "enum IndependentAmountType represents the independent amount type, it is reflected either as an absolute value or percentage",
            "default": "INDEPENDENT_AMOUNT_TYPE_UNSPECIFIED",
            "enum": [
                "INDEPENDENT_AMOUNT_TYPE_UNSPECIFIED",
                "INDEPENDENT_AMOUNT_TYPE_PERCENT",
                "INDEPENDENT_AMOUNT_TYPE_ABSOLUTE_VALUE"
            ]
        },
        "enumsIndexGroup": {
            "description": "enum IndexGroup represents the index, for example, CDX, CMBX, ABX etc.\n\n - INDEX_GROUP_UNSPECIFIED: UNSPECIFIED\n - INDEX_GROUP_ABX: ABX\n - INDEX_GROUP_CDX: CDX\n - INDEX_GROUP_CMBX: CMBX\n - INDEX_GROUP_ITRAXX: ITRAXX\n - INDEX_GROUP_LCDX: LCDX\n - INDEX_GROUP_MCDX: MCDX\n - INDEX_GROUP_PRIMEX: PRIMEX",
            "type": "string",
            "default": "INDEX_GROUP_UNSPECIFIED",
            "enum": [
                "INDEX_GROUP_UNSPECIFIED",
                "INDEX_GROUP_ABX",
                "INDEX_GROUP_CDX",
                "INDEX_GROUP_CMBX",
                "INDEX_GROUP_ITRAXX",
                "INDEX_GROUP_LCDX",
                "INDEX_GROUP_MCDX",
                "INDEX_GROUP_PRIMEX"
            ]
        },
        "enumsLienPosition": {
            "description": "- LIEN_POSITION_UNSPECIFIED: UNSPECIFIED\n - LIEN_POSITION_FIRST: FIRST\n - LIEN_POSITION_SECOND: SECOND\n - LIEN_POSITION_THIRD: THIRD\n - LIEN_POSITION_MULTIPLE: MULTIPLE",
            "type": "string",
            "title": "enum LienPosition",
            "default": "LIEN_POSITION_UNSPECIFIED",
            "enum": [
                "LIEN_POSITION_UNSPECIFIED",
                "LIEN_POSITION_FIRST",
                "LIEN_POSITION_SECOND",
                "LIEN_POSITION_THIRD",
                "LIEN_POSITION_MULTIPLE"
            ]
        },
        "enumsLookbackType": {
            "description": "- LOOKBACK_TYPE_UNSPECIFIED: UNSPECIFIED\n - LOOKBACK_TYPE_INTEREST_PERIOD_SHIFT: INTEREST_PERIOD_SHIFT\n - LOOKBACK_TYPE_OBSERVATION_PERIOD_SHIFT: OBSERVATION_PERIOD_SHIFT\n - LOOKBACK_TYPE_OBSERVATION_PERIOD_COMPOUND_AND_OBSERVATION_PERIOD_ACCRUAL: OBSERVATION_PERIOD_COMPOUND_AND_OBSERVATION_PERIOD_ACCRUAL",
            "type": "string",
            "title": "enum LookbackType represents interest period shift , observation period shift , observation period compund and observation period accrual",
            "default": "LOOKBACK_TYPE_UNSPECIFIED",
            "enum": [
                "LOOKBACK_TYPE_UNSPECIFIED",
                "LOOKBACK_TYPE_INTEREST_PERIOD_SHIFT",
                "LOOKBACK_TYPE_OBSERVATION_PERIOD_SHIFT",
                "LOOKBACK_TYPE_OBSERVATION_PERIOD_COMPOUND_AND_OBSERVATION_PERIOD_ACCRUAL"
            ]
        },
        "enumsNotionalType": {
            "description": "enum NotionalType represents if the notional principal is fixed or varies (refixed) over the term of the swap, for example, VARIABLE OR FIXED\nVARIABLE: Notional principal varies (amortizing) based on the unrealized gains or losses on the reset or payment date\nFixed: Notional principal remains fixed throughout the term of the swap.\n\n - NOTIONAL_TYPE_UNSPECIFIED: UNSPECIFIED\n - NOTIONAL_TYPE_VARIABLE: VARIABLE\n - NOTIONAL_TYPE_FIXED: FIXED",
            "type": "string",
            "default": "NOTIONAL_TYPE_UNSPECIFIED",
            "enum": [
                "NOTIONAL_TYPE_UNSPECIFIED",
                "NOTIONAL_TYPE_VARIABLE",
                "NOTIONAL_TYPE_FIXED"
            ]
        },
        "enumsOptionStyle": {
            "description": "- OPTION_STYLE_UNSPECIFIED: UNSPECIFIED\n - OPTION_STYLE_AMERICAN: AMERICAN\n - OPTION_STYLE_EUROPEAN: EUROPEAN\n - OPTION_STYLE_FVA: FVA\n - OPTION_STYLE_UP_AND_IN: UP_AND_IN\n - OPTION_STYLE_DOWN_AND_IN: DOWN_AND_IN\n - OPTION_STYLE_UP_AND_OUT: UP_AND_OUT\n - OPTION_STYLE_DOWN_AND_OUT: DOWN_AND_OUT\n - OPTION_STYLE_DOUBLE_KNOCK_IN: DOUBLE_KNOCK_IN\n - OPTION_STYLE_DOUBLE_KNOCK_OUT: DOUBLE_KNOCK_OUT\n - OPTION_STYLE_ONE_TOUCH: ONE_TOUCH\n - OPTION_STYLE_INSTANT_ONE_TOUCH: INSTANT_ONE_TOUCH\n - OPTION_STYLE_NO_TOUCH: NO_TOUCH\n - OPTION_STYLE_DOUBLE_TOUCH: DOUBLE_TOUCH\n - OPTION_STYLE_DOUBLE_NO_TOUCH: DOUBLE_NO_OUCH\n - OPTION_STYLE_BERMUDAN: BERMUDAN\n - OPTION_STYLE_ASIAN: ASIAN",
            "type": "string",
            "title": "enum OptionStyle represents exercise type and barrier event, for example, AMERICAN, EUROPEAN etc",
            "default": "OPTION_STYLE_UNSPECIFIED",
            "enum": [
                "OPTION_STYLE_UNSPECIFIED",
                "OPTION_STYLE_AMERICAN",
                "OPTION_STYLE_EUROPEAN",
                "OPTION_STYLE_FVA",
                "OPTION_STYLE_UP_AND_IN",
                "OPTION_STYLE_DOWN_AND_IN",
                "OPTION_STYLE_UP_AND_OUT",
                "OPTION_STYLE_DOWN_AND_OUT",
                "OPTION_STYLE_DOUBLE_KNOCK_IN",
                "OPTION_STYLE_DOUBLE_KNOCK_OUT",
                "OPTION_STYLE_ONE_TOUCH",
                "OPTION_STYLE_INSTANT_ONE_TOUCH",
                "OPTION_STYLE_NO_TOUCH",
                "OPTION_STYLE_DOUBLE_TOUCH",
                "OPTION_STYLE_DOUBLE_NO_TOUCH",
                "OPTION_STYLE_BERMUDAN",
                "OPTION_STYLE_ASIAN"
            ]
        },
        "enumsPaymentStubType": {
            "description": "- PAYMENT_STUB_TYPE_UNSPECIFIED: UNSPECIFIED\n - PAYMENT_STUB_TYPE_SHORT_INITIAL: SI\n - PAYMENT_STUB_TYPE_SHORT_FINAL: SF\n - PAYMENT_STUB_TYPE_LONG_INITAL: LI\n - PAYMENT_STUB_TYPE_LONG_FINAL: LF",
            "type": "string",
            "title": "enum PaymentStubType represents type of stub, for example, SHORT INITAL, SHORT FINAL etc",
            "default": "PAYMENT_STUB_TYPE_UNSPECIFIED",
            "enum": [
                "PAYMENT_STUB_TYPE_UNSPECIFIED",
                "PAYMENT_STUB_TYPE_SHORT_INITIAL",
                "PAYMENT_STUB_TYPE_SHORT_FINAL",
                "PAYMENT_STUB_TYPE_LONG_INITAL",
                "PAYMENT_STUB_TYPE_LONG_FINAL"
            ]
        },
        "enumsPaymentType": {
            "description": "- PAYMENT_TYPE_UNSPECIFIED: UNSPECIFIED\n - PAYMENT_TYPE_DIVIDEND_COUPON_PAYMENT_DATE: DIVIDEND_COUPON_PAYMENT_DATE\n - PAYMENT_TYPE_MATURITY_PAYMENT_DATE: MATURITY_PAYMENT_DATE\n - PAYMENT_TYPE_PERFORMANCE_PAYMENT_DATE: PERFORMANCE_PAYMENT_DATE\n - PAYMENT_TYPE_PERFORMANCE_AFTER_X_DIV_PAYMENT: PERFORMANCE_AFTER_X_DIV_PAYMENT\n - PAYMENT_TYPE_PERFORMANCE_DIV_COUPON_PAYMENT_PLUS_DELAY: PERFORMANCE_DIV_COUPON_PAYMENT_PLUS_DELAY",
            "type": "string",
            "title": "enum PaymentType represents if the underlying income payments, like dividend, should be ignored and if the payment should occur relative to the performance schedule.\nfor example, Dividend/Coupon Payment Date: Pay on Dividend date\nMaturity Payment Date: Pay at Maturity\nPerformance Payment Date: Pay on next Payment date",
            "default": "PAYMENT_TYPE_UNSPECIFIED",
            "enum": [
                "PAYMENT_TYPE_UNSPECIFIED",
                "PAYMENT_TYPE_DIVIDEND_COUPON_PAYMENT_DATE",
                "PAYMENT_TYPE_MATURITY_PAYMENT_DATE",
                "PAYMENT_TYPE_PERFORMANCE_PAYMENT_DATE",
                "PAYMENT_TYPE_PERFORMANCE_AFTER_X_DIV_PAYMENT",
                "PAYMENT_TYPE_PERFORMANCE_DIV_COUPON_PAYMENT_PLUS_DELAY"
            ]
        },
        "enumsPeriodicity": {
            "description": "- PERIODICITY_UNSPECIFIED: UNSPECIFIED\n - PERIODICITY_MONTHLY: MONTHLY\n - PERIODICITY_WEEKLY: WEEKLY\n - PERIODICITY_ALL: ALL",
            "type": "string",
            "title": "enum Periodicity represents period, Monthly/Weekly/All",
            "default": "PERIODICITY_UNSPECIFIED",
            "enum": [
                "PERIODICITY_UNSPECIFIED",
                "PERIODICITY_MONTHLY",
                "PERIODICITY_WEEKLY",
                "PERIODICITY_ALL"
            ]
        },
        "enumsPoolType": {
            "description": "- POOL_TYPE_UNSPECIFIED: UNSPECIFIED\n - POOL_TYPE_NOT_AVAILABLE: NA\n - POOL_TYPE_ALTERNATIVE_A: ALTERNATIVE A\n - POOL_TYPE_HOME_EQUITY_IMPROVEMENT: HOME EQUITY/IMPROVEMENT\n - POOL_TYPE_RE_SECURITIZED: RE SECURITIZED\n - POOL_TYPE_REVERSE: REVERSE",
            "type": "string",
            "title": "enum PoolType",
            "default": "POOL_TYPE_UNSPECIFIED",
            "enum": [
                "POOL_TYPE_UNSPECIFIED",
                "POOL_TYPE_NOT_AVAILABLE",
                "POOL_TYPE_ALTERNATIVE_A",
                "POOL_TYPE_HOME_EQUITY_IMPROVEMENT",
                "POOL_TYPE_RE_SECURITIZED",
                "POOL_TYPE_REVERSE"
            ]
        },
        "enumsPrepaymentPenaltyType": {
            "description": "- PREPAYMENT_PENALTY_TYPE_UNSPECIFIED: UNSPECIFIED\n - PREPAYMENT_PENALTY_TYPE_NONE: NONE\n - PREPAYMENT_PENALTY_TYPE_DECLINING_PREMIUM: DECLINING PREMIUM\n - PREPAYMENT_PENALTY_TYPE_DEFEASANCE: DEFEASANCE\n - PREPAYMENT_PENALTY_TYPE_PREPAYMENT_LOCKOUT: PREPAYMENT LOCKOUT\n - PREPAYMENT_PENALTY_TYPE_YIELD_MAINTENANCE: YIELD MAINTENANCE\n - PREPAYMENT_PENALTY_TYPE_YIELD_MAINTENANCE_CMT: YIELD MAINTENANCE CMT\n - PREPAYMENT_PENALTY_TYPE_MULTIPLE_TYPES: MULTIPLE TYPES\n - PREPAYMENT_PENALTY_TYPE_OTHER: OTHER",
            "type": "string",
            "title": "enum PrepaymentPenaltyType",
            "default": "PREPAYMENT_PENALTY_TYPE_UNSPECIFIED",
            "enum": [
                "PREPAYMENT_PENALTY_TYPE_UNSPECIFIED",
                "PREPAYMENT_PENALTY_TYPE_NONE",
                "PREPAYMENT_PENALTY_TYPE_DECLINING_PREMIUM",
                "PREPAYMENT_PENALTY_TYPE_DEFEASANCE",
                "PREPAYMENT_PENALTY_TYPE_PREPAYMENT_LOCKOUT",
                "PREPAYMENT_PENALTY_TYPE_YIELD_MAINTENANCE",
                "PREPAYMENT_PENALTY_TYPE_YIELD_MAINTENANCE_CMT",
                "PREPAYMENT_PENALTY_TYPE_MULTIPLE_TYPES",
                "PREPAYMENT_PENALTY_TYPE_OTHER"
            ]
        },
        "enumsQuoteType": {
            "description": "enum QuoteType represents the type how underlying asset is valued, for example, CLEAN or DIRTY\nwhere underlying is a Fixed Income security, performance can be calculated based on clean prices or from dirty prices.\n\n - QUOTE_TYPE_UNSPECIFIED: UNSPECIFIED\n - QUOTE_TYPE_CLEAN: CLEAN\n - QUOTE_TYPE_DIRTY: DIRTY\n - QUOTE_TYPE_PRICE: PRICE\n - QUOTE_TYPE_SPREAD: SPREAD",
            "type": "string",
            "default": "QUOTE_TYPE_UNSPECIFIED",
            "enum": [
                "QUOTE_TYPE_UNSPECIFIED",
                "QUOTE_TYPE_CLEAN",
                "QUOTE_TYPE_DIRTY",
                "QUOTE_TYPE_PRICE",
                "QUOTE_TYPE_SPREAD"
            ]
        },
        "enumsRegistration": {
            "description": "- REGISTRATION_UNSPECIFIED: UNSPECIFIED\n - REGISTRATION_PUBLIC: PUBLIC\n - REGISTRATION_144A: 144A\n - REGISTRATION_PRIVATE: PRIVATE\n - REGISTRATION_REG_S: REG-S\n - REGISTRATION_REG_K: REG-K\n - REGISTRATION_CONTROLLED: CONTROLLED\n - REGISTRATION_DUAL_144A_OR_REG_S: DUAL 144A|REG-S\n - REGISTRATION_ACCREDITED_INVESTOR_REG_D: ACCREDITED INVESTOR REG-D",
            "type": "string",
            "title": "enum Registration represents registration types, for example public,144a,private etc",
            "default": "REGISTRATION_UNSPECIFIED",
            "enum": [
                "REGISTRATION_UNSPECIFIED",
                "REGISTRATION_PUBLIC",
                "REGISTRATION_144A",
                "REGISTRATION_PRIVATE",
                "REGISTRATION_REG_S",
                "REGISTRATION_REG_K",
                "REGISTRATION_CONTROLLED",
                "REGISTRATION_DUAL_144A_OR_REG_S",
                "REGISTRATION_ACCREDITED_INVESTOR_REG_D"
            ]
        },
        "enumsRestructureType": {
            "description": "- RESTRUCTURE_TYPE_UNSPECIFIED: UNSPECIFIED\n - RESTRUCTURE_TYPE_2014_MOD_MOD: 2014_MOD_MOD\n - RESTRUCTURE_TYPE_2014_MODIFIED: 2014_MODIFIED\n - RESTRUCTURE_TYPE_2014_NONE: 2014_NONE\n - RESTRUCTURE_TYPE_2014_OLD: 2014_OLD\n - RESTRUCTURE_TYPE_MODIFIED: MODIFIED\n - RESTRUCTURE_TYPE_OLD: OLD\n - RESTRUCTURE_TYPE_NONE: NONE\n - RESTRUCTURE_TYPE_MOD_MOD: MOD_MOD",
            "type": "string",
            "title": "enum RestructureType represents DocClause where the restructuring supplement can be specified, for example, OLD, NONE etc",
            "default": "RESTRUCTURE_TYPE_UNSPECIFIED",
            "enum": [
                "RESTRUCTURE_TYPE_UNSPECIFIED",
                "RESTRUCTURE_TYPE_2014_MOD_MOD",
                "RESTRUCTURE_TYPE_2014_MODIFIED",
                "RESTRUCTURE_TYPE_2014_NONE",
                "RESTRUCTURE_TYPE_2014_OLD",
                "RESTRUCTURE_TYPE_MODIFIED",
                "RESTRUCTURE_TYPE_OLD",
                "RESTRUCTURE_TYPE_NONE",
                "RESTRUCTURE_TYPE_MOD_MOD"
            ]
        },
        "enumsReturnResponse": {
            "type": "object",
            "title": "Response",
            "properties": {
                "responseState": {
                    "title": "Represents response message of api call",
                    "$ref": "#/definitions/enumsState"
                },
                "reason": {
                    "description": "represents a common reason for failure of all records.",
                    "type": "string"
                }
            }
        },
        "enumsRoundingType": {
            "description": "- ROUNDING_TYPE_UNSPECIFIED: UNSPECIFIED\n - ROUNDING_TYPE_ROUND: ROUND\n - ROUNDING_TYPE_TRUNCATE: TRUNCATE",
            "type": "string",
            "title": "enum RoundingType represents type of rounding, for example, ROUND or TRUNCATE",
            "default": "ROUNDING_TYPE_UNSPECIFIED",
            "enum": [
                "ROUNDING_TYPE_UNSPECIFIED",
                "ROUNDING_TYPE_ROUND",
                "ROUNDING_TYPE_TRUNCATE"
            ]
        },
        "enumsSeniority": {
            "description": "- SENIORITY_UNSPECIFIED: UNSPECIFIED\n - SENIORITY_32_MO_14_MO: 32_MO_14_MO\n - SENIORITY_BRADY: 32_MO_14_MO\n - SENIORITY_CAPSEC_BTP: CAPSEC_BTP\n - SENIORITY_CCN: CCN\n - SENIORITY_DIP: DIP\n - SENIORITY_JUNIOR_SUB: JUNIOR_SUB\n - SENIORITY_JUNIOR: JUNIOR\n - SENIORITY_FIRST_LIEN: FIRST_LIEN\n - SENIORITY_SECOND_LIEN: SECOND_LIEN\n - SENIORITY_THIRD_LIEN: THIRD_LIEN\n - SENIORITY_MEZZANINE: MEZZANINE\n - SENIORITY_MORTGAGE: MORTGAGE\n - SENIORITY_SECURED: SECURED\n - SENIORITY_SENIOR: SENIOR\n - SENIORITY_SENIOR_NON_PREFERRED: SENIOR_NON_PREFERRED\n - SENIORITY_SENIOR_PREFERRED: SENIOR_PREFERRED\n - SENIORITY_SENIOR_SUB: SENIOR_SUB\n - SENIORITY_SUB: SUB\n - SENIORITY_SUKUK_SALAM: SUKUK_SALAM\n - SENIORITY_SUKUK_BAI_AL_DAYN: SUKUK_BAI_AL_DAYN\n - SENIORITY_SUKUK_BAI_INAH: SUKUK_BAI_INAH\n - SENIORITY_SUKUK_BBA: SUKUK_BBA\n - SENIORITY_SUKUK_HYBRID: SUKUK_HYBRID\n - SENIORITY_SUKUK_IJARAH: SUKUK_IJARAH\n - SENIORITY_SUKUK_ISTISNA: SUKUK_ISTISNA\n - SENIORITY_SUKUK_ISTITHMAR: SUKUK_ISTITHMAR\n - SENIORITY_SUKUK_MUDARABAH: SUKUK_MUDARABAH\n - SENIORITY_SUKUK_MURABABAH: SUKUK_MURABABAH\n - SENIORITY_SUKUK_MUSHARAKAH: SUKUK_MUSHARAKAH\n - SENIORITY_SUKUK: SUKUK\n - SENIORITY_SUKUK_WAKALA: SUKUK_WAKALA\n - SENIORITY_CLAIM: CLAIM\n - SENIORITY_UNSECURED: UNSECURED",
            "type": "string",
            "title": "enum Seniority represents seniority, for example, SENIOR, SUB etc",
            "default": "SENIORITY_UNSPECIFIED",
            "enum": [
                "SENIORITY_UNSPECIFIED",
                "SENIORITY_32_MO_14_MO",
                "SENIORITY_BRADY",
                "SENIORITY_CAPSEC_BTP",
                "SENIORITY_CCN",
                "SENIORITY_DIP",
                "SENIORITY_JUNIOR_SUB",
                "SENIORITY_JUNIOR",
                "SENIORITY_FIRST_LIEN",
                "SENIORITY_SECOND_LIEN",
                "SENIORITY_THIRD_LIEN",
                "SENIORITY_MEZZANINE",
                "SENIORITY_MORTGAGE",
                "SENIORITY_SECURED",
                "SENIORITY_SENIOR",
                "SENIORITY_SENIOR_NON_PREFERRED",
                "SENIORITY_SENIOR_PREFERRED",
                "SENIORITY_SENIOR_SUB",
                "SENIORITY_SUB",
                "SENIORITY_SUKUK_SALAM",
                "SENIORITY_SUKUK_BAI_AL_DAYN",
                "SENIORITY_SUKUK_BAI_INAH",
                "SENIORITY_SUKUK_BBA",
                "SENIORITY_SUKUK_HYBRID",
                "SENIORITY_SUKUK_IJARAH",
                "SENIORITY_SUKUK_ISTISNA",
                "SENIORITY_SUKUK_ISTITHMAR",
                "SENIORITY_SUKUK_MUDARABAH",
                "SENIORITY_SUKUK_MURABABAH",
                "SENIORITY_SUKUK_MUSHARAKAH",
                "SENIORITY_SUKUK",
                "SENIORITY_SUKUK_WAKALA",
                "SENIORITY_CLAIM",
                "SENIORITY_UNSECURED"
            ]
        },
        "enumsSettlementMethod": {
            "description": "enum SettlementMethod represents either Cash settle or Physical delivery.\n\n - SETTLEMENT_METHOD_UNSPECIFIED: UNSPECIFIED\n - SETTLEMENT_METHOD_CASH_SETLLE: CASH SETTLE\n - SETTLEMENT_METHOD_PHYSICAL_DELIVERY: PHYSICAL DELIVERY\n - SETTLEMENT_METHOD_NET_SHARES: NET SHARES\n - SETTLEMENT_METHOD_OTHER: OTHER",
            "type": "string",
            "default": "SETTLEMENT_METHOD_UNSPECIFIED",
            "enum": [
                "SETTLEMENT_METHOD_UNSPECIFIED",
                "SETTLEMENT_METHOD_CASH_SETLLE",
                "SETTLEMENT_METHOD_PHYSICAL_DELIVERY",
                "SETTLEMENT_METHOD_NET_SHARES",
                "SETTLEMENT_METHOD_OTHER"
            ]
        },
        "enumsState": {
            "description": "- STATE_UNSPECIFIED: unspecified\n - STATE_SUCCESS: SUCCESS\n - STATE_FAILURE: FAILURE\n - STATE_PARTIAL_FAILURE: PARTIAL_FAILURE\n - STATE_ADL_FAILURE: ADL_FAILURE\n - STATE_DB_FAILURE: DB_FAILURE\n - STATE_NO_DATA_FOUND: NO_DATA_FOUND\n - STATE_INVALID_REQUEST: INVALID_REQUEST\n - STATE_ADL_CONNECTION_ISSUE: ADL_CONNECTION_ISSUE\n - STATE_DB_CONNECTION_ISSUE: DB_CONNECTION_ISSUE",
            "type": "string",
            "title": "State",
            "default": "STATE_UNSPECIFIED",
            "enum": [
                "STATE_UNSPECIFIED",
                "STATE_SUCCESS",
                "STATE_FAILURE",
                "STATE_PARTIAL_FAILURE",
                "STATE_ADL_FAILURE",
                "STATE_DB_FAILURE",
                "STATE_NO_DATA_FOUND",
                "STATE_INVALID_REQUEST",
                "STATE_ADL_CONNECTION_ISSUE",
                "STATE_DB_CONNECTION_ISSUE"
            ]
        },
        "enumsSwapSecurityFlag": {
            "description": "- SWAP_SECURITY_FLAG_UNSPECIFIED: UNSPECIFIED\n - SWAP_SECURITY_FLAG_YES: YES\n - SWAP_SECURITY_FLAG_NO: NO",
            "type": "string",
            "title": "enum SwapSecurityFlag represents flag(YES/NO) for swap securities,\nfor example, month_end flag represents whether coupons are paid at the end of each calendar month\nOR interpolate flag represents interpolation of a coupon rate from two indices will be applicable for either (or both) the period from the Start Date to the 1st Reset Date \nand/or the period from the Final Reset Date until the End Date",
            "default": "SWAP_SECURITY_FLAG_UNSPECIFIED",
            "enum": [
                "SWAP_SECURITY_FLAG_UNSPECIFIED",
                "SWAP_SECURITY_FLAG_YES",
                "SWAP_SECURITY_FLAG_NO"
            ]
        },
        "enumsSwapType": {
            "description": "- SWAP_TYPE_UNSPECIFIED: UNSPECIFIED\n - SWAP_TYPE_FLOAT: FLOAT\n - SWAP_TYPE_FIXED: FIXED\n - SWAP_TYPE_BMA: BMA\n - SWAP_TYPE_IFS: IFS\n - SWAP_TYPE_OIS: OIS\n - SWAP_TYPE_ZERO: ZERO\n - SWAP_TYPE_LPI: LPI\n - SWAP_TYPE_IMM: IMM\n - SWAP_TYPE_LIB: LIB\n - SWAP_TYPE_NO_FINANCING: NO FINANCING",
            "type": "string",
            "title": "enum SwapType represents type of swap, for example, FLOAT, OIS, FIXED etc",
            "default": "SWAP_TYPE_UNSPECIFIED",
            "enum": [
                "SWAP_TYPE_UNSPECIFIED",
                "SWAP_TYPE_FLOAT",
                "SWAP_TYPE_FIXED",
                "SWAP_TYPE_BMA",
                "SWAP_TYPE_IFS",
                "SWAP_TYPE_OIS",
                "SWAP_TYPE_ZERO",
                "SWAP_TYPE_LPI",
                "SWAP_TYPE_IMM",
                "SWAP_TYPE_LIB",
                "SWAP_TYPE_NO_FINANCING"
            ]
        },
        "enumsSwapUnit": {
            "description": "- SWAP_UNIT_UNSPECIFIED: UNSPECIFIED\n - SWAP_UNIT_SHARES: SHARES\n - SWAP_UNIT_NOTIONAL: NOTIONAL\n - SWAP_UNIT_FACE: FACE",
            "type": "string",
            "title": "enum SwapUnit represent units, for example, SHARES, NOTIONAL etc",
            "default": "SWAP_UNIT_UNSPECIFIED",
            "enum": [
                "SWAP_UNIT_UNSPECIFIED",
                "SWAP_UNIT_SHARES",
                "SWAP_UNIT_NOTIONAL",
                "SWAP_UNIT_FACE"
            ]
        },
        "enumsSwaptionType": {
            "description": "- SWAPTION_TYPE_UNSPECIFIED: UNSPECIFIED\n - SWAPTION_TYPE_PLAIN_VANILLA: PLAIN VANILLA\n - SWAPTION_TYPE_MID_CURVE: MID CURVE\n - SWAPTION_TYPE_CDX: CDX",
            "type": "string",
            "title": "enum SwaptionType represents type of swaption, for example, Plain Vanilla, Mid Curve and CDX",
            "default": "SWAPTION_TYPE_UNSPECIFIED",
            "enum": [
                "SWAPTION_TYPE_UNSPECIFIED",
                "SWAPTION_TYPE_PLAIN_VANILLA",
                "SWAPTION_TYPE_MID_CURVE",
                "SWAPTION_TYPE_CDX"
            ]
        },
        "enumsTbaPropertyType": {
            "description": "- TBA_PROPERTY_TYPE_UNSPECIFIED: UNSPECIFIED\n - TBA_PROPERTY_TYPE_CO_OP: CO_OP\n - TBA_PROPERTY_TYPE_DEDICATED_STUDENT: DEDICATED STUDENT\n - TBA_PROPERTY_TYPE_MANUFACTURED_HOUSING: MANUFACTURE HOUSING\n - TBA_PROPERTY_TYPE_MILITARY: MILITARY\n - TBA_PROPERTY_TYPE_STANDARD_MULTIFAMILY: STANDARD MULTIFAMILY\n - TBA_PROPERTY_TYPE_SENIOR: SENIOR\n - TBA_PROPERTY_TYPE_MULTIPLE: MULTIPLE\n - TBA_PROPERTY_TYPE_OTHER: OTHER",
            "type": "string",
            "title": "enum TbaPropertyType",
            "default": "TBA_PROPERTY_TYPE_UNSPECIFIED",
            "enum": [
                "TBA_PROPERTY_TYPE_UNSPECIFIED",
                "TBA_PROPERTY_TYPE_CO_OP",
                "TBA_PROPERTY_TYPE_DEDICATED_STUDENT",
                "TBA_PROPERTY_TYPE_MANUFACTURED_HOUSING",
                "TBA_PROPERTY_TYPE_MILITARY",
                "TBA_PROPERTY_TYPE_STANDARD_MULTIFAMILY",
                "TBA_PROPERTY_TYPE_SENIOR",
                "TBA_PROPERTY_TYPE_MULTIPLE",
                "TBA_PROPERTY_TYPE_OTHER"
            ]
        },
        "enumsTbaTerm": {
            "description": "- TBA_TERM_UNSPECIFIED: UNSPECIFIED\n - TBA_TERM_5: 5\n - TBA_TERM_7: 7\n - TBA_TERM_10: 10\n - TBA_TERM_15: 15\n - TBA_TERM_20: 20\n - TBA_TERM_30: 30\n - TBA_TERM_40: 40",
            "type": "string",
            "title": "enum TbaTerm",
            "default": "TBA_TERM_UNSPECIFIED",
            "enum": [
                "TBA_TERM_UNSPECIFIED",
                "TBA_TERM_5",
                "TBA_TERM_7",
                "TBA_TERM_10",
                "TBA_TERM_15",
                "TBA_TERM_20",
                "TBA_TERM_30",
                "TBA_TERM_40"
            ]
        },
        "reference_dataassetv1ArmTbaSecurity": {
            "type": "object",
            "title": "ArmTbaSecurity describes fields to create Adjustable rate mortgage securities-To be Announced",
            "properties": {
                "tbaInfo": {
                    "title": "To be annouced securities attributes",
                    "$ref": "#/definitions/v1TbaData"
                },
                "initialCoupon": {
                    "type": "number",
                    "format": "double",
                    "title": "Net coupon"
                },
                "monthsToRoll": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Number of months to the next roll \n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: We need to do this because this is commonly accepted name--)"
                },
                "grossMargin": {
                    "type": "number",
                    "format": "double",
                    "title": "Gross margin"
                },
                "netMargin": {
                    "type": "number",
                    "format": "double",
                    "title": "Net margin"
                },
                "capStructure": {
                    "title": "Cap structure represents first reset cap percentage + periodic rate cap + life rate cap",
                    "$ref": "#/definitions/enumsCapStructure"
                },
                "index": {
                    "type": "string",
                    "title": "What index rate resets off"
                },
                "armStructure": {
                    "title": "Arm structure",
                    "$ref": "#/definitions/enumsArmStructure"
                },
                "lookBackDayCount": {
                    "description": "Lookback days used to describe the lag in days between the determination date of the index rate and the actual date the index was reset\nLookback is in terms of Business days.",
                    "type": "integer",
                    "format": "int32"
                },
                "negativeAmortizationCap": {
                    "type": "number",
                    "format": "double",
                    "title": "Cap on negative amortization"
                },
                "convertible": {
                    "type": "boolean",
                    "title": "True if convertible to fixed mortgage at some date"
                }
            }
        },
        "reference_dataassetv1CashRepoSecurity": {
            "type": "object",
            "title": "CashRepoSecurity describes fields to create CASH/REPO securities",
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "title": "Represents USD, GBP etc"
                },
                "accrualBase": {
                    "title": "Accrual base",
                    "$ref": "#/definitions/enumsAccrualBase"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date asset begins to accrue"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date asset gets mature"
                },
                "collateralType": {
                    "title": "Collateral type",
                    "$ref": "#/definitions/enumsCollateralType"
                },
                "fee": {
                    "type": "number",
                    "format": "double",
                    "title": "Fee for lending security\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)"
                },
                "callable": {
                    "type": "boolean",
                    "title": "Callable"
                },
                "callDelayDayCount": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Minimum notification days for call"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "title": "The interest rate"
                },
                "variableRate": {
                    "type": "boolean",
                    "title": "whether its variable rate?"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "title": "Spread over index that coupon resets to"
                },
                "lookbackCalendarCodes": {
                    "description": "Lookback calendar to calculate lookback\nRepresents AUCK, BG, Brazil, CA etc\nIf multiple calendars are chosen, they represents OR relation ship, meaning if it's a business on any of the chosen calendars, it's considered a business day.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookbackType": {
                    "title": "Lookback type indicates whether the accrual period day weight is adjusted for the observation period or the interest period or the observation period compound and observation period accrual",
                    "$ref": "#/definitions/enumsLookbackType"
                },
                "lookBackDayCount": {
                    "description": "Lookback days used to describe the lag in days between the determination date of the index rate and the actual date the index was reset\nLookback is in terms of Business days.",
                    "type": "integer",
                    "format": "int32"
                },
                "lockoutDayCount": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Number of business days reset is suspended"
                },
                "couponCalculationMethod": {
                    "title": "Coupon calculation method used to calculate the interest rate payable for each interest payment period",
                    "$ref": "#/definitions/enumsCouponCalcMethod"
                },
                "resetIndex": {
                    "type": "string",
                    "title": "A specific index to reset the coupon to"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1CashTimeDepositSecurity": {
            "type": "object",
            "title": "CashTimeDepositSecurity describes fields to create CASH/TD securities",
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "title": "Represents USD, GBP etc"
                },
                "countryCode": {
                    "type": "string",
                    "title": "Country of Asset"
                },
                "marketCountryCode": {
                    "type": "string",
                    "title": "Asset Trading market an ISO code to identify markets, trading platforms"
                },
                "accrualBase": {
                    "title": "Accrual base",
                    "$ref": "#/definitions/enumsAccrualBase"
                },
                "accrualDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date asset begins to accrue"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date asset gets mature"
                },
                "firstCouponDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date of first coupon payment"
                },
                "rateType": {
                    "title": "Coupon type represents MAT, FIXED, FLOAT OR ZERO\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "$ref": "#/definitions/enumsCashTimeDepositRateType"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "title": "The interest rate"
                },
                "initialRate": {
                    "type": "number",
                    "format": "double",
                    "title": "Initial Coupon of the reset period"
                },
                "paymentFrequencyType": {
                    "title": "Payment frequency type stated in times per year, days, weeks, months",
                    "$ref": "#/definitions/enumsFrequencyType"
                },
                "paymentCalendarCodes": {
                    "description": "Calendar used for determining business days for payments\nRepresents AUCK, BG, Brazil, CA etc\nIf multiple calendars are chosen, they represents OR relation ship, meaning if it's a business on any of the chosen calendars, it's considered a business day.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityDescription": {
                    "title": "CashTimeDepositClass represents security description\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "$ref": "#/definitions/enumsCashTimeDepositClass"
                },
                "registration": {
                    "title": "Registration",
                    "$ref": "#/definitions/enumsRegistration"
                },
                "registrationRight": {
                    "type": "boolean",
                    "title": "Registration right represented as Y/N"
                },
                "liquidity": {
                    "type": "boolean",
                    "title": "Is this a liquid security. A security is considered liquid if it has a specified rating of A or better\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)"
                },
                "structure": {
                    "title": "Structure",
                    "$ref": "#/definitions/enumsCashTimeDepositStructure"
                },
                "resetFrequencyType": {
                    "title": "Reset term stated in times per year, days, weeks, months\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "$ref": "#/definitions/enumsFrequencyType"
                },
                "resetCalendarCodes": {
                    "description": "Calendar used for determining business days for resets\nRepresents AUCK, BG, Brazil, CA etc\nIf multiple calendars are chosen, they represents OR relation ship, meaning if it's a business on any of the chosen calendars, it's considered a business day.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "compounding": {
                    "type": "boolean",
                    "title": "Compounding"
                },
                "resetIndex": {
                    "type": "string",
                    "title": "A specific index to reset the coupon to"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "title": "Spread over index that coupon resets to"
                },
                "lookbackCalendarCodes": {
                    "description": "Lookback calendar to calculate lookback\nRepresents AUCK, BG, Brazil, CA etc\nIf multiple calendars are chosen, they represents OR relation ship, meaning if it's a business on any of the chosen calendars, it's considered a business day.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookbackType": {
                    "title": "Lookback type indicates whether the accrual period day weight is adjusted for the observation period or the interest period or the observation period compound and observation period accrual",
                    "$ref": "#/definitions/enumsLookbackType"
                },
                "lookBackDayCount": {
                    "description": "Lookback days used to describe the lag in days between the determination date of the index rate and the actual date the index was reset\nLookback is in terms of Business days.",
                    "type": "integer",
                    "format": "int32"
                },
                "lockoutDayCount": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Number of business days reset is suspended"
                },
                "couponCalculationMethod": {
                    "title": "Coupon calculation method used to calculate the interest rate payable for each interest payment period",
                    "$ref": "#/definitions/enumsCouponCalcMethod"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1CdsSecurity": {
            "type": "object",
            "title": "CdsSecurity describes fields to create credit default swap securities",
            "required": [
                "referenceEntity",
                "maturityDate"
            ],
            "properties": {
                "referenceEntity": {
                    "type": "string",
                    "title": "bears the credit risk of the contract, and can be a corporation, government or other legal entity that issues debt of any kind",
                    "required": [
                        "reference_entity"
                    ]
                },
                "referenceSecurityId": {
                    "type": "string",
                    "title": "public identifier like isin, sedol etc\n(-- api-linter: core::0124::required-reference=disabled\n aip.dev/not-precedent: We need to do this because this is a Id of a non-resource. --)"
                },
                "redCode": {
                    "type": "string",
                    "title": "vendor security identifier"
                },
                "currencyCode": {
                    "type": "string",
                    "title": "represents USD, GBP etc"
                },
                "startDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date on which interest will begin to accrue on the security"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date",
                    "title": "stated date on which all principal should be repaid",
                    "required": [
                        "maturity_date"
                    ]
                },
                "dealSpread": {
                    "title": "deal spread in bps on the basis of which coupon is calculated",
                    "$ref": "#/definitions/enumsDealSpread"
                },
                "restructureType": {
                    "title": "DocClause where the restructuring supplement can be specified, for example, OLD, NONE etc",
                    "$ref": "#/definitions/enumsRestructureType"
                },
                "seniority": {
                    "title": "represents SENIOR, SUB etc",
                    "$ref": "#/definitions/enumsSeniority"
                },
                "exchange": {
                    "type": "string",
                    "title": "represents BILATERAL, ICE etc\nCheck out the decodes CDS_EXCHANGE for corresponding cde value to be used"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1CdxSecurity": {
            "type": "object",
            "title": "CdxSecurity describes fields to create credit default index swap securities",
            "required": [
                "exchange"
            ],
            "properties": {
                "cdxInfo": {
                    "title": "attributes to search cdx basket",
                    "$ref": "#/definitions/v1CdxInfo"
                },
                "exchange": {
                    "description": "represents BILATERAL, ICE etc\nCheck out the decodes CDS_EXCHANGE for corresponding cde value to be used.",
                    "type": "string",
                    "required": [
                        "exchange"
                    ]
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1EquityEquitySecurity": {
            "type": "object",
            "title": "EquityEquitySecurity describes fields to create EQUITY EQUITY securities",
            "required": [
                "ticker",
                "name",
                "currencyCode",
                "countryCode"
            ],
            "properties": {
                "ticker": {
                    "description": "Ticker - An acronmyn for the security. It is often used to aid in the identification of a security.",
                    "type": "string",
                    "required": [
                        "ticker"
                    ]
                },
                "name": {
                    "description": "Name - This is a security descriptive field. It briefly describes the equity security.",
                    "type": "string",
                    "required": [
                        "name"
                    ]
                },
                "currencyCode": {
                    "description": "Currency - Represents USD, GBP etc.",
                    "type": "string",
                    "required": [
                        "currency_code"
                    ]
                },
                "countryCode": {
                    "description": "Country Code - Represents US, UK etc.",
                    "type": "string",
                    "required": [
                        "country_code"
                    ]
                },
                "exchange": {
                    "description": "Equity Data - Primary Security Exchange code.",
                    "type": "string"
                },
                "registrationFlag": {
                    "title": "Registration Flag - Represents Public, Private, Controlled etc. Is the security 144a?",
                    "$ref": "#/definitions/enumsRegistration"
                },
                "lotSize": {
                    "type": "number",
                    "format": "double",
                    "title": "Lot Size - Minimum Trade Size"
                },
                "assetId": {
                    "description": "Identifier corresponds to Aladdin identifier.",
                    "type": "string"
                },
                "sedol": {
                    "description": "Public Identifier - The alternate identifier.",
                    "type": "string"
                },
                "offeringInfo": {
                    "description": "Offering Data - Data on primary and secondary offers.",
                    "$ref": "#/definitions/v1OfferingData"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1EquityOptionSecurity": {
            "type": "object",
            "title": "EquityOptionSecurity describes fields to create EQUITY OPTION securities",
            "required": [
                "underlyingAssetId",
                "expirationDate",
                "strikePrice"
            ],
            "properties": {
                "equityOptionType": {
                    "title": "represents Listed, OTC and FLEX",
                    "$ref": "#/definitions/enumsEquityOptionType"
                },
                "underlyingAssetId": {
                    "type": "string",
                    "title": "asset id of the underlying equity or Index that the option is on",
                    "required": [
                        "underlying_asset_id"
                    ]
                },
                "underlyingExchange": {
                    "description": "represents KIA, XADS etc\nCheck out the decodes EXCHANGE_CODES for corresponding cde value to be used.",
                    "type": "string"
                },
                "currencyCode": {
                    "type": "string",
                    "title": "represents USD, GBP etc"
                },
                "callPutType": {
                    "description": "receiver or Payer\nHolding a call option gives the holder the right to buy the underlying security at the specified strike price within a specified date range or on a specific date depending on the exercise type\nHolding a put option gives the holder the right to sell the underlying security at the specified strike price within a specified date range or on a specific date depending on the exercise type.",
                    "$ref": "#/definitions/enumsCallPutType"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date when option expires",
                    "required": [
                        "expiration_date"
                    ]
                },
                "strikePrice": {
                    "description": "the price of the underlying at which the option can be exercised.",
                    "type": "number",
                    "format": "double",
                    "required": [
                        "strike_price"
                    ]
                },
                "notionalAmount": {
                    "description": "how many underlying shares the option itself gives the holder control over as opposed to the pure value of what is owned from one option. \nListed options have a typical notional face (or multiplier) of 100\nOTCs typically have notional face of 1\nwhile index options differ depending on the index itself.",
                    "type": "number",
                    "format": "double"
                },
                "settlementMethod": {
                    "title": "represents cash settle, physical settle or net shares\nPhysical Settlement:  Term in an options or futures contract which requires the actual underlying asset to be delivered upon the specified delivery date, rather than being traded out with offsetting contracts.  In the case of an OPTION/EQUITY, physical settlement would require the actual underlying equity to be delivered by delivering the number of shares require in the contract if the option is in the money\nCash Settlement:  A transaction for immediate settlement.  In the money market, a transaction is said to be made for cash settlement if the securities purchases are delivered against payment in Fed funds on the same day the trade is made\nShares Settlement:  Term in an options or futures contract which requires the actual underlying asset to be delivered upon the specified delivery date, rather than being traded out with offsetting contracts.  In the case of an OPTION/EQUITY, shares settlement would require the actual underlying equity to be delivered by taking the dollar amount you would be delivering (had it been cash settled) and divide it by the strike and deliver that many shares",
                    "$ref": "#/definitions/enumsSettlementMethod"
                },
                "optionStyle": {
                    "title": "rules of exercising the option \nAmerican – Can be exercised any time on or after the exercise date\nEuropean – Can only be exercised on the specified expiration date\nBermudian – Can be exercised only on specified payment dates\nAsian - Denotes that the option strike price is not simply the price of the underlying index on one particular date, but an average of prices on several different dates, usually defined in the option agreement.  It is similar to EUROPEAN in that the option is only exercisable on the maturity date, but dissimilar in that the strike price is not simply the price of the underlying index on that date, but an average of prices from several predetermined dates",
                    "$ref": "#/definitions/enumsOptionStyle"
                },
                "optionTicker": {
                    "description": "ticker on equity options for classifying and reporting purposes and it is how traders identify options.",
                    "type": "string"
                },
                "fxRate": {
                    "description": "applicable to Quanto options, which are options in which the exchange rate is fixed at the outset of a trade and is denominated in a currency differing from that of the underlying equity.",
                    "type": "number",
                    "format": "double"
                },
                "expiryTime": {
                    "title": "used to improve the equity option trade confirmation process by allowing portfolio managers to explicitly designate the expiry time in the security (enabling STP) rather than directing via the comments section of the order which requires manual confirmation.\n(-- api-linter: core::0142::time-field-type=disabled\naip.dev/not-precedent: this is a field for expiry time, for example, CLOSE and EDSP --)",
                    "$ref": "#/definitions/enumsExpiryTime"
                },
                "barrierEvent": {
                    "description": "barrier options are those payoffs that depends on whether the underlying asset has reached or exceeded a predetermined price. They cannot be exercised if a certain event takes place.",
                    "$ref": "#/definitions/enumsOptionStyle"
                },
                "lowerBarrier": {
                    "description": "certain barrier events will need a lower barrier specified due to the event relating to a lower price dictating if the option can be exercised or not. It represents a price and will be used in relation to the underlying equity to determine if the barrier event is void or valid.",
                    "type": "number",
                    "format": "double"
                },
                "upperBarrier": {
                    "description": "the upper barrier will need to be defined and populated if the option needs to either hit a certain barrier or avoid crossing that upper barrier. It represents a price and will be used in relation to the underlying equity to determine if the barrier event is void or valid.",
                    "type": "number",
                    "format": "double"
                },
                "barrierStartDate": {
                    "description": "date that the barrier starts\nthis will be the start date of the option and the start of the barrier event applicable if the time constraint for the barrier happens to differ from that full life of the option.",
                    "type": "string",
                    "format": "date"
                },
                "barrierEndDate": {
                    "description": "date that the barrier ends\nthis will be the maturity date of the option or the end of the barrier event applicable if the time constraint for the barrier happens to differ from that full life of the option.",
                    "type": "string",
                    "format": "date"
                },
                "barrierSource": {
                    "type": "string",
                    "title": "barrier fixing rate source"
                },
                "periodicity": {
                    "title": "periodicity",
                    "$ref": "#/definitions/enumsPeriodicity"
                }
            }
        },
        "reference_dataassetv1FuturesSecurity": {
            "type": "object",
            "title": "FuturesSecurity describes fields to create futures securities",
            "properties": {
                "ric": {
                    "type": "string",
                    "title": "asset reuters identifier"
                },
                "contractName": {
                    "type": "string",
                    "title": "contract name in SCS_FUT_COMMON decodes"
                },
                "contractYear": {
                    "type": "string",
                    "title": "contract_year"
                },
                "contractMonth": {
                    "title": "represents JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY,AUGUST,SEPTEMBER,OCTOBER ,NOVEMBER,DECEMBER",
                    "$ref": "#/definitions/typeMonth"
                },
                "strike": {
                    "type": "number",
                    "format": "double",
                    "title": "strike price"
                },
                "callPutType": {
                    "title": "represents CALL or PUT",
                    "$ref": "#/definitions/enumsCallPutType"
                }
            }
        },
        "reference_dataassetv1FxOptionSecurity": {
            "type": "object",
            "title": "FxOptionSecurity describes fields to create FX option securities",
            "properties": {
                "currencyPair": {
                    "type": "string",
                    "title": "represents USD/AUD, USD/GBP etc"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date when option expires"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "title": "delivery date - usually 2 business days after expiration_date"
                },
                "callPutType": {
                    "title": "represents CALL or PUT",
                    "$ref": "#/definitions/enumsCallPutType"
                },
                "optionStyle": {
                    "title": "represents American, European etc",
                    "$ref": "#/definitions/enumsOptionStyle"
                },
                "strike": {
                    "type": "number",
                    "format": "double",
                    "title": "Double type strike field represents strike price"
                },
                "expiryTime": {
                    "title": "represents 2pm Tokyo Time, 3pm Tokyo Time etc\n(-- api-linter: core::0142::time-field-type=disabled\naip.dev/not-precedent: this is a field for expiry time, for example, 2pm Tokyo Time, 3pm Tokyo Time etc --)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because this is a field for expiry time, for example, 2pm Tokyo Time, 3pm Tokyo Time etc --)",
                    "$ref": "#/definitions/enumsExpiryTime"
                },
                "nonDeliverable": {
                    "type": "boolean",
                    "title": "bool type non_deliverable field"
                },
                "fxRateReference": {
                    "type": "string",
                    "title": "payment fx reference"
                },
                "lowerBarrier": {
                    "description": "certain barrier events will need a lower barrier specified due to the event relating to a lower price dictating if the option can be exercised or not.",
                    "type": "number",
                    "format": "double"
                },
                "upperBarrier": {
                    "description": "the upper barrier will need to be defined and populated if the option needs to either hit a certain barrier or avoid crossing that upper barrier.",
                    "type": "number",
                    "format": "double"
                },
                "barrierStartDate": {
                    "description": "date that the barrier starts\nthis will be the start date of the option and the start of the barrier event applicable if the time constraint for the barrier happens to differ from that full life of the option.",
                    "type": "string",
                    "format": "date"
                },
                "barrierEndDate": {
                    "description": "date that the barrier ends\nthis will be the maturity date of the option or the end of the barrier event applicable if the time constraint for the barrier happens to differ from that full life of the option.",
                    "type": "string",
                    "format": "date"
                },
                "barrierSource": {
                    "type": "string",
                    "title": "barrier fixing rate source"
                },
                "settlementCurrency": {
                    "type": "string",
                    "title": "currency used for settelement"
                }
            }
        },
        "reference_dataassetv1FxSecurity": {
            "type": "object",
            "title": "FXSecurity describes fields to create FX SPOT, FX FORWARD and FX CSWAP securities",
            "required": [
                "currencyPair"
            ],
            "properties": {
                "currencyPair": {
                    "type": "string",
                    "title": "represents USD/AUD, USD/GBP etc",
                    "required": [
                        "currency_pair"
                    ]
                },
                "valueDate": {
                    "type": "string",
                    "format": "date",
                    "title": "maturity date"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "title": "issue price"
                },
                "fxType": {
                    "title": "represents SPOT, FORWARD and CSWAP",
                    "$ref": "#/definitions/enumsFXType"
                }
            }
        },
        "reference_dataassetv1FxndfSecurity": {
            "type": "object",
            "title": "FxndfSecurity describes fields to create FX non deliverable forward securities",
            "required": [
                "currencyPair",
                "valueDate"
            ],
            "properties": {
                "currencyPair": {
                    "type": "string",
                    "title": "represents USD/AUD, USD/GBP etc",
                    "required": [
                        "currency_pair"
                    ]
                },
                "valueDate": {
                    "type": "string",
                    "format": "date",
                    "title": "maturity date\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\naip.dev/not-precedent: We need to do this because it is date related configuration --)",
                    "required": [
                        "value_date"
                    ]
                },
                "fixingDate": {
                    "type": "string",
                    "format": "date",
                    "title": "announce date"
                },
                "exchange": {
                    "description": "represents LCH, CME etc\nCheck out the decodes FX_EXCHANGE for corresponding cde value to be used.",
                    "type": "string"
                },
                "fxRateReference": {
                    "type": "string",
                    "title": "payment fx reference"
                },
                "settleLocation": {
                    "description": "represents N for NDF and O for OHA.",
                    "type": "boolean"
                },
                "settlementCurrencyCode": {
                    "type": "string",
                    "title": "the currency in which payments will be made"
                }
            }
        },
        "reference_dataassetv1InterestRateSwapSecurity": {
            "type": "object",
            "title": "InterestRateSwapSecurity describes interest rate swap security fields",
            "properties": {
                "swapInfo": {
                    "title": "pay leg and receive leg fields",
                    "$ref": "#/definitions/v1SwapData"
                },
                "startDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date on which interest will begin to accrue on the security"
                },
                "maturityDate": {
                    "type": "string",
                    "format": "date",
                    "title": "stated date on which all principal should be repaid"
                },
                "exchange": {
                    "description": "represents BILATERAL , LUK etc\nfor example, If a swap is centrally cleared this field should be populated in accordance with relevant exchange.\nCheck out the decodes table IRS_EXCHANGE for corresponding cde value to be used.",
                    "type": "string"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1MbsTbaSecurity": {
            "type": "object",
            "title": "MbsTbaSecurity describes fields to create Mortgage backed securities-To be Announced",
            "properties": {
                "tbaInfo": {
                    "title": "To be annouced securities attributes",
                    "$ref": "#/definitions/v1TbaData"
                },
                "coupon": {
                    "type": "number",
                    "format": "double",
                    "title": "The interest rate paid"
                },
                "poolStory": {
                    "title": "Pool story represents security description\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "$ref": "#/definitions/enumsPoolType"
                }
            }
        },
        "reference_dataassetv1SwaptionSecurity": {
            "type": "object",
            "title": "SwaptionSecurity describes fields to create swaption securities",
            "properties": {
                "swaptionType": {
                    "title": "represents Plain Vanilla, Mid Curve or CDX",
                    "$ref": "#/definitions/enumsSwaptionType"
                },
                "currencyCode": {
                    "type": "string",
                    "title": "represents USD, GBP etc"
                },
                "callPutType": {
                    "title": "CallPutType type call_put_type field represents Receiver or Payer",
                    "$ref": "#/definitions/enumsCallPutType"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date when option expires"
                },
                "strikePrice": {
                    "description": "the price of the underlying at which the option can be exercised.",
                    "type": "number",
                    "format": "double"
                },
                "optionStyle": {
                    "title": "represents American, European etc",
                    "$ref": "#/definitions/enumsOptionStyle"
                },
                "finalSettlementMethod": {
                    "title": "represents cash settle or physical trade",
                    "$ref": "#/definitions/enumsSettlementMethod"
                },
                "premiumInPercent": {
                    "type": "number",
                    "format": "double",
                    "title": "premium price in percent\n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: We need to do this because the field is used to represent the price in percent --)"
                },
                "premiumDate": {
                    "description": "the date when the premium is paid.",
                    "type": "string",
                    "format": "date"
                },
                "clearingParty": {
                    "description": "represents BILATERAL, CMD etc\nCheck out the decodes CDS_EXCHANGE for corresponding cde value to be used.",
                    "type": "string"
                },
                "underlyingTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "term"
                },
                "underlyingStart": {
                    "type": "integer",
                    "format": "int32",
                    "title": "start"
                },
                "underlyingClearingParty": {
                    "description": "represents BILATERAL, CMD etc\nCheck out the decodes CDS_EXCHANGE for corresponding cde value to be used.",
                    "type": "string"
                },
                "underlyingCdxInfo": {
                    "title": "attributes to search underlying cdx basket",
                    "$ref": "#/definitions/v1CdxInfo"
                },
                "agreedDiscountRate": {
                    "title": "represents ESTR, SOFR etc",
                    "$ref": "#/definitions/enumsAgreedDiscountRate"
                },
                "underlyingResetIndex": {
                    "type": "string",
                    "title": "represents US3MLIB etc"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "reference_dataassetv1TotalReturnSwapSecurity": {
            "type": "object",
            "title": "TotalReturnSwapSecurity total return swap security fields",
            "properties": {
                "swapInfo": {
                    "title": "pay leg and receive leg fields",
                    "$ref": "#/definitions/v1SwapData"
                },
                "recLegIncomeFee": {
                    "title": "receive leg income fee attributes",
                    "$ref": "#/definitions/v1IncomeFee"
                },
                "recLegCustomSchedules": {
                    "type": "array",
                    "title": "receive leg custom schedule attributes",
                    "items": {
                        "$ref": "#/definitions/v1CustomSchedule"
                    }
                },
                "payLegCustomSchedules": {
                    "type": "array",
                    "title": "pay leg custom schedule attributes",
                    "items": {
                        "$ref": "#/definitions/v1CustomSchedule"
                    }
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        },
        "rpcStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "typeDateTime": {
            "description": "* When utc_offset is set and time_zone is unset: a civil time on a calendar\n   day with a particular offset from UTC.\n * When time_zone is set and utc_offset is unset: a civil time on a calendar\n   day in a particular time zone.\n * When neither time_zone nor utc_offset is set: a civil time on a calendar\n   day in local time.\n\nThe date is relative to the Proleptic Gregorian Calendar.\n\nIf year is 0, the DateTime is considered not to have a specific year. month\nand day must have valid, non-zero values.\n\nThis type is more flexible than some applications may want. Make sure to\ndocument and validate your application's limitations.",
            "type": "object",
            "title": "Represents civil time in one of a few possible ways:",
            "properties": {
                "year": {
                    "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a\ndatetime without a year.",
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "description": "Required. Month of year. Must be from 1 to 12.",
                    "type": "integer",
                    "format": "int32"
                },
                "day": {
                    "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and\nmonth.",
                    "type": "integer",
                    "format": "int32"
                },
                "hours": {
                    "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API\nmay choose to allow the value \"24:00:00\" for scenarios like business\nclosing time.",
                    "type": "integer",
                    "format": "int32"
                },
                "minutes": {
                    "description": "Required. Minutes of hour of day. Must be from 0 to 59.",
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An\nAPI may allow the value 60 if it allows leap-seconds.",
                    "type": "integer",
                    "format": "int32"
                },
                "nanos": {
                    "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to\n999,999,999.",
                    "type": "integer",
                    "format": "int32"
                },
                "utcOffset": {
                    "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours.\nFor example, a UTC offset of -4:00 would be represented as\n{ seconds: -14400 }.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Time zone.",
                    "$ref": "#/definitions/typeTimeZone"
                }
            }
        },
        "typeMonth": {
            "description": "Represents a month in the Gregorian calendar.\n\n - MONTH_UNSPECIFIED: The unspecifed month.\n - JANUARY: The month of January.\n - FEBRUARY: The month of February.\n - MARCH: The month of March.\n - APRIL: The month of April.\n - MAY: The month of May.\n - JUNE: The month of June.\n - JULY: The month of July.\n - AUGUST: The month of August.\n - SEPTEMBER: The month of September.\n - OCTOBER: The month of October.\n - NOVEMBER: The month of November.\n - DECEMBER: The month of December.",
            "type": "string",
            "default": "MONTH_UNSPECIFIED",
            "enum": [
                "MONTH_UNSPECIFIED",
                "JANUARY",
                "FEBRUARY",
                "MARCH",
                "APRIL",
                "MAY",
                "JUNE",
                "JULY",
                "AUGUST",
                "SEPTEMBER",
                "OCTOBER",
                "NOVEMBER",
                "DECEMBER"
            ]
        },
        "typeTimeZone": {
            "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones).",
            "type": "object",
            "properties": {
                "id": {
                    "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                    "type": "string"
                },
                "version": {
                    "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
                    "type": "string"
                }
            }
        },
        "v1BasketType": {
            "description": "BasketType represents basket type of underlying security, it can be either of region, sector, finance, or asset type.",
            "type": "object",
            "properties": {
                "basketTypeRating": {
                    "description": "rating basket types, for example, A, AAA etc.",
                    "$ref": "#/definitions/enumsBasketTypeRating"
                },
                "basketTypeRegion": {
                    "description": "regional basket types, for example, ASIA, EUROPE etc.",
                    "$ref": "#/definitions/enumsBasketTypeRegion"
                },
                "basketTypeSector": {
                    "description": "sector basket types, for example, FINANCIALS, NON FINANCIALS etc.",
                    "$ref": "#/definitions/enumsBasketTypeSector"
                },
                "basketTypeAssetType": {
                    "description": "asset type basket types, for example, LOAN.",
                    "$ref": "#/definitions/enumsBasketTypeAssetType"
                }
            }
        },
        "v1CdxInfo": {
            "type": "object",
            "title": "CdxInfo describes fields that are required for CDX search",
            "required": [
                "term",
                "series"
            ],
            "properties": {
                "indexType": {
                    "description": "index group of underlying security, for example, CDX, ABX, ITRAXX etc.",
                    "$ref": "#/definitions/enumsIndexGroup"
                },
                "basketType": {
                    "description": "basket type of underlying security, it can be either of region, sector, finance, or asset type.",
                    "$ref": "#/definitions/v1BasketType"
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "title": "term\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Keep this as term --)",
                    "required": [
                        "term"
                    ]
                },
                "series": {
                    "type": "integer",
                    "format": "int32",
                    "title": "series",
                    "required": [
                        "series"
                    ]
                },
                "attachment": {
                    "type": "integer",
                    "format": "int32",
                    "title": "underlying attachment point for CDO tranche"
                },
                "detachment": {
                    "type": "integer",
                    "format": "int32",
                    "title": "underlying detachment point for CDO tranche"
                },
                "spread": {
                    "type": "number",
                    "format": "double",
                    "title": "underlying interest rate paid\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\naip.dev/not-precedent: We need to do this because it is spread related configuration --)"
                }
            }
        },
        "v1CreateSecurityResponse": {
            "type": "object",
            "title": "Response message of security creation api",
            "properties": {
                "returnCode": {
                    "title": "Represents the response of an api call",
                    "$ref": "#/definitions/enumsReturnResponse"
                },
                "assetId": {
                    "type": "string",
                    "title": "Asset_id"
                }
            }
        },
        "v1CustomSchedule": {
            "type": "object",
            "title": "CustomSchedule decsribes custom schedule fields for a security",
            "properties": {
                "determinationStartDate": {
                    "type": "string",
                    "format": "date",
                    "title": "reset at the beginning of the period"
                },
                "determinationEndDate": {
                    "type": "string",
                    "format": "date",
                    "title": "reset at the end of the period"
                },
                "accrualStartDate": {
                    "type": "string",
                    "format": "date",
                    "title": "beginning of the accrual period"
                },
                "accrualEndDate": {
                    "type": "string",
                    "format": "date",
                    "title": "end of the accrual period"
                },
                "payDate": {
                    "description": "payment date.",
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "v1FrequencyCalendar": {
            "type": "object",
            "title": "FrequencyCalendar",
            "properties": {
                "frequencyType": {
                    "title": "frequency at which the swap leg pays\nfor example, ANNUALLY, QUARTERLY, Nth WEDNESDAY ANNUALLY, Q+N BUSINESS DAYS etc",
                    "$ref": "#/definitions/enumsFrequencyType"
                },
                "frequencyValue": {
                    "type": "integer",
                    "format": "int32",
                    "title": "times per year that coupon is paid"
                },
                "calendarCodes": {
                    "type": "array",
                    "title": "(-- aip.dev/beta-blocker: we would eventually have a calendar resource\nfield before the Beta launch. --)  \nrepresents AUCK, BG, Brazil, CA etc\nit is repeated, as user can choose multiple calendar codes",
                    "items": {
                        "type": "string"
                    }
                },
                "adjustMethod": {
                    "title": "represents NO ADJUST, FOLLOWING etc",
                    "$ref": "#/definitions/enumsAdjustMethod"
                }
            }
        },
        "v1IncomeFee": {
            "type": "object",
            "title": "IncomeFee describes income and fee fields for a security",
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "title": "represents USD, GBP etc"
                },
                "paymentType": {
                    "title": "if the underlying income payments, like dividend, should be ignored and if the payment should occur relative to the performance schedule.\nfor example, Dividend/Coupon Payment Date: Pay on Dividend date\nMaturity Payment Date: Pay at Maturity\nPerformance Payment Date: Pay on next Payment date",
                    "$ref": "#/definitions/enumsPaymentType"
                },
                "dividendDelayType": {
                    "title": "payment delay of the underlying coupon / dividend, for example, BUSINESS OR CALENDAR",
                    "$ref": "#/definitions/enumsDelayType"
                },
                "dividendDelayValue": {
                    "type": "integer",
                    "format": "int32",
                    "title": "dividend delay value"
                },
                "payout": {
                    "type": "number",
                    "format": "double",
                    "title": "what part or fraction of the income is paid, to accommodate for tax and other withholding provisions"
                },
                "managementFeeRate": {
                    "description": "management fee that can be paid or received along with the performance payments.",
                    "type": "number",
                    "format": "double"
                },
                "managementFeeAccrualBase": {
                    "title": "management fee accrual base",
                    "$ref": "#/definitions/enumsAccrualBase"
                },
                "managementFeeStartDate": {
                    "type": "string",
                    "format": "date",
                    "title": "management fee start date"
                },
                "independentAmount": {
                    "type": "number",
                    "format": "double",
                    "title": "independent amount which is the additional credit support amount that is used over and above the market value of the trade portfolio"
                },
                "independentAmountType": {
                    "title": "independent amount type, it is reflected either as an absolute value or percentage",
                    "$ref": "#/definitions/enumsIndependentAmountType"
                },
                "independentAmountStartDate": {
                    "type": "string",
                    "format": "date",
                    "title": "independent amount start date"
                }
            }
        },
        "v1OfferingData": {
            "type": "object",
            "title": "OfferingData",
            "required": [
                "announceDate",
                "pricingDate"
            ],
            "properties": {
                "announceDate": {
                    "description": "Announce Date - Start of new issue period.",
                    "type": "string",
                    "format": "date",
                    "required": [
                        "announce_date"
                    ]
                },
                "pricingDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Pricing Date",
                    "required": [
                        "pricing_date"
                    ]
                },
                "subscriptionDeadline": {
                    "description": "Subscription Deadline - Date/Time after which no new orders can be entered.",
                    "$ref": "#/definitions/typeDateTime"
                },
                "issueSize": {
                    "description": "Issue Size - Total offering amount on issuance.",
                    "type": "number",
                    "format": "double"
                },
                "grossSpread": {
                    "description": "Gross Spread - Fee underwriters receive for underwriting a deal in spread terms.",
                    "type": "number",
                    "format": "double"
                },
                "concessionRate": {
                    "description": "Concession Rate - Percent of the total trade value that entire syndicate will receive as a fee.",
                    "type": "number",
                    "format": "double"
                },
                "secondOffering": {
                    "type": "boolean",
                    "title": "Second Offering - Offering Type - Primary (P) or Secondary (S). Set it true for 'S'"
                },
                "firmCommitment": {
                    "type": "boolean",
                    "title": "Firm Commitment - Is the deal a firm commitment underwriting? (Y/N)"
                },
                "syndicateInfos": {
                    "description": "Syndicate Data - Track which dealers helped to distribute the deal and what role they played.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1SyndicateData"
                    }
                }
            }
        },
        "v1PaymentReset": {
            "type": "object",
            "title": "PaymentReset describes payment and reset fields for a security",
            "properties": {
                "paymentCurrencyCode": {
                    "type": "string",
                    "title": "payment currency code for receive leg"
                },
                "paymentFrequencyCalendar": {
                    "title": "attributes such as payment frequency type, frequency value, calendar and adjust method",
                    "$ref": "#/definitions/v1FrequencyCalendar"
                },
                "firstPaymentDelayType": {
                    "description": "represents BUSINESS OR CALENDAR convention of the 1st delay\nOften times, cash settlement takes place a few business or calendar days after the valuation date (1st coupon date),\nhence need to pouplate Business (standard convention) or Calendar depending on the type of delay.",
                    "$ref": "#/definitions/enumsDelayType"
                },
                "firstPaymentDelayValue": {
                    "description": "Specifies the number of days following the Nominal payment date. The delay can be set in business or calendar days.",
                    "type": "integer",
                    "format": "int32"
                },
                "secondPaymentDelayType": {
                    "title": "represents BUSINESS OR CALENDAR convention of the 2nd delay\nAlthough it’s rare for TRS to have two payment delays it is possible and hence there is flexibility to the end user to add one in",
                    "$ref": "#/definitions/enumsDelayType"
                },
                "secondPaymentDelayValue": {
                    "description": "the number of days following the date after 1st payment delay is applied. The delay can be set in business or calendar delay.",
                    "type": "integer",
                    "format": "int32"
                },
                "resetFrequencyCalendar": {
                    "title": "attributes such as reset frequency type, frequency value, calendar and adjust method",
                    "$ref": "#/definitions/v1FrequencyCalendar"
                },
                "resetDelayType": {
                    "title": "represents BUSINESS OR CALENDAR of the reset delay",
                    "$ref": "#/definitions/enumsDelayType"
                },
                "resetDelayValue": {
                    "description": "delay in Calendar or Business following the Nominal Reset date based on the reset frequency.",
                    "type": "integer",
                    "format": "int32"
                },
                "accrualPeriod": {
                    "title": "represents EXCLUDE ALL PAYMENT DELAYS OR INCLUDE ALL PAYMENT DELAYS",
                    "$ref": "#/definitions/enumsAccrualPeriod"
                },
                "endAdjust": {
                    "description": "whether or not a security adjusts accrual periods to account for adjustments in actual payment days due to weekends or holidays.",
                    "type": "boolean"
                },
                "compounding": {
                    "type": "boolean",
                    "title": "represent Y or N based upon compounding the interest or not"
                },
                "lookbackType": {
                    "title": "represents interest period shift or observation period shift",
                    "$ref": "#/definitions/enumsLookbackType"
                },
                "lookback": {
                    "type": "integer",
                    "format": "int32",
                    "title": "the term used to describe the lag in days between the determination date of the index rate and the actual date the index was reset"
                },
                "lockoutDays": {
                    "type": "integer",
                    "format": "int32",
                    "title": "number of days reset is suspended\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: this is a field for suspension days--)"
                },
                "lookbackAdjust": {
                    "title": "allows the user to tailor the lookback on the index to specific requirements, for example, NO ADJUST, FOLLOWING etc",
                    "$ref": "#/definitions/enumsAdjustMethod"
                },
                "couponCalcMethod": {
                    "title": "the method used to calculate the interest rate payable for each interest payment period",
                    "$ref": "#/definitions/enumsCouponCalcMethod"
                },
                "roundingType": {
                    "title": "represents either ROUND or TRUNCATE",
                    "$ref": "#/definitions/enumsRoundingType"
                },
                "roundPrecision": {
                    "type": "integer",
                    "format": "int32",
                    "title": "value based upon rounding type"
                },
                "initialAuto": {
                    "type": "boolean",
                    "title": "represents Y or N. If an initial reset is subjected to the auto-reset process in BondCalc. If set to: -- Auto-Reset - the initial coupon is not required and will be found automatically \n(-- api-linter: core::0203::required=disabled\n aip.dev/not-precedent: We need to do this because this field is not required --)"
                }
            }
        },
        "v1Stub": {
            "type": "object",
            "title": "Stub describes stub fields for a security",
            "properties": {
                "paymentStubType": {
                    "description": "represent SHORT INITAL, SHORT FINAL etc.",
                    "$ref": "#/definitions/enumsPaymentStubType"
                },
                "firstPaymentDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date the first payment needs to be made"
                },
                "lastPaymentDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date the last payment needs to be made"
                },
                "monthEnd": {
                    "title": "whether coupons are paid at the end of each calendar month",
                    "$ref": "#/definitions/enumsSwapSecurityFlag"
                },
                "firstRegResetDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date of first rate reset"
                },
                "finalResetDate": {
                    "description": "last date at which the Index will reset prior to Maturity.",
                    "type": "string",
                    "format": "date"
                },
                "interpolate": {
                    "title": "Y/N - interpolation indicator\ninterpolation of a coupon rate from two indices will be applicable for either (or both) the period from the Start Date to the 1st Reset Date \nand/or the period from the Final Reset Date until the End Date",
                    "$ref": "#/definitions/enumsSwapSecurityFlag"
                },
                "initialStartTerm": {
                    "type": "string",
                    "title": "index for interpolation of initial starting term"
                },
                "initialEndTerm": {
                    "type": "string",
                    "title": "index for interpolation of initial ending term"
                },
                "finalStartTerm": {
                    "type": "string",
                    "title": "index for interpolation of final starting term"
                },
                "finalEndTerm": {
                    "type": "string",
                    "title": "index for interpolation of final ending term"
                },
                "riskCountry": {
                    "type": "string",
                    "title": "represents US, CA, CH etc"
                }
            }
        },
        "v1SwapData": {
            "type": "object",
            "title": "SwapData decsribes Interest rate swap security fields or Total return swap security fields",
            "properties": {
                "payLeg": {
                    "title": "pay leg attributes",
                    "$ref": "#/definitions/v1SwapLeg"
                },
                "payLegPaymentReset": {
                    "title": "pay leg payment reset attributes",
                    "$ref": "#/definitions/v1PaymentReset"
                },
                "payLegStub": {
                    "title": "pay leg stub attributes",
                    "$ref": "#/definitions/v1Stub"
                },
                "recLeg": {
                    "title": "receive leg attributes",
                    "$ref": "#/definitions/v1SwapLeg"
                },
                "recLegPaymentReset": {
                    "title": "receive leg payment reset attributes",
                    "$ref": "#/definitions/v1PaymentReset"
                },
                "recLegStub": {
                    "title": "receive leg stub attributes",
                    "$ref": "#/definitions/v1Stub"
                }
            }
        },
        "v1SwapLeg": {
            "type": "object",
            "title": "SwapLeg describes PAY leg or RECEIVE leg fields in a swap security",
            "properties": {
                "type": {
                    "title": "represents FLOAT, OIS, FIXED etc",
                    "$ref": "#/definitions/enumsSwapType"
                },
                "currencyCode": {
                    "type": "string",
                    "title": "represents USD, GBP etc"
                },
                "underlyingAssetId": {
                    "type": "string",
                    "title": "underlying asset in case of total return swap securities\n(-- api-linter: core::0124::required-reference=disabled\n aip.dev/not-precedent: We need to do this because this is a Id of a non-resource.--)"
                },
                "accrualBase": {
                    "title": "how interest amounts are calculated both for payments and accruals, for example,  D30/360, ACT/360 etc",
                    "$ref": "#/definitions/enumsAccrualBase"
                },
                "startDate": {
                    "type": "string",
                    "format": "date",
                    "title": "date the swap begins to accrue"
                },
                "endDate": {
                    "type": "string",
                    "format": "date",
                    "title": "maturity date"
                },
                "initialRate": {
                    "type": "number",
                    "format": "double",
                    "title": "initial coupon in case of FLOAT swap type"
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "title": "coupon in case of FIXED swap type"
                },
                "spread": {
                    "description": "extra percentage points to be added (or subtracted) to/from the floating index at each reset date.",
                    "type": "number",
                    "format": "double"
                },
                "resetIndex": {
                    "type": "string",
                    "title": "represents US3MLIB etc"
                },
                "notionalType": {
                    "description": "if the notional principal is fixed or varies (refixed) over the term of the swap, for example, VARIABLE OR FIXED\nVARIABLE: Notional principal varies (amortizing) based on the unrealized gains or losses on the reset or payment date\nFixed: Notional principal remains fixed throughout the term of the swap.",
                    "$ref": "#/definitions/enumsNotionalType"
                },
                "notionalReset": {
                    "title": "represents AT FIXING or AT PAYMENT",
                    "$ref": "#/definitions/enumsAmortTiming"
                },
                "multiplier": {
                    "description": "used to adjust for terms that may specify the paying of a pre-determined percentage of the given index.",
                    "type": "number",
                    "format": "double"
                },
                "earlyTermination": {
                    "type": "boolean",
                    "title": "represents Y or N"
                },
                "units": {
                    "title": "represent SHARES, NOTIONAL etc\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: this is a field for units--)",
                    "$ref": "#/definitions/enumsSwapUnit"
                },
                "indexLevel": {
                    "type": "number",
                    "format": "double",
                    "title": "index level for rec leg"
                },
                "quoteType": {
                    "description": "(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because this is a type to determine how underlying asset is valued-)\nhow underlying asset is valued, for example, CLEAN or DIRTY\nwhere underlying is a Fixed Income security, performance can be calculated based on clean prices or from dirty prices.",
                    "$ref": "#/definitions/enumsQuoteType"
                },
                "underlyingSettlementDate": {
                    "type": "string",
                    "format": "date",
                    "title": "underlying settlement date when underlying is BOND"
                }
            }
        },
        "v1SyndicateData": {
            "type": "object",
            "title": "Syndicate Data",
            "required": [
                "dealer"
            ],
            "properties": {
                "dealer": {
                    "type": "string",
                    "title": "Dealer Name - Abbreviated version of broker name (e.g., LEH)",
                    "required": [
                        "dealer"
                    ]
                },
                "dealerRole": {
                    "description": "Dealer Role - Represents Lead Manager or Co Manager etc.",
                    "$ref": "#/definitions/enumsDealerRole"
                },
                "percentageFee": {
                    "description": "Fee Percentage - Underwriting fee earned by dealer in currency denominations.",
                    "type": "number",
                    "format": "double"
                },
                "proceedsUsed": {
                    "type": "boolean",
                    "title": "Proceeds - Is there a use of proceeds? (Y/N)"
                }
            }
        },
        "v1TbaData": {
            "type": "object",
            "title": "TbaData describes fields to create Adjustable rate mortgage securities-To be Announced  and Mortgage backed securities-To be Announced",
            "properties": {
                "agency": {
                    "title": "Represents Agency, for example FN, FG, FH, GN \n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "$ref": "#/definitions/enumsAgency"
                },
                "term": {
                    "title": "Original amortization term in months \n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\naip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: Conflict is cross domain, and the field is independent --)",
                    "$ref": "#/definitions/enumsTbaTerm"
                },
                "settlementDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Settlement date represents maturity date when asset gets mature"
                },
                "ioTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Length of initial interest only term"
                },
                "balloonTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Balloon date in months from beginning"
                },
                "weightedAverageCoupon": {
                    "type": "number",
                    "format": "double",
                    "title": "Weighted average coupon"
                },
                "weightedAverageMaturity": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Weighted average maturity"
                },
                "weightedAverageLoanAge": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Weighted average Loan age"
                },
                "lienPosition": {
                    "title": "Lien position",
                    "$ref": "#/definitions/enumsLienPosition"
                },
                "loanToValue": {
                    "type": "number",
                    "format": "double",
                    "title": "Loan to value\n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: We need to do this because this is commonly accepted name--)"
                },
                "debtServiceCoverageRatio": {
                    "type": "number",
                    "format": "double",
                    "title": "Debt service coverage ratio"
                },
                "tier": {
                    "type": "string",
                    "title": "Tier"
                },
                "fixedPrincipalPaymentAmount": {
                    "type": "number",
                    "format": "double",
                    "title": "Fixed principal payment amount"
                },
                "accrualBase": {
                    "title": "Accrual base",
                    "$ref": "#/definitions/enumsAccrualBase"
                },
                "prepaymentPenaltyType": {
                    "title": "Prepayment premium option",
                    "$ref": "#/definitions/enumsPrepaymentPenaltyType"
                },
                "prepaymentPenaltyTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Prepayment premium term"
                },
                "lockoutTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Number of business days reset is suspended"
                },
                "decliningPremiumFormula": {
                    "type": "string",
                    "title": "Declining premium"
                },
                "defeasanceLockoutTerm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Defeasance Lockout Term"
                },
                "yieldMaintainenceRate": {
                    "type": "number",
                    "format": "double",
                    "title": "Yield maintainence rate"
                },
                "prepaymentPenaltyDescription": {
                    "type": "string",
                    "title": "Prepayment premium description"
                },
                "propertyType": {
                    "title": "Property type\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: Conflict is cross domain, and the field is independent --)",
                    "$ref": "#/definitions/enumsTbaPropertyType"
                },
                "propertyName": {
                    "type": "string",
                    "title": "Property name"
                },
                "propertyAddress": {
                    "type": "string",
                    "title": "Property address\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: Conflict is cross domain, and the field is independent --)"
                },
                "city": {
                    "type": "string",
                    "title": "City"
                },
                "state": {
                    "type": "string",
                    "title": "State"
                },
                "zipCode": {
                    "type": "string",
                    "title": "Zip code"
                },
                "counterparty": {
                    "type": "string",
                    "title": "represents 360T, ABG etc"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "data.reference_data.asset.asset_creation.v1.SecurityCreation:write": "non-sensitive write",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "data.reference_data.asset.asset_creation.v1.SecurityCreation:write": "non-sensitive write",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "data.reference_data.asset.asset_creation.v1.SecurityCreation:write",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "data.reference_data.asset.asset_creation.v1.SecurityCreation:write",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}