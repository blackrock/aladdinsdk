# coding: utf-8

"""
    Cash Ladder

    Cash Ladder provides a settlement date based ladder of cash balances for all the exposure currencies for a given portfolio group and cash date.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field
from aladdinsdk.api.codegen.portfolio_management.cash.cash_ladder.v2.CashLadderAPI.models.v2_cash_ladder_query import V2CashLadderQuery

class V2FilterCashLadderRequest(BaseModel):
    """
    V2FilterCashLadderRequest
    """
    cash_ladder_query: Optional[V2CashLadderQuery] = Field(None, alias="cashLadderQuery")
    __properties = ["cashLadderQuery"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V2FilterCashLadderRequest:
        """Create an instance of V2FilterCashLadderRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of cash_ladder_query
        if self.cash_ladder_query:
            _dict['cashLadderQuery'] = self.cash_ladder_query.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V2FilterCashLadderRequest:
        """Create an instance of V2FilterCashLadderRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V2FilterCashLadderRequest.parse_obj(obj)

        _obj = V2FilterCashLadderRequest.parse_obj({
            "cash_ladder_query": V2CashLadderQuery.from_dict(obj.get("cashLadderQuery")) if obj.get("cashLadderQuery") is not None else None
        })
        return _obj

