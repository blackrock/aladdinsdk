# coding: utf-8

"""
    Positions

    API to retrieve and monitor managed positions for Start of Day Positions. Managed positions are positions enriched with additional context such as restrictions and substitutions.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1AssertOperator(str, Enum):
    """
    - ASSERT_OPERATOR_UNSPECIFIED: Operator not specified  - ASSERT_OPERATOR_EQ: Operator equals  - ASSERT_OPERATOR_NEQ: Operator not equals  - ASSERT_OPERATOR_GT: Operator greater than  - ASSERT_OPERATOR_GTEQ: Operator greater than or equals  - ASSERT_OPERATOR_LT: Operator less than  - ASSERT_OPERATOR_LTEQ: Operator less than or equals  - ASSERT_OPERATOR_IN_RANGE: Operator in range  - ASSERT_OPERATOR_CONTAINS: Operator contains  - ASSERT_OPERATOR_NOT_CONTAINS: Operator not contains  - ASSERT_OPERATOR_STARTS_WITH: Operator starts with  - ASSERT_OPERATOR_ENDS_WITH: Operator ends with  - ASSERT_OPERATOR_IN: Operator in
    """

    """
    allowed enum values
    """
    ASSERT_OPERATOR_UNSPECIFIED = 'ASSERT_OPERATOR_UNSPECIFIED'
    ASSERT_OPERATOR_EQ = 'ASSERT_OPERATOR_EQ'
    ASSERT_OPERATOR_NEQ = 'ASSERT_OPERATOR_NEQ'
    ASSERT_OPERATOR_GT = 'ASSERT_OPERATOR_GT'
    ASSERT_OPERATOR_GTEQ = 'ASSERT_OPERATOR_GTEQ'
    ASSERT_OPERATOR_LT = 'ASSERT_OPERATOR_LT'
    ASSERT_OPERATOR_LTEQ = 'ASSERT_OPERATOR_LTEQ'
    ASSERT_OPERATOR_IN_RANGE = 'ASSERT_OPERATOR_IN_RANGE'
    ASSERT_OPERATOR_CONTAINS = 'ASSERT_OPERATOR_CONTAINS'
    ASSERT_OPERATOR_NOT_CONTAINS = 'ASSERT_OPERATOR_NOT_CONTAINS'
    ASSERT_OPERATOR_STARTS_WITH = 'ASSERT_OPERATOR_STARTS_WITH'
    ASSERT_OPERATOR_ENDS_WITH = 'ASSERT_OPERATOR_ENDS_WITH'
    ASSERT_OPERATOR_IN = 'ASSERT_OPERATOR_IN'

    @classmethod
    def from_json(cls, json_str: str) -> V1AssertOperator:
        """Create an instance of V1AssertOperator from a JSON string"""
        return V1AssertOperator(json.loads(json_str))


