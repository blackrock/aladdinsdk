# coding: utf-8

"""
    Aladdin Investment Target

    This service provides advance capabilities to create and manage all types of Aladdin Investment Targets and their associated subscriptions.  # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1TargetMeasure(str, Enum):
    """
    - TARGET_MEASURE_UNSPECIFIED: No definition present (not a valid input value)  - TARGET_MEASURE_MV: MV  - TARGET_MEASURE_PCT_MV: %MV  - TARGET_MEASURE_EXP: Exp  - TARGET_MEASURE_PCT_EXP: %EXP  - TARGET_MEASURE_DUR_CONTRIB: Dur Contrib  - TARGET_MEASURE_SPD_DUR_CONTRIB: Spd Dur Contrib  - TARGET_MEASURE_DXS_LBR_CONTRIB: DxS Lbr Contrib  - TARGET_MEASURE_DXS_TSY_CONTRIB: DxS Tsy Contrib  - TARGET_MEASURE_NOTIONAL: Notional  - TARGET_MEASURE_QTY: Qty  - TARGET_MEASURE_MKT_YLD_CONTRIB: Market yld contribution  - TARGET_MEASURE_DEL_ADJ_PCT_EXP: Delta adj. %Exp  - TARGET_MEASURE_INFL_DUR_CONTRIB: Inflation Duration Contribution
    """

    """
    allowed enum values
    """
    TARGET_MEASURE_UNSPECIFIED = 'TARGET_MEASURE_UNSPECIFIED'
    TARGET_MEASURE_MV = 'TARGET_MEASURE_MV'
    TARGET_MEASURE_PCT_MV = 'TARGET_MEASURE_PCT_MV'
    TARGET_MEASURE_EXP = 'TARGET_MEASURE_EXP'
    TARGET_MEASURE_PCT_EXP = 'TARGET_MEASURE_PCT_EXP'
    TARGET_MEASURE_DUR_CONTRIB = 'TARGET_MEASURE_DUR_CONTRIB'
    TARGET_MEASURE_SPD_DUR_CONTRIB = 'TARGET_MEASURE_SPD_DUR_CONTRIB'
    TARGET_MEASURE_DXS_LBR_CONTRIB = 'TARGET_MEASURE_DXS_LBR_CONTRIB'
    TARGET_MEASURE_DXS_TSY_CONTRIB = 'TARGET_MEASURE_DXS_TSY_CONTRIB'
    TARGET_MEASURE_NOTIONAL = 'TARGET_MEASURE_NOTIONAL'
    TARGET_MEASURE_QTY = 'TARGET_MEASURE_QTY'
    TARGET_MEASURE_MKT_YLD_CONTRIB = 'TARGET_MEASURE_MKT_YLD_CONTRIB'
    TARGET_MEASURE_DEL_ADJ_PCT_EXP = 'TARGET_MEASURE_DEL_ADJ_PCT_EXP'
    TARGET_MEASURE_INFL_DUR_CONTRIB = 'TARGET_MEASURE_INFL_DUR_CONTRIB'

    @classmethod
    def from_json(cls, json_str: str) -> V1TargetMeasure:
        """Create an instance of V1TargetMeasure from a JSON string"""
        return V1TargetMeasure(json.loads(json_str))


