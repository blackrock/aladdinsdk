# coding: utf-8

"""
    Climate

    The Aladdin Climate Data API exposes physical, transition, and temperature alignment analytics as of a given date. Users can retrieve data for selected entity types by specifying the desired datapoints for each climate risk type and scenario. The Aladdin Climate Meta Data API outlines the datapoints available across physical, transition, and temperature alignment analytics.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1IdType(str, Enum):
    """
    - ID_TYPE_UNSPECIFIED: Default Value - Error is thrown in this case  - ID_TYPE_SECURITY: SECURITY - Used to query for security level metrics for all supported asset classes  - ID_TYPE_DEAL: DEAL - Used to query for deal level metrics mapped to a CMBS security  - ID_TYPE_LOAN: LOAN - Used to query for loan level metrics mapped to a CMBS security  - ID_TYPE_PROPERTY: PROPERTY - Used to query for property level metrics mapped to a CMBS security  - ID_TYPE_ISSUER: ISSUER - Used to query for issuer level metrics (includes corporate issuers and sovereign entities)  - ID_TYPE_SECTOR: SECTOR - Used to query for the highest level GICS sector level climate scores. Example : 'Energy', 'Consumer Staples'  - ID_TYPE_MACRO: MACRO- Used to query country and global data for macroenvironmental measures, can be used without any entry in the “ids” section
    """

    """
    allowed enum values
    """
    ID_TYPE_UNSPECIFIED = 'ID_TYPE_UNSPECIFIED'
    ID_TYPE_SECURITY = 'ID_TYPE_SECURITY'
    ID_TYPE_DEAL = 'ID_TYPE_DEAL'
    ID_TYPE_LOAN = 'ID_TYPE_LOAN'
    ID_TYPE_PROPERTY = 'ID_TYPE_PROPERTY'
    ID_TYPE_ISSUER = 'ID_TYPE_ISSUER'
    ID_TYPE_SECTOR = 'ID_TYPE_SECTOR'
    ID_TYPE_MACRO = 'ID_TYPE_MACRO'

    @classmethod
    def from_json(cls, json_str: str) -> V1IdType:
        """Create an instance of V1IdType from a JSON string"""
        return V1IdType(json.loads(json_str))


