# coding: utf-8

"""
    Security Analytics Compute

    Compute security level analytics, cash flows and scenario analytics with custom valuation settings.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt

class V1HorizonAnalyticsSet(BaseModel):
    """
    V1HorizonAnalyticsSet
    """
    horizon_base_vol: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonBaseVol")
    horizon_base_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonBasePrice")
    horizon_base_oas: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonBaseOas")
    horizon_base_market_value: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonBaseMarketValue")
    horizon_base_market_notional: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonBaseMarketNotional")
    expected_return: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="expectedReturn")
    expected_return_paydown: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="expectedReturnPaydown")
    expected_return_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="expectedReturnPrice")
    expected_return_interest: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="expectedReturnInterest")
    simple_return: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="simpleReturn")
    simple_return_paydown: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="simpleReturnPaydown")
    simple_return_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="simpleReturnPrice")
    dollar_expected_return: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarExpectedReturn")
    dollar_expected_return_paydown: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarExpectedReturnPaydown")
    dollar_expected_return_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarExpectedReturnPrice")
    dollar_expected_return_interest: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarExpectedReturnInterest")
    dollar_horizon_future_value: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarHorizonFutureValue")
    dollar_simple_return: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarSimpleReturn")
    dollar_simple_return_paydown: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarSimpleReturnPaydown")
    dollar_simple_return_price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarSimpleReturnPrice")
    dollar_simple_return_interest: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="dollarSimpleReturnInterest")
    horizon_future_value: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonFutureValue")
    horizon_future_value_of_cashflows: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonFutureValueOfCashflows")
    horizon_future_value_of_cashflows_interest: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonFutureValueOfCashflowsInterest")
    horizon_future_value_of_cashflows_principal: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonFutureValueOfCashflowsPrincipal")
    horizon_future_value_of_cashflows_reinv: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="horizonFutureValueOfCashflowsReinv")
    pct_horizon_future_value_of_cashflows: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="pctHorizonFutureValueOfCashflows")
    pct_horizon_future_value_of_cashflows_interest: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="pctHorizonFutureValueOfCashflowsInterest")
    pct_horizon_future_value_of_cashflows_principal: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="pctHorizonFutureValueOfCashflowsPrincipal")
    pct_horizon_future_value_of_cashflows_reinv: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="pctHorizonFutureValueOfCashflowsReinv")
    __properties = ["horizonBaseVol", "horizonBasePrice", "horizonBaseOas", "horizonBaseMarketValue", "horizonBaseMarketNotional", "expectedReturn", "expectedReturnPaydown", "expectedReturnPrice", "expectedReturnInterest", "simpleReturn", "simpleReturnPaydown", "simpleReturnPrice", "dollarExpectedReturn", "dollarExpectedReturnPaydown", "dollarExpectedReturnPrice", "dollarExpectedReturnInterest", "dollarHorizonFutureValue", "dollarSimpleReturn", "dollarSimpleReturnPaydown", "dollarSimpleReturnPrice", "dollarSimpleReturnInterest", "horizonFutureValue", "horizonFutureValueOfCashflows", "horizonFutureValueOfCashflowsInterest", "horizonFutureValueOfCashflowsPrincipal", "horizonFutureValueOfCashflowsReinv", "pctHorizonFutureValueOfCashflows", "pctHorizonFutureValueOfCashflowsInterest", "pctHorizonFutureValueOfCashflowsPrincipal", "pctHorizonFutureValueOfCashflowsReinv"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V1HorizonAnalyticsSet:
        """Create an instance of V1HorizonAnalyticsSet from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V1HorizonAnalyticsSet:
        """Create an instance of V1HorizonAnalyticsSet from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V1HorizonAnalyticsSet.parse_obj(obj)

        _obj = V1HorizonAnalyticsSet.parse_obj({
            "horizon_base_vol": obj.get("horizonBaseVol"),
            "horizon_base_price": obj.get("horizonBasePrice"),
            "horizon_base_oas": obj.get("horizonBaseOas"),
            "horizon_base_market_value": obj.get("horizonBaseMarketValue"),
            "horizon_base_market_notional": obj.get("horizonBaseMarketNotional"),
            "expected_return": obj.get("expectedReturn"),
            "expected_return_paydown": obj.get("expectedReturnPaydown"),
            "expected_return_price": obj.get("expectedReturnPrice"),
            "expected_return_interest": obj.get("expectedReturnInterest"),
            "simple_return": obj.get("simpleReturn"),
            "simple_return_paydown": obj.get("simpleReturnPaydown"),
            "simple_return_price": obj.get("simpleReturnPrice"),
            "dollar_expected_return": obj.get("dollarExpectedReturn"),
            "dollar_expected_return_paydown": obj.get("dollarExpectedReturnPaydown"),
            "dollar_expected_return_price": obj.get("dollarExpectedReturnPrice"),
            "dollar_expected_return_interest": obj.get("dollarExpectedReturnInterest"),
            "dollar_horizon_future_value": obj.get("dollarHorizonFutureValue"),
            "dollar_simple_return": obj.get("dollarSimpleReturn"),
            "dollar_simple_return_paydown": obj.get("dollarSimpleReturnPaydown"),
            "dollar_simple_return_price": obj.get("dollarSimpleReturnPrice"),
            "dollar_simple_return_interest": obj.get("dollarSimpleReturnInterest"),
            "horizon_future_value": obj.get("horizonFutureValue"),
            "horizon_future_value_of_cashflows": obj.get("horizonFutureValueOfCashflows"),
            "horizon_future_value_of_cashflows_interest": obj.get("horizonFutureValueOfCashflowsInterest"),
            "horizon_future_value_of_cashflows_principal": obj.get("horizonFutureValueOfCashflowsPrincipal"),
            "horizon_future_value_of_cashflows_reinv": obj.get("horizonFutureValueOfCashflowsReinv"),
            "pct_horizon_future_value_of_cashflows": obj.get("pctHorizonFutureValueOfCashflows"),
            "pct_horizon_future_value_of_cashflows_interest": obj.get("pctHorizonFutureValueOfCashflowsInterest"),
            "pct_horizon_future_value_of_cashflows_principal": obj.get("pctHorizonFutureValueOfCashflowsPrincipal"),
            "pct_horizon_future_value_of_cashflows_reinv": obj.get("pctHorizonFutureValueOfCashflowsReinv")
        })
        return _obj

