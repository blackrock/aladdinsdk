# coding: utf-8

"""
    Risk Governance - Rule Evaluation

    Trigger Rule evaluations for Rules created and subscribed to within Risk Radar.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1RuleExecutionState(str, Enum):
    """
    - RULE_EXECUTION_STATE_UNSPECIFIED: No definition present (not a valid input value)  - RULE_EXECUTION_STATE_SUCCESS: Rule evaluation completed successfully  - RULE_EXECUTION_STATE_PARTIAL_FAILURE: Rule evaluation completed with failures, check errorMessage for reason  - RULE_EXECUTION_STATE_FAILURE: Failure encountered during the evaluation of the rule, check errorMessage for reason  - RULE_EXECUTION_STATE_DEFERRED: Rule Evaluation has been deferred and will be retried later, e.g. benchmark is not ready, check errorMessage for reason
    """

    """
    allowed enum values
    """
    RULE_EXECUTION_STATE_UNSPECIFIED = 'RULE_EXECUTION_STATE_UNSPECIFIED'
    RULE_EXECUTION_STATE_SUCCESS = 'RULE_EXECUTION_STATE_SUCCESS'
    RULE_EXECUTION_STATE_PARTIAL_FAILURE = 'RULE_EXECUTION_STATE_PARTIAL_FAILURE'
    RULE_EXECUTION_STATE_FAILURE = 'RULE_EXECUTION_STATE_FAILURE'
    RULE_EXECUTION_STATE_DEFERRED = 'RULE_EXECUTION_STATE_DEFERRED'

    @classmethod
    def from_json(cls, json_str: str) -> V1RuleExecutionState:
        """Create an instance of V1RuleExecutionState from a JSON string"""
        return V1RuleExecutionState(json.loads(json_str))


