# coding: utf-8

"""
    Portfolio Optimization 2.0

    Optimize portfolio positions to maximize expected returns and minimize risk and transaction costs.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V2AllowShortPosition(str, Enum):
    """
    possible treatments for short positions.   - ALLOW_SHORT_POSITION_UNSPECIFIED: value if allow_short_position is not specified. Will default to no  - ALLOW_SHORT_POSITION_YES: allow short positions  - ALLOW_SHORT_POSITION_NO: don't allow short positions  - ALLOW_SHORT_POSITION_FROZEN_RISKY_INITIAL: Risky initial short positions are frozen. No non-cash additional short position is allowed  - ALLOW_SHORT_POSITION_FROZEN_INITIAL: Initial short positions are frozen. No additional short position is allowed
    """

    """
    allowed enum values
    """
    ALLOW_SHORT_POSITION_UNSPECIFIED = 'ALLOW_SHORT_POSITION_UNSPECIFIED'
    ALLOW_SHORT_POSITION_YES = 'ALLOW_SHORT_POSITION_YES'
    ALLOW_SHORT_POSITION_NO = 'ALLOW_SHORT_POSITION_NO'
    ALLOW_SHORT_POSITION_FROZEN_RISKY_INITIAL = 'ALLOW_SHORT_POSITION_FROZEN_RISKY_INITIAL'
    ALLOW_SHORT_POSITION_FROZEN_INITIAL = 'ALLOW_SHORT_POSITION_FROZEN_INITIAL'

    @classmethod
    def from_json(cls, json_str: str) -> V2AllowShortPosition:
        """Create an instance of V2AllowShortPosition from a JSON string"""
        return V2AllowShortPosition(json.loads(json_str))


