# coding: utf-8

"""
    Portfolio Optimization 2.0

    Optimize portfolio positions to maximize expected returns and minimize risk and transaction costs.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V2OptimizationSolutionType(str, Enum):
    """
    - OPTIMIZATION_SOLUTION_TYPE_UNSPECIFIED: OptimizerStatus has not been specified  - OPTIMIZATION_SOLUTION_TYPE_OPTIMAL: Optimizer found the optimal solution  - OPTIMIZATION_SOLUTION_TYPE_FEASIBLE: Optimizer found a feasible solution  - OPTIMIZATION_SOLUTION_TYPE_INFEASIBLE: Optimizer cannot find a feasible solution  - OPTIMIZATION_SOLUTION_TYPE_ERROR: Optimizer failed with error  - OPTIMIZATION_SOLUTION_TYPE_RELAXED: Optimizer relaxed some constraints and then found a solution  - OPTIMIZATION_SOLUTION_TYPE_BOUNDED: The problem is bounded, but the optimizer has not found a solution.  - OPTIMIZATION_SOLUTION_TYPE_UNBOUNDED: The problem is unbounded. The objective value may go to infinity.  - OPTIMIZATION_SOLUTION_TYPE_UNKNOWN: The results of optimization are unknown. This could be due to a variety of different causes
    """

    """
    allowed enum values
    """
    OPTIMIZATION_SOLUTION_TYPE_UNSPECIFIED = 'OPTIMIZATION_SOLUTION_TYPE_UNSPECIFIED'
    OPTIMIZATION_SOLUTION_TYPE_OPTIMAL = 'OPTIMIZATION_SOLUTION_TYPE_OPTIMAL'
    OPTIMIZATION_SOLUTION_TYPE_FEASIBLE = 'OPTIMIZATION_SOLUTION_TYPE_FEASIBLE'
    OPTIMIZATION_SOLUTION_TYPE_INFEASIBLE = 'OPTIMIZATION_SOLUTION_TYPE_INFEASIBLE'
    OPTIMIZATION_SOLUTION_TYPE_ERROR = 'OPTIMIZATION_SOLUTION_TYPE_ERROR'
    OPTIMIZATION_SOLUTION_TYPE_RELAXED = 'OPTIMIZATION_SOLUTION_TYPE_RELAXED'
    OPTIMIZATION_SOLUTION_TYPE_BOUNDED = 'OPTIMIZATION_SOLUTION_TYPE_BOUNDED'
    OPTIMIZATION_SOLUTION_TYPE_UNBOUNDED = 'OPTIMIZATION_SOLUTION_TYPE_UNBOUNDED'
    OPTIMIZATION_SOLUTION_TYPE_UNKNOWN = 'OPTIMIZATION_SOLUTION_TYPE_UNKNOWN'

    @classmethod
    def from_json(cls, json_str: str) -> V2OptimizationSolutionType:
        """Create an instance of V2OptimizationSolutionType from a JSON string"""
        return V2OptimizationSolutionType(json.loads(json_str))


