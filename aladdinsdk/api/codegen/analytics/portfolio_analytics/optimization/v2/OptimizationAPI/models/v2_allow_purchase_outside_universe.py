# coding: utf-8

"""
    Portfolio Optimization 2.0

    Optimize portfolio positions to maximize expected returns and minimize risk and transaction costs.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V2AllowPurchaseOutsideUniverse(str, Enum):
    """
    - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_UNSPECIFIED: value if allow_purchase_outside_universe is not specified. Will default to force sell  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_ALLOW_PURCHASE: do nothing and allow purchase  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_MOVE_TO_BENCHMARK: try to match the benchmark weights for such assets.  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_NO_PURCHASE: can only sell such assets, but not buy. (For short positions, can only buy.)  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_SELL: force positions of such assets to zero  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_SOFT_SELL: clear positions such assets to zero if possible (no conflict with other constraint)  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_TO_BENCHMARK: force to match the benchmark weights for such assets.  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION: do not change positions of such assets  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_HARD: do not change positions of such assets, and not relaxing this requirement.  - ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_SOFT: do not change positions of such assets if possible (no conflict with other constraint)
    """

    """
    allowed enum values
    """
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_UNSPECIFIED = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_UNSPECIFIED'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_ALLOW_PURCHASE = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_ALLOW_PURCHASE'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_MOVE_TO_BENCHMARK = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_MOVE_TO_BENCHMARK'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_NO_PURCHASE = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_NO_PURCHASE'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_SELL = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_SELL'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_SOFT_SELL = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_SOFT_SELL'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_TO_BENCHMARK = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FORCE_TO_BENCHMARK'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_HARD = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_HARD'
    ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_SOFT = 'ALLOW_PURCHASE_OUTSIDE_UNIVERSE_FREEZE_POSITION_SOFT'

    @classmethod
    def from_json(cls, json_str: str) -> V2AllowPurchaseOutsideUniverse:
        """Create an instance of V2AllowPurchaseOutsideUniverse from a JSON string"""
        return V2AllowPurchaseOutsideUniverse(json.loads(json_str))


