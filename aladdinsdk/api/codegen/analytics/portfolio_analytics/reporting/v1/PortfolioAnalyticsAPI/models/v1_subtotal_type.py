# coding: utf-8

"""
    Portfolio Analytics

    Generate Portfolio Analytics.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1SubtotalType(str, Enum):
    """
    - SUBTOTAL_TYPE_UNSPECIFIED: Subtotal unspecified  - SUBTOTAL_TYPE_DEFAULT: Default Subtotal will be applied  - SUBTOTAL_TYPE_SUM: Subtotal type SUM  - SUBTOTAL_TYPE_SIMPLE_AVERAGE: Subtotal type Average  - SUBTOTAL_TYPE_ABSOLUTE: Subtotal type Absolute Sum  - SUBTOTAL_TYPE_DATA_AGGREGATOR: Subtotal type Security Node Column Subtotaller  - SUBTOTAL_TYPE_WEIGHTED_AVERAGE: Subtotal type Weighted Average  - SUBTOTAL_TYPE_NOTIONAL_VAL_BY_MARKET_VAL: Subtotal type Notional Market Value / Market Value  - SUBTOTAL_TYPE_SPD_DUR_NOTIONAL: Subtotal type SpdDur*Notional/SpdDur*Notional  - SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL: Subtotal type Market Value / Market Value  - SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_VALUES: Subtotal type Market Value / Market Value ( exclude Values)  - SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_NULL_VALUES: Subtotal type Market Value / Market Value ( exclude Null Values)  - SUBTOTAL_TYPE_DELTA_NOTIONAL_MV_BY_DELTA_NOTIONAL_MV_EXCLUDE_NULL: Subtotal type Delta Notional Market Value / Delta Notional Market Value Exclude Null Values  - SUBTOTAL_TYPE_BOOK_VAL_BY_BOOK_VAL: Subtotal type Book Value / Book Value  - SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE: Subtotal type Par Value/Par Value  - SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_IGNORE_ZEROS: Subtotal type Par Value / Par Value Ignore Zero  - SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_ABSOLUTE: Subtotal type Par Value / Par Value Absolute Weight  - SUBTOTAL_TYPE_PAR_BY_PAR_WITH_HANDLING_OF_TITLE_TRADED: Subtotal type Par / Par  - SUBTOTAL_TYPE_RATING_SUBTOTALLER: Subtotal type Rating Subtotaller  - SUBTOTAL_TYPE_DERIVED_SUBTOTALLER: Subtotal type Derived Subtotaller  - SUBTOTAL_TYPE_VAR_NOTIONAL_BY_MARKET_VAL: Subtotal type Variable Market Value / Market Value  - SUBTOTAL_TYPE_UNIQUE_VALUE: Subtotal type Unique Value  - SUBTOTAL_TYPE_DISTINCT_VALUE_COUNT: Subtotal type Distinct Value Count  - SUBTOTAL_TYPE_HARMONIC_MEAN: Subtotal type Harmonic Mean  - SUBTOTAL_TYPE_MEDIAN: Subtotal type Median  - SUBTOTAL_TYPE_MIN: Subtotal type Min  - SUBTOTAL_TYPE_WEIGHTED_AVERAGE_HARMONIC_MEAN: Subtotal type Weighted Average Harmonic Mean  - SUBTOTAL_TYPE_MAX: Subtotal type Max  - SUBTOTAL_TYPE_HROR: Subtotal type HROR Subtotaller  - SUBTOTAL_TYPE_ABS_MV_PERCENT: Subtotal type Absolute(Market Value %)  - SUBTOTAL_TYPE_MV_PERCENT: Subtotal type Market Value %  - SUBTOTAL_TYPE_ABS_MV_BY_ABS_MV: Subtotal type Abs(Market Value) / Abs(Market Value)  - SUBTOTAL_TYPE_ABS_NMV_BY_PORT_MV: Subtotal type Absolute (Notional Market Value) / Portfolio (Market Value)  - SUBTOTAL_TYPE_ABS_NMV_BY_MV: Subtotal type Absolute (Notional Market Value) / Market Value  - SUBTOTAL_TYPE_SUM_SAME_SECURITY_CURRENCY: Subtotal type Sum If All Security Currency is Same As Port currency  - SUBTOTAL_TYPE_SUM_SAME_PORT_CURRENCY: Subtotal type Sum If All Portfolio Currency Same As Main Portfolio Currency  - SUBTOTAL_TYPE_POSITIVE_SUM: Subtotal type Positive Sum  - SUBTOTAL_TYPE_SCORE_MINUS: Subtotal type Score with short handling  - SUBTOTAL_TYPE_EVIC_EMISSIONS_BY_EVIC_EMISSIONS_EXCLUDE_NULL: Subtotal type Enterprise value + cash and equivalents (EVIC) weighted by emissions, Exclude Null Values  - SUBTOTAL_TYPE_AGGREGATED_BUDGET_EXCLUDE_NULL: Subtotal type Aggregated Budget Exclude Null Values  - SUBTOTAL_TYPE_NOTIONAL_SIGN_SECURITY_NODE_SUBTOTALLER: Subtotal type Notional Market Value Sign Security Subtotaller  - SUBTOTAL_TYPE_ZSCORE_SUBTOTALLER: Subtotal type Z-Score  - SUBTOTAL_TYPE_LACK_OF_POLICY: Subtotal type Lack of Policy Wt Avg
    """

    """
    allowed enum values
    """
    SUBTOTAL_TYPE_UNSPECIFIED = 'SUBTOTAL_TYPE_UNSPECIFIED'
    SUBTOTAL_TYPE_DEFAULT = 'SUBTOTAL_TYPE_DEFAULT'
    SUBTOTAL_TYPE_SUM = 'SUBTOTAL_TYPE_SUM'
    SUBTOTAL_TYPE_SIMPLE_AVERAGE = 'SUBTOTAL_TYPE_SIMPLE_AVERAGE'
    SUBTOTAL_TYPE_ABSOLUTE = 'SUBTOTAL_TYPE_ABSOLUTE'
    SUBTOTAL_TYPE_DATA_AGGREGATOR = 'SUBTOTAL_TYPE_DATA_AGGREGATOR'
    SUBTOTAL_TYPE_WEIGHTED_AVERAGE = 'SUBTOTAL_TYPE_WEIGHTED_AVERAGE'
    SUBTOTAL_TYPE_NOTIONAL_VAL_BY_MARKET_VAL = 'SUBTOTAL_TYPE_NOTIONAL_VAL_BY_MARKET_VAL'
    SUBTOTAL_TYPE_SPD_DUR_NOTIONAL = 'SUBTOTAL_TYPE_SPD_DUR_NOTIONAL'
    SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL = 'SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL'
    SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_VALUES = 'SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_VALUES'
    SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_NULL_VALUES = 'SUBTOTAL_TYPE_MARKET_VAL_BY_MARKET_VAL_EXCLUDE_NULL_VALUES'
    SUBTOTAL_TYPE_DELTA_NOTIONAL_MV_BY_DELTA_NOTIONAL_MV_EXCLUDE_NULL = 'SUBTOTAL_TYPE_DELTA_NOTIONAL_MV_BY_DELTA_NOTIONAL_MV_EXCLUDE_NULL'
    SUBTOTAL_TYPE_BOOK_VAL_BY_BOOK_VAL = 'SUBTOTAL_TYPE_BOOK_VAL_BY_BOOK_VAL'
    SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE = 'SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE'
    SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_IGNORE_ZEROS = 'SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_IGNORE_ZEROS'
    SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_ABSOLUTE = 'SUBTOTAL_TYPE_PAR_VALUE_BY_PAR_VALUE_ABSOLUTE'
    SUBTOTAL_TYPE_PAR_BY_PAR_WITH_HANDLING_OF_TITLE_TRADED = 'SUBTOTAL_TYPE_PAR_BY_PAR_WITH_HANDLING_OF_TITLE_TRADED'
    SUBTOTAL_TYPE_RATING_SUBTOTALLER = 'SUBTOTAL_TYPE_RATING_SUBTOTALLER'
    SUBTOTAL_TYPE_DERIVED_SUBTOTALLER = 'SUBTOTAL_TYPE_DERIVED_SUBTOTALLER'
    SUBTOTAL_TYPE_VAR_NOTIONAL_BY_MARKET_VAL = 'SUBTOTAL_TYPE_VAR_NOTIONAL_BY_MARKET_VAL'
    SUBTOTAL_TYPE_UNIQUE_VALUE = 'SUBTOTAL_TYPE_UNIQUE_VALUE'
    SUBTOTAL_TYPE_DISTINCT_VALUE_COUNT = 'SUBTOTAL_TYPE_DISTINCT_VALUE_COUNT'
    SUBTOTAL_TYPE_HARMONIC_MEAN = 'SUBTOTAL_TYPE_HARMONIC_MEAN'
    SUBTOTAL_TYPE_MEDIAN = 'SUBTOTAL_TYPE_MEDIAN'
    SUBTOTAL_TYPE_MIN = 'SUBTOTAL_TYPE_MIN'
    SUBTOTAL_TYPE_WEIGHTED_AVERAGE_HARMONIC_MEAN = 'SUBTOTAL_TYPE_WEIGHTED_AVERAGE_HARMONIC_MEAN'
    SUBTOTAL_TYPE_MAX = 'SUBTOTAL_TYPE_MAX'
    SUBTOTAL_TYPE_HROR = 'SUBTOTAL_TYPE_HROR'
    SUBTOTAL_TYPE_ABS_MV_PERCENT = 'SUBTOTAL_TYPE_ABS_MV_PERCENT'
    SUBTOTAL_TYPE_MV_PERCENT = 'SUBTOTAL_TYPE_MV_PERCENT'
    SUBTOTAL_TYPE_ABS_MV_BY_ABS_MV = 'SUBTOTAL_TYPE_ABS_MV_BY_ABS_MV'
    SUBTOTAL_TYPE_ABS_NMV_BY_PORT_MV = 'SUBTOTAL_TYPE_ABS_NMV_BY_PORT_MV'
    SUBTOTAL_TYPE_ABS_NMV_BY_MV = 'SUBTOTAL_TYPE_ABS_NMV_BY_MV'
    SUBTOTAL_TYPE_SUM_SAME_SECURITY_CURRENCY = 'SUBTOTAL_TYPE_SUM_SAME_SECURITY_CURRENCY'
    SUBTOTAL_TYPE_SUM_SAME_PORT_CURRENCY = 'SUBTOTAL_TYPE_SUM_SAME_PORT_CURRENCY'
    SUBTOTAL_TYPE_POSITIVE_SUM = 'SUBTOTAL_TYPE_POSITIVE_SUM'
    SUBTOTAL_TYPE_SCORE_MINUS = 'SUBTOTAL_TYPE_SCORE_MINUS'
    SUBTOTAL_TYPE_EVIC_EMISSIONS_BY_EVIC_EMISSIONS_EXCLUDE_NULL = 'SUBTOTAL_TYPE_EVIC_EMISSIONS_BY_EVIC_EMISSIONS_EXCLUDE_NULL'
    SUBTOTAL_TYPE_AGGREGATED_BUDGET_EXCLUDE_NULL = 'SUBTOTAL_TYPE_AGGREGATED_BUDGET_EXCLUDE_NULL'
    SUBTOTAL_TYPE_NOTIONAL_SIGN_SECURITY_NODE_SUBTOTALLER = 'SUBTOTAL_TYPE_NOTIONAL_SIGN_SECURITY_NODE_SUBTOTALLER'
    SUBTOTAL_TYPE_ZSCORE_SUBTOTALLER = 'SUBTOTAL_TYPE_ZSCORE_SUBTOTALLER'
    SUBTOTAL_TYPE_LACK_OF_POLICY = 'SUBTOTAL_TYPE_LACK_OF_POLICY'

    @classmethod
    def from_json(cls, json_str: str) -> V1SubtotalType:
        """Create an instance of V1SubtotalType from a JSON string"""
        return V1SubtotalType(json.loads(json_str))


