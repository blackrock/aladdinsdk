{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API contains operations on Aladdin Corporate Action Entitlement resource.",
        "title": "Aladdin Corporate Action Entitlement",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.investment_operations.asset_lifecycle.corporate_action.CorporateActionEntitlementAPI",
        "x-aladdin-api-stability": "beta",
        "x-aladdin-spec-id": "agraph.investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlementAPI"
    },
    "basePath": "/api/investment-operations/asset-lifecycle/corporate-action/v1/",
    "paths": {
        "/corporateActionEntitlements/{parent}/corporateActionElection:cancel": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Cancel the elections associated with the specified entitlement key that\nhave not been instructed or processed.",
                "summary": "Cancel Elections",
                "operationId": "CorporateActionEntitlementAPI_CancelElections",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Entitlement Id.",
                        "name": "parent",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "description": "The request message for\nCorporateActionEntitlementAPI.CancelElections.",
                            "type": "object",
                            "required": [
                                "corporateActionId",
                                "entitlementTouchCount"
                            ],
                            "properties": {
                                "corporateActionId": {
                                    "description": "Corporate Action Id.",
                                    "type": "string",
                                    "required": [
                                        "corporate_action_id"
                                    ]
                                },
                                "entitlementTouchCount": {
                                    "description": "Entitlement touch count.",
                                    "type": "integer",
                                    "format": "int32",
                                    "required": [
                                        "entitlement_touch_count"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1CancelElectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-quota-limit": 100
            }
        },
        "/corporateActionEntitlements:electElections": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Elect elections for multiple entitlement keys. Supports partial success\nof operation on election.\nOnly the following fields for elections are considered for this operation.\n(1) Election percentage,\n(2) election amount,\n(3) election reason,\n(4) option number,\n(5) option type.\nFrom the body container, fields that are not required for making a search can be removed from elections object only. \n(-- api-linter: aladdin::9002::wordslist-custom-method-http=disabled\n aip.dev/not-precedent: We need to do this because this method elects\n elections on entitlements--)\n(-- api-linter: aladdin::9002::wordslist-custom-method-rpc=disabled\n aip.dev/not-precedent: We need to do this because this method elects\n elections on entitlements--)",
                "summary": "Elect Elections",
                "operationId": "CorporateActionEntitlementAPI_ElectElections",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1ElectElectionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1ElectElectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-quota-limit": 100
            }
        },
        "/corporateActionEntitlements:filter": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Filters corporate action entitlements based on search criteria.\nMandatory fields here is corporateActionIds. This can be clubbed (if required) with all available search parameters.\nFrom the body container, fields that are not required for making a search can be removed from corporateActionEntitlementQuery object only.\nPagination not supported currently. pagesize \u0026 pageToken have to be left as they are.",
                "summary": "Filter Corporate Action Entitlements",
                "operationId": "CorporateActionEntitlementAPI_FilterCorporateActionEntitlements",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1FilterCorporateActionEntitlementsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1FilterCorporateActionEntitlementsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-quota-limit": 100
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "CorporateActionEntitlementEntitlementState": {
            "description": "Enumeration of entitlement states.\n\n - ENTITLEMENT_STATE_UNSPECIFIED: Reserved Value.\n - ENTITLEMENT_STATE_ACTIVE: Represents Active State\n - ENTITLEMENT_STATE_NONACTIVE: Represents Non-Active State.",
            "type": "string",
            "default": "ENTITLEMENT_STATE_UNSPECIFIED",
            "enum": [
                "ENTITLEMENT_STATE_UNSPECIFIED",
                "ENTITLEMENT_STATE_ACTIVE",
                "ENTITLEMENT_STATE_NONACTIVE"
            ]
        },
        "ElectionState": {
            "description": "Enumeration of election state.\n\n - STATE_UNSPECIFIED: Reserved value. Default value if nothing specified.\n - STATE_ELECTION_PROPOSED: Proposed.\n - STATE_ELECTED: Elected.\n - STATE_NOT_APPLICABLE: Not applicable.\n - STATE_ELECTION_PENDING: Election Pending.",
            "type": "string",
            "default": "STATE_UNSPECIFIED",
            "enum": [
                "STATE_UNSPECIFIED",
                "STATE_ELECTION_PROPOSED",
                "STATE_ELECTED",
                "STATE_NOT_APPLICABLE",
                "STATE_ELECTION_PENDING"
            ]
        },
        "rpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "type": "object",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "v1CancelElectionsResponse": {
            "description": "The response message for\nCorporateActionEntitlementAPI.CancelElections.",
            "type": "object",
            "properties": {
                "entitlementKey": {
                    "description": "Entitlement Key is combination of corporate action id, entitlement id \u0026\ntouch count of entitlement.",
                    "$ref": "#/definitions/v1EntitlementKey"
                },
                "elections": {
                    "description": "Corporate action election which were not cancelled.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Election"
                    }
                },
                "status": {
                    "description": "Status of corporate action elections cancellation.",
                    "type": "string"
                }
            }
        },
        "v1CorporateActionEntitlement": {
            "description": "CorporateActionEntitlement describes portfolio level distributin on a\ncorporate action.\nWhen a corporate action takes place eg Stock split for a asset.\nThe view of all portfolios having this asset is called entitlement.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Resources must have a 'id' field.\n\nCorporate action entitlement Id generated by Aladdin. Numeric value stored as a string.",
                    "type": "string"
                },
                "corporateActionId": {
                    "description": "Corporate action Id generated by Aladdin. Numeric value stored as a string.",
                    "type": "string"
                },
                "portfolioId": {
                    "description": "Portfolio Id. Numeric value stored as a string.",
                    "type": "string"
                },
                "assetId": {
                    "description": "Aladdin asset identifier undergoing corporate action.",
                    "type": "string"
                },
                "brokerId": {
                    "description": "Broker Id.",
                    "type": "string"
                },
                "tradedEntitlementAmount": {
                    "description": "Traded entitlement amount.",
                    "type": "number",
                    "format": "double"
                },
                "settledEntitlementAmount": {
                    "description": "Settled entitlement amount.",
                    "type": "number",
                    "format": "double"
                },
                "counterPartyEntitlementAmount": {
                    "description": "Counter party entitlement amount.",
                    "type": "number",
                    "format": "double"
                },
                "instructionComment": {
                    "description": "Entitlement instruction comments.",
                    "type": "string"
                },
                "modifier": {
                    "description": "The user that last modified this record.",
                    "type": "string"
                },
                "modifyTime": {
                    "description": "RTime when this record was modified.",
                    "type": "string",
                    "format": "date-time"
                },
                "touchCount": {
                    "description": "The number of times this record has been touched.",
                    "type": "integer",
                    "format": "int32"
                },
                "electionDeadlineDate": {
                    "description": "Election deadline date.",
                    "type": "string",
                    "format": "date"
                },
                "instructionDeadlineTime": {
                    "description": "Deadline time for entitlement instruction.",
                    "type": "string",
                    "format": "date-time"
                },
                "entitlementState": {
                    "description": "Represents Entitlement State.",
                    "$ref": "#/definitions/CorporateActionEntitlementEntitlementState"
                },
                "entitlementSecurityType": {
                    "description": "Represents Entitlement Security Type.",
                    "$ref": "#/definitions/v1EntitlementSecurityType"
                },
                "entitlementType": {
                    "description": "Represents Entitlement Type.",
                    "$ref": "#/definitions/v1EntitlementType"
                },
                "entitlementFullType": {
                    "description": "Represents Entitlement Full Type.",
                    "type": "string"
                },
                "restriction": {
                    "description": "Restriction on the entitlement.",
                    "type": "string"
                },
                "entitlementMetadata": {
                    "description": "Represents the meta data for this entitlement.",
                    "$ref": "#/definitions/v1EntitlementMetadata"
                },
                "elections": {
                    "description": "Describes the elections made for each of the corporate action entitlements and the instructions for the custodian. In the case where an entitlement's election is split between multiple options there will be multiple elections for the same entitlement Id.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Election"
                    }
                }
            }
        },
        "v1CorporateActionEntitlementQuery": {
            "description": "The query required to perform a\nCorporateActionEntitlementAPI.FilterCorporateActionEntitlements query.",
            "type": "object",
            "required": [
                "corporateActionIds"
            ],
            "properties": {
                "ids": {
                    "description": "Aladdin corporate action entitlement Ids. Numeric values stored as strings.\nEntitlment Id provided alone does not work for this Filter RPC.\nIt only works when provided in conjunction with portfolio ids and\nentitlement types.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "corporateActionIds": {
                    "description": "Aladdin parent corporate action Ids. Numeric values stored as strings.\nThis is mandatory input for this RPC call.",
                    "type": "array",
                    "required": [
                        "corporate_action_ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "portfolioIds": {
                    "description": "Portfolio Id for the entitlement. Numeric value stored as a string.\nThis input parameter works in conjunction with entitlement ids and\nentitlement type.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entitlementTypes": {
                    "description": "Represents corporate action entitlement types.\nThis input parameter works in conjunction with entitlement Ids and\nportfolio\nIds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1EntitlementType"
                    }
                }
            }
        },
        "v1CorporateActionValidation": {
            "description": "CorporateActionValidation describes the validation result for any operation.",
            "type": "object",
            "required": [
                "validationMessage"
            ],
            "properties": {
                "corporateActionValidationSeverity": {
                    "description": "The severity of the violation.",
                    "$ref": "#/definitions/v1CorporateActionValidationSeverity"
                },
                "validationCode": {
                    "description": "Validation code for the violation.",
                    "$ref": "#/definitions/v1ValidationCode"
                },
                "validationMessage": {
                    "description": "A description of the violation.",
                    "type": "string",
                    "required": [
                        "validation_message"
                    ]
                }
            }
        },
        "v1CorporateActionValidationSeverity": {
            "description": "Severity describes whether the validation is a warning or an error.\n\n - CORPORATE_ACTION_VALIDATION_SEVERITY_UNSPECIFIED: Default value.\n - CORPORATE_ACTION_VALIDATION_SEVERITY_WARNING: Warning.\n - CORPORATE_ACTION_VALIDATION_SEVERITY_ERROR: Error.",
            "type": "string",
            "default": "CORPORATE_ACTION_VALIDATION_SEVERITY_UNSPECIFIED",
            "enum": [
                "CORPORATE_ACTION_VALIDATION_SEVERITY_UNSPECIFIED",
                "CORPORATE_ACTION_VALIDATION_SEVERITY_WARNING",
                "CORPORATE_ACTION_VALIDATION_SEVERITY_ERROR"
            ]
        },
        "v1CostAllocationState": {
            "description": "Enumeration of cost allocation state.\n\n - COST_ALLOCATION_STATE_UNSPECIFIED: Reserved value. Default value if nothing specified.\n - COST_ALLOCATION_STATE_APPLIED: Applied.\n - COST_ALLOCATION_STATE_PENDING: Pending.\n - COST_ALLOCATION_STATE_NOT_APPLICABLE: Not applicable.\n - COST_ALLOCATION_STATE_ESTIMATED: Estimated.",
            "type": "string",
            "default": "COST_ALLOCATION_STATE_UNSPECIFIED",
            "enum": [
                "COST_ALLOCATION_STATE_UNSPECIFIED",
                "COST_ALLOCATION_STATE_APPLIED",
                "COST_ALLOCATION_STATE_PENDING",
                "COST_ALLOCATION_STATE_NOT_APPLICABLE",
                "COST_ALLOCATION_STATE_ESTIMATED"
            ]
        },
        "v1ElectElectionRequestDetails": {
            "description": "The details for message ElectElectionsRequest.",
            "type": "object",
            "required": [
                "elections"
            ],
            "properties": {
                "entitlementKey": {
                    "description": "Mandatory field to uniquely identify Entitlement of elections.\nEntitlement Key is combination of corporate action id, entitlement id \u0026\ntouch count of entitlement.",
                    "$ref": "#/definitions/v1EntitlementKey"
                },
                "elections": {
                    "description": "Elections to elect.",
                    "type": "array",
                    "required": [
                        "elections"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1Election"
                    }
                },
                "overrideCompliance": {
                    "description": "Determines whether to ignore compliance violations while performing\noperation.",
                    "type": "boolean"
                }
            }
        },
        "v1ElectElectionsRequest": {
            "description": "The request message for\nCorporateActionEntitlementAPI.ElectElections.",
            "type": "object",
            "properties": {
                "electElectionRequestDetails": {
                    "description": "Complete details of elections to be elected.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1ElectElectionRequestDetails"
                    }
                }
            }
        },
        "v1ElectElectionsResponse": {
            "description": "The response message for\nCorporateActionEntitlementAPI.ElectElections.",
            "type": "object",
            "properties": {
                "electElectionsResponseDetails": {
                    "description": "Response of elections elected.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1ElectElectionsResponseDetails"
                    }
                },
                "generalValidations": {
                    "description": "Any general warnings or errors occurring while performing this operation.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1CorporateActionValidation"
                    }
                },
                "includePartialErrors": {
                    "type": "boolean",
                    "title": "Indicates if the response contains partial errors.\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: We need to do this because it better describes the\n goal of this flag --)"
                }
            }
        },
        "v1ElectElectionsResponseDetails": {
            "description": "The response message for\nCorporateActionEntitlementAPI.ElectElections.",
            "type": "object",
            "properties": {
                "entitlementKey": {
                    "description": "Mandatory field to uniquely identify Entitlement of elected elections.\nEntitlement Key is combination of corporate action id, entitlement id \u0026\ntouch count of entitlement.",
                    "$ref": "#/definitions/v1EntitlementKey"
                },
                "elections": {
                    "description": "Corporate action election created/updated.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Election"
                    }
                },
                "complianceViolated": {
                    "description": "Indicates whether compliance violations resulted from this operation.",
                    "type": "boolean"
                },
                "corporateActionValidations": {
                    "description": "Validation message (if applicable) for the elections associated with parent\nentitlement id.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1CorporateActionValidation"
                    }
                },
                "status": {
                    "description": "Status of corporate action elections created/updated.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "processed": {
                    "description": "Indicates whether the record is successfully created/updated or not.",
                    "type": "boolean"
                }
            }
        },
        "v1Election": {
            "description": "Election describes the elections made for each of the\ncorporate action entitlements\nas well as the information pertaining to instructing said election to the\ncustodian.\nIn case where an entitlement's election is split between multiple options\nthere will be multiple elections for the same entitlement ID.",
            "type": "object",
            "properties": {
                "optionNumber": {
                    "description": "Elected option number.",
                    "type": "integer",
                    "format": "int32"
                },
                "optionType": {
                    "description": "Election option type.",
                    "type": "string"
                },
                "entitledAmount": {
                    "description": "Entitlement amount at the time of election (useful for detecting stale\nelections).",
                    "type": "number",
                    "format": "double"
                },
                "electedAmount": {
                    "description": "Elected amount.",
                    "type": "number",
                    "format": "double"
                },
                "appliedAmount": {
                    "description": "Amount applied from the election (null means full elected amount is\napplied).",
                    "type": "number",
                    "format": "double"
                },
                "appliedAmountModifier": {
                    "description": "User who modified applied amount.",
                    "type": "string"
                },
                "electionPercentage": {
                    "description": "Percentage of future position changes to be applied with this option.\nValue between 0.0 (exclusive) and 1.0 (inclusive), e.g., 0.5 for 50 percent.",
                    "type": "number",
                    "format": "double"
                },
                "electionReason": {
                    "description": "Reason for making the election.",
                    "type": "string"
                },
                "elector": {
                    "description": "Name of the person who made the election.",
                    "type": "string"
                },
                "electedTime": {
                    "description": "Time when the election was made.",
                    "type": "string",
                    "format": "date-time"
                },
                "authorizer": {
                    "description": "Person that authorized election. When populated by internal Aladdin®\nsystems this will be a username.",
                    "type": "string"
                },
                "authorizedTime": {
                    "description": "Time when the election was authorized.",
                    "type": "string",
                    "format": "date-time"
                },
                "instructedAmount": {
                    "description": "Amount instructed to custodian / borrower (may differ from elected amount\nfor operational reasons).",
                    "type": "number",
                    "format": "double"
                },
                "instructor": {
                    "description": "Person/method of making the instruction.",
                    "type": "string"
                },
                "confirmer": {
                    "description": "Person/method of confirming the instruction.",
                    "type": "string"
                },
                "electionState": {
                    "description": "Election status.",
                    "$ref": "#/definitions/ElectionState"
                },
                "electionProcessingInfos": {
                    "description": "Processing information of election.This may not exist until processing is\nfirst attempted.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1ElectionProcessingInfo"
                    }
                },
                "touchCount": {
                    "description": "Election version.",
                    "type": "integer",
                    "format": "int32"
                },
                "modifier": {
                    "description": "Name of the person who last modified elections.",
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Timestamp when the election was last modified.\n(-- api-linter: core::0142::time-field-names=disabled\naip.dev/not-precedent:\nWe need to do this because modified date is the more natural term the\nbusiness would use to describe this --)"
                },
                "sourceOptionNumber": {
                    "description": "Source option number that maps to the composite option number.",
                    "type": "integer",
                    "format": "int32"
                },
                "sourceExternalCorpActId": {
                    "description": "Source external corporate action Id that maps to the linked custodian\nevent.",
                    "type": "string"
                },
                "instructionComment": {
                    "description": "Special comments to be included with the election instruction.",
                    "type": "string"
                },
                "bidPrice": {
                    "description": "Bid Price for Dutch Auction Tenders.",
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "v1ElectionProcessingInfo": {
            "description": "Processing information of election.This may not exist until processing is\nfirst attempted.",
            "type": "object",
            "required": [
                "processingId"
            ],
            "properties": {
                "processingId": {
                    "type": "string",
                    "title": "Election processing Id. Numeric value stored as a string.\n(-- api-linter: core::0124::required-reference=disabled\n aip.dev/not-precedent: We need to do this because there is no resource associated with this field--)",
                    "required": [
                        "processing_id"
                    ]
                },
                "electionProcessingState": {
                    "description": "Election processing status.",
                    "$ref": "#/definitions/v1ElectionProcessingState"
                },
                "processedAmount": {
                    "description": "Amount processed for this election.",
                    "type": "number",
                    "format": "double"
                },
                "processor": {
                    "description": "Name of the person who triggered the processing.",
                    "type": "string"
                },
                "processedTime": {
                    "description": "Time when the election was processed.",
                    "type": "string",
                    "format": "date-time"
                },
                "modifier": {
                    "description": "Name of the person who last modified the election processing.",
                    "type": "string"
                },
                "modifiedTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Time when the election process was modified last.\n(-- api-linter: core::0142::time-field-names=disabled aip.dev/not-precedent:\nWe need to do this because modified date is the more natural term the\nbusiness would use to describe this --)"
                },
                "touchCount": {
                    "description": "Version of election processing information.",
                    "type": "integer",
                    "format": "int32"
                },
                "costAllocationState": {
                    "description": "CostAllocation status.",
                    "$ref": "#/definitions/v1CostAllocationState"
                }
            }
        },
        "v1ElectionProcessingState": {
            "description": "Enumeration of election processing state.\n\n - ELECTION_PROCESSING_STATE_UNSPECIFIED: Reserved value. Default value if nothing specified.\n - ELECTION_PROCESSING_STATE_NOT_PROCESSED: Not processed.\n - ELECTION_PROCESSING_STATE_PARTIALLY_PROCESSED: Partially processed.\n - ELECTION_PROCESSING_STATE_MANUALLY_PROCESSED: Manually processed.\n - ELECTION_PROCESSING_STATE_PROCESSED: Processed.\n - ELECTION_PROCESSING_STATE_FAILED: Failed.\n - ELECTION_PROCESSING_STATE_UNDER_PROCESSING: Under processing.",
            "type": "string",
            "default": "ELECTION_PROCESSING_STATE_UNSPECIFIED",
            "enum": [
                "ELECTION_PROCESSING_STATE_UNSPECIFIED",
                "ELECTION_PROCESSING_STATE_NOT_PROCESSED",
                "ELECTION_PROCESSING_STATE_PARTIALLY_PROCESSED",
                "ELECTION_PROCESSING_STATE_MANUALLY_PROCESSED",
                "ELECTION_PROCESSING_STATE_PROCESSED",
                "ELECTION_PROCESSING_STATE_FAILED",
                "ELECTION_PROCESSING_STATE_UNDER_PROCESSING"
            ]
        },
        "v1EntitlementKey": {
            "description": "Entitlement key uniquely identifies an entitlement.\nIt is a combination of corporate action id, entitlement id and\nentitlement touch count.",
            "type": "object",
            "required": [
                "entitlementId",
                "corporateActionId",
                "entitlementTouchCount"
            ],
            "properties": {
                "entitlementId": {
                    "description": "Entitlement Id.",
                    "type": "string",
                    "required": [
                        "entitlement_id"
                    ]
                },
                "corporateActionId": {
                    "description": "Corporate Action Id.",
                    "type": "string",
                    "required": [
                        "corporate_action_id"
                    ]
                },
                "entitlementTouchCount": {
                    "description": "Entitlement touch count.",
                    "type": "integer",
                    "format": "int32",
                    "required": [
                        "entitlement_touch_count"
                    ]
                }
            }
        },
        "v1EntitlementLoadFlag": {
            "description": "Enumeration of corporate action entitlement load flag.\n\n - ENTITLEMENT_LOAD_FLAG_UNSPECIFIED: The reserved value.\n - ENTITLEMENT_LOAD_FLAG_DETAILS: DETAILS.\n - ENTITLEMENT_LOAD_FLAG_EVENT: EVENT.\n - ENTITLEMENT_LOAD_FLAG_ACCT_RESP: ACCT_RESP.\n - ENTITLEMENT_LOAD_FLAG_INSTRUCTION: INSTRUCTION.\n - ENTITLEMENT_LOAD_FLAG_EXT_CA_ID: EXT CA ID.\n - ENTITLEMENT_LOAD_FLAG_SETTLEMENT: SETTLEMENT.\n - ENTITLEMENT_LOAD_FLAG_RELATED_ENTITLEMENTS: RELATED ENTITLEMENTS.\n - ENTITLEMENT_LOAD_FLAG_ADJUSTMENT: ADJUSTMENT.\n - ENTITLEMENT_LOAD_FLAG_CUSTODIAN_ENTITLEMENTS: CUSTODIAN ENTITLEMENTS.\n - ENTITLEMENT_LOAD_FLAG_RELATED_PORTFOLIO_ENTITLEMENTS: RELATED PORTFOLIO ENTITLEMENTS.",
            "type": "string",
            "default": "ENTITLEMENT_LOAD_FLAG_UNSPECIFIED",
            "enum": [
                "ENTITLEMENT_LOAD_FLAG_UNSPECIFIED",
                "ENTITLEMENT_LOAD_FLAG_DETAILS",
                "ENTITLEMENT_LOAD_FLAG_EVENT",
                "ENTITLEMENT_LOAD_FLAG_ACCT_RESP",
                "ENTITLEMENT_LOAD_FLAG_INSTRUCTION",
                "ENTITLEMENT_LOAD_FLAG_EXT_CA_ID",
                "ENTITLEMENT_LOAD_FLAG_SETTLEMENT",
                "ENTITLEMENT_LOAD_FLAG_RELATED_ENTITLEMENTS",
                "ENTITLEMENT_LOAD_FLAG_ADJUSTMENT",
                "ENTITLEMENT_LOAD_FLAG_CUSTODIAN_ENTITLEMENTS",
                "ENTITLEMENT_LOAD_FLAG_RELATED_PORTFOLIO_ENTITLEMENTS"
            ]
        },
        "v1EntitlementMetadata": {
            "description": "Entitlement metadata.",
            "type": "object",
            "properties": {
                "instructionDeadlineModifier": {
                    "description": "User who manually edited the instruction deadline.",
                    "type": "string"
                },
                "electionDeadlineModifier": {
                    "description": "User who manually edited the election deadline.",
                    "type": "string"
                },
                "custodianProvidedInstructionDeadlineTime": {
                    "description": "Instruction deadline provided by the custodian for the entitlement.",
                    "type": "string",
                    "format": "date-time"
                },
                "lockColumnDetails": {
                    "description": "Represents the locked columns details for this entitlement.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1LockColumnDetails"
                    }
                }
            }
        },
        "v1EntitlementSecurityType": {
            "description": "Enumeration of entitlement security type.\n\n - ENTITLEMENT_SECURITY_TYPE_UNSPECIFIED: Reserved Value.\n - ENTITLEMENT_SECURITY_TYPE_PRIMARY: PRIMARY.\n - ENTITLEMENT_SECURITY_TYPE_OPTION: OPTION.\n - ENTITLEMENT_SECURITY_TYPE_CONTRACT_FOR_DIFFERENCES: CONTRACT FOR DIFFERENCES.\n - ENTITLEMENT_SECURITY_TYPE_PARTICIPATORY_NOTE: PARTICIPATORY NOTE.\n - ENTITLEMENT_SECURITY_TYPE_WARRANT: WARRANT.\n - ENTITLEMENT_SECURITY_TYPE_TOTAL_RETURN_SWAP: TOTAL RETURN SWAP.",
            "type": "string",
            "default": "ENTITLEMENT_SECURITY_TYPE_UNSPECIFIED",
            "enum": [
                "ENTITLEMENT_SECURITY_TYPE_UNSPECIFIED",
                "ENTITLEMENT_SECURITY_TYPE_PRIMARY",
                "ENTITLEMENT_SECURITY_TYPE_OPTION",
                "ENTITLEMENT_SECURITY_TYPE_CONTRACT_FOR_DIFFERENCES",
                "ENTITLEMENT_SECURITY_TYPE_PARTICIPATORY_NOTE",
                "ENTITLEMENT_SECURITY_TYPE_WARRANT",
                "ENTITLEMENT_SECURITY_TYPE_TOTAL_RETURN_SWAP"
            ]
        },
        "v1EntitlementType": {
            "description": "Enumeration of entitlement types.\n\n - ENTITLEMENT_TYPE_UNSPECIFIED: Reserved Value.\n - ENTITLEMENT_TYPE_POS_SHORT: POS_SHORT.\n - ENTITLEMENT_TYPE_POS_LONG: POS_LONG.\n - ENTITLEMENT_TYPE_ONLOAN: ONLOAN.\n - ENTITLEMENT_TYPE_COLLATERAL: COLLATERAL.\n - ENTITLEMENT_TYPE_REPO: REPO.",
            "type": "string",
            "default": "ENTITLEMENT_TYPE_UNSPECIFIED",
            "enum": [
                "ENTITLEMENT_TYPE_UNSPECIFIED",
                "ENTITLEMENT_TYPE_POS_SHORT",
                "ENTITLEMENT_TYPE_POS_LONG",
                "ENTITLEMENT_TYPE_ONLOAN",
                "ENTITLEMENT_TYPE_COLLATERAL",
                "ENTITLEMENT_TYPE_REPO"
            ]
        },
        "v1FilterCorporateActionEntitlementsRequest": {
            "description": "The request message for\nCorporateActionEntitlementAPI.FilterCorporateActionEntitlements.",
            "type": "object",
            "properties": {
                "corporateActionEntitlementQuery": {
                    "title": "Query used to filter CorporateActionEntitlements\n(-- api-linter: aladdin::9016::request-message-query=disabled\n aip.dev/not-precedent: We need to do this because the rule postdates the implementation --)",
                    "$ref": "#/definitions/v1CorporateActionEntitlementQuery"
                },
                "pageToken": {
                    "description": "A page token, received from a previous 'FilterCorporateActionEntitlements'\ncall.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to\n'FilterCorporateActionEntitlements' must match the call that provided the\npage token.\nThis value is currently not being used.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "The maximum number of CorporateActions to return. The service may\nreturn fewer than this value. If unspecified, at most 250\nCorporateActions will be returned. The maximum value is 250; values\nabove 250 will be coerced to 250.\nThis value is currently not being used.",
                    "type": "integer",
                    "format": "int32"
                },
                "entitlementLoadFlags": {
                    "description": "Represents corporate action entitlement load flags.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1EntitlementLoadFlag"
                    }
                }
            }
        },
        "v1FilterCorporateActionEntitlementsResponse": {
            "description": "The response message for\nCorporateActionEntitlementAPI.FilterCorporateActionEntitlements.",
            "type": "object",
            "properties": {
                "corporateActionEntitlements": {
                    "description": "The entitlements that match the specified filter criteria.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1CorporateActionEntitlement"
                    }
                },
                "nextPageToken": {
                    "description": "A token, which can be sent as 'page_token' to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                }
            }
        },
        "v1LockColumnDetails": {
            "description": "Represents the locked column details of the entitlement.",
            "type": "object",
            "properties": {
                "modifier": {
                    "description": "The user that locked this column.",
                    "type": "string"
                },
                "columnLocked": {
                    "description": "The column being locked.",
                    "type": "string"
                },
                "lockedTime": {
                    "description": "The time when this column was locked.",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "v1ValidationCode": {
            "description": "Enumeration of validation codes.\n\n - VALIDATION_CODE_UNSPECIFIED: Default value.\n - VALIDATION_CODE_GENERAL: General.\n - VALIDATION_CODE_VERSION: Version.\n - VALIDATION_CODE_COMPLIANCE: Compliance.",
            "type": "string",
            "default": "VALIDATION_CODE_UNSPECIFIED",
            "enum": [
                "VALIDATION_CODE_UNSPECIFIED",
                "VALIDATION_CODE_GENERAL",
                "VALIDATION_CODE_VERSION",
                "VALIDATION_CODE_COMPLIANCE"
            ]
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement": "This grants access to all endpoints in the investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement API",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement": "This grants access to all endpoints in the investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement API",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "investment_operations.asset_lifecycle.corporate_action.v1.CorporateActionEntitlement",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}