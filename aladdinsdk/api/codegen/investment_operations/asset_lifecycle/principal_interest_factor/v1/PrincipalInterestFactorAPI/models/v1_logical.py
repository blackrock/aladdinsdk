# coding: utf-8

"""
    Principal and Interest Factor

    Principal and Interest Factors (PIFs) generally represent the amount of payment per 1000 of Original Face currency units value you currently hold in the given asset, and are used in conjunction with position data to generate cashflows. This API allows for filtering and retrieval of PIF records based on a number of criteria including assetId, dates, security groups, currency and more.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1Logical(str, Enum):
    """
    Logical operators apply to boolean values and yield a result of the same type as the operands. The right operand is evaluated conditionally. To match common patterns of speech, the OR operator has higher precedence than AND, unlike what is found in most programming languages. The expression a AND b OR c evaluates: a AND (b OR c).   - LOGICAL_UNSPECIFIED: Default value  - LOGICAL_OR: LOGICAL_OR indicates an OR condition. If any of the two operands is true, then condition becomes true, otherwise it is false.  - LOGICAL_AND: LOGICAL_AND indicates an AND condition. If both the operands are true, then condition becomes true, othwerwise it is false.  - LOGICAL_NOT: LOGICAL_NOT indicates a NOT condition. Use to reverses the logical state of its operand. If a condition is true then Logical NOT operator will make false.
    """

    """
    allowed enum values
    """
    LOGICAL_UNSPECIFIED = 'LOGICAL_UNSPECIFIED'
    LOGICAL_OR = 'LOGICAL_OR'
    LOGICAL_AND = 'LOGICAL_AND'
    LOGICAL_NOT = 'LOGICAL_NOT'

    @classmethod
    def from_json(cls, json_str: str) -> V1Logical:
        """Create an instance of V1Logical from a JSON string"""
        return V1Logical(json.loads(json_str))


