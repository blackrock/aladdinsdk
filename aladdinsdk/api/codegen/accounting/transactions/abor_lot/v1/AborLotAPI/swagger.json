{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This service can be used to get AborLot data.",
        "title": "Abor Lot",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.accounting.transactions.abor_lot.AborLotAPI",
        "x-aladdin-api-stability": "alpha",
        "x-aladdin-spec-id": "agraph.accounting.transactions.abor_lot.v1.AborLotAPI"
    },
    "basePath": "/api/accounting/transactions/abor-lot/v1/",
    "paths": {
        "/aborLots:filter": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "accounting.transactions.abor_lot.v1.AborLot"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "accounting.transactions.abor_lot.v1.AborLot"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Retreives AborLots with AborLotSettings for given portfolio_id",
                "summary": "Filters AborLots",
                "operationId": "AborLotAPI_FilterAborLots",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1FilterAborLotsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1FilterAborLotsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin速 will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin速 will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin速 understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin速 did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-quota-limit": 100000
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "enumsAborLotSettingSource": {
            "description": "- ABOR_LOT_SETTING_SOURCE_UNSPECIFIED: source unsepcified\n - ABOR_LOT_SETTING_SOURCE_PORTFOLIO_DEFAULT: source is portfolio default\n - ABOR_LOT_SETTING_SOURCE_ABOR_LOT_METADATA: source is abor lot metadata",
            "type": "string",
            "title": "Enum to describe source of aborlotsetting record",
            "default": "ABOR_LOT_SETTING_SOURCE_UNSPECIFIED",
            "enum": [
                "ABOR_LOT_SETTING_SOURCE_UNSPECIFIED",
                "ABOR_LOT_SETTING_SOURCE_PORTFOLIO_DEFAULT",
                "ABOR_LOT_SETTING_SOURCE_ABOR_LOT_METADATA"
            ]
        },
        "rpcStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "v1AborLot": {
            "description": "AborLot describes the data of ABOR lots retrieved from the ledger_a_summary table.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "describes the abor lot identifier.",
                    "type": "string"
                },
                "portfolioId": {
                    "description": "describes the portfolio_id associated with the lots.",
                    "type": "string"
                },
                "aborLotId": {
                    "type": "string",
                    "title": "describes the abor lot id of lot\n(-- api-linter: core::0124::required-reference=disabled\n aip.dev/not-precedent: We need to do this because abor_lot_id is not id for AborLot --)"
                },
                "oborLotId": {
                    "type": "integer",
                    "format": "int32",
                    "title": "describes the obor lot id of lot"
                },
                "basis": {
                    "description": "describes the lot basis reflected from request.",
                    "type": "string"
                },
                "assetId": {
                    "type": "string",
                    "title": "describes the asset id of the opening cusip.\nasset_id -\u003e opening_cusip"
                },
                "lotOpenDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Opening time of the lot"
                },
                "lotCloseDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Closing time of the lot"
                },
                "entryTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Time record was entered into this table"
                },
                "cancelTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Time record was cancelled in this table if any"
                },
                "openTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "describes the open time of lot"
                },
                "closeTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "describes the close time of lot"
                },
                "openTransactionId": {
                    "type": "string",
                    "format": "int64",
                    "title": "tid that opens the record"
                },
                "closeTransactionId": {
                    "type": "string",
                    "format": "int64",
                    "title": "tid that closes the record"
                },
                "parentCusip": {
                    "type": "string",
                    "title": "parent cusip of AborLot"
                },
                "limId": {
                    "type": "integer",
                    "format": "int32",
                    "title": "limId of AborLot"
                },
                "primaryBasis": {
                    "type": "string",
                    "title": "primaryBasis of AborLot"
                },
                "lotSettingsAttributesRecordMaps": {
                    "type": "object",
                    "title": "Map of Metadatakey with AborLotSetting",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1AborLotSetting"
                    }
                }
            }
        },
        "v1AborLotQuery": {
            "description": "The query required to perform a AborLotAPI.FilterAborLots operation.",
            "type": "object",
            "required": [
                "portfolioId",
                "bases"
            ],
            "properties": {
                "portfolioId": {
                    "type": "string",
                    "title": "portfolio_id to filter AborLots",
                    "required": [
                        "portfolio_id"
                    ]
                },
                "bases": {
                    "type": "array",
                    "title": "list of basis to filter AborLotProperties",
                    "required": [
                        "bases"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "lastValuationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "last_valuation_date to filter AborLots"
                },
                "snapTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "end_date to filter AborLots"
                }
            }
        },
        "v1AborLotSetting": {
            "type": "object",
            "title": "AborLotSetting record",
            "properties": {
                "mdUuid": {
                    "type": "string",
                    "title": "mdUuid of the AborLotSetting"
                },
                "settingValue": {
                    "type": "string",
                    "title": "Metadata value of the AborLotSetting"
                },
                "datatype": {
                    "type": "string",
                    "title": "datatype of the AborLotSetting Value"
                },
                "aborLotSettingSource": {
                    "title": "source of the AborLotSetting",
                    "$ref": "#/definitions/enumsAborLotSettingSource"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date",
                    "title": "effective date of the AborLotSetting"
                },
                "key": {
                    "type": "string",
                    "title": "Metadata key of the AborLotSetting"
                }
            }
        },
        "v1FilterAborLotsRequest": {
            "type": "object",
            "title": "The request message for AborLotAPI.FilterAborLots.\n(-- api-linter: core::0158::request-page-token-field=disabled\n aip.dev/not-precedent: We need to do this because we dont support pagination --)\n(-- api-linter: core::0158::request-page-size-field=disabled\n aip.dev/not-precedent: We need to do this because  we dont support pagination --)",
            "properties": {
                "query": {
                    "description": "Query used to filter AborLots.",
                    "$ref": "#/definitions/v1AborLotQuery"
                }
            }
        },
        "v1FilterAborLotsResponse": {
            "type": "object",
            "title": "The response message for AborLotAPI.FilterAborLots.\n(-- api-linter: core::0158::response-next-page-token-field=disabled\n aip.dev/not-precedent: We need to do this because  we dont support pagination --)",
            "properties": {
                "aborLots": {
                    "description": "The entities that match the specified FilterAborLotsRequest.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1AborLot"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "accounting.transactions.abor_lot.v1.AborLot": "This grants access to all endpoints in the accounting.transactions.abor_lot.v1.AborLot API",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "accounting.transactions.abor_lot.v1.AborLot": "This grants access to all endpoints in the accounting.transactions.abor_lot.v1.AborLot API",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "accounting.transactions.abor_lot.v1.AborLot",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "accounting.transactions.abor_lot.v1.AborLot",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}