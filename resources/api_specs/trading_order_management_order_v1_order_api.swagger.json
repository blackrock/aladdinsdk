{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Filter, post or cancel orders. An order is a directive from a portfolio manager to the trading desk to execute a particular investment decision.",
        "title": "Order",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.trading.order_management.order.OrderAPI",
        "x-aladdin-api-stability": "stable",
        "x-aladdin-spec-id": "agraph.trading.order_management.order.v1.OrderAPI"
    },
    "basePath": "/api/trading/order-management/order/v1/",
    "paths": {
        "/longrunningoperations/{id}": {
            "get": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to poll for the results of a long running operation.\n(-- api-linter: core::0151::operation-info=disabled aip.dev/not-precedent: Multiple response types can be returned dependent on the LRO API operation. Design was agreed with agraph team. --)",
                "summary": "Get the long running operation results",
                "operationId": "OrderAPI_GetLongrunningOperation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id of the LongrunningOperation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1LongrunningOperation"
                        },
                        "x-aladdin-lro": {}
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 1000
            }
        },
        "/order:post": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to post new and/or update a single Aladdin order. Returns a SinglePostOrderResponse.\n(-- api-linter: aladdin::9002::wordslist-custom-method-http=disabled\n aip.dev/not-precedent: postOrder is the agreed naming with Aladdin Graph team.  --)\n(-- api-linter: core::0133::synonyms=disabled\n aip.dev/not-precedent: postOrder is the agreed naming with Aladdin Graph team.  --)\n(-- api-linter: aladdin::9002::wordslist-custom-method-rpc=disabled\n aip.dev/not-precedent: postOrder is the agreed naming with Aladdin Graph team.  --)\n(-- api-linter: aladdin::9105::method-comment-summary=disabled\n aip.dev/not-precedent: We need to do this because we need a longer summary --)",
                "summary": "Post new and/or update a single Aladdin order.",
                "operationId": "OrderAPI_PostOrder",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1PostOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1SinglePostOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/orderIds:filter": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to filter for the Aladdin order identifiers by order criteria as defined in the FilterOrderIdsRequest. This is a lightweight endpoint which allows for the retrieval of larger lists of order results.\n(-- api-linter: aladdin::9016::rpc-name=disabled aip.dev/not-precedent: OrderIds is the plural resource name. --)",
                "summary": "Filter Aladdin order IDs",
                "operationId": "OrderAPI_FilterOrderIds",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1FilterOrderIdsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1FilterOrderIdsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 500
            }
        },
        "/orders:batchCancel": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to cancel Aladdin orders. Returns a long-running operation to allow for the retrieval of a BatchCancelOrdersResponse when the operation completes.",
                "summary": "Cancel Aladdin orders",
                "operationId": "OrderAPI_BatchCancelOrders",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1BatchCancelOrdersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1LongrunningOperation"
                        },
                        "x-aladdin-lro": {
                            "meta-data-type": {
                                "$ref": "#/definitions/v1BatchCancelOrdersMetaData"
                            },
                            "response-type": {
                                "$ref": "#/definitions/v1BatchCancelOrdersResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/orders:batchPost": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to post new and/or update Aladdin orders. Returns a long-running operation to allow for the retrieval of a BatchPostOrdersResponse when the operation completes.\n(-- api-linter: aladdin::9002::wordslist-custom-method-rpc=disabled aip.dev/not-precedent: BatchPostOrders is the agreed naming with Aladdin Graph team. --)\n(-- api-linter: aladdin::9002::wordslist-custom-method-http=disabled aip.dev/not-precedent: batchPost is the agreed naming with Aladdin Graph team. --)",
                "summary": "Post new and/or update Aladdin orders",
                "operationId": "OrderAPI_BatchPostOrders",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1BatchPostOrdersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1LongrunningOperation"
                        },
                        "x-aladdin-lro": {
                            "meta-data-type": {
                                "$ref": "#/definitions/v1BatchPostOrdersMetaData"
                            },
                            "response-type": {
                                "$ref": "#/definitions/v1BatchPostOrdersResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 250
            }
        },
        "/orders:filter": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "trading.order_management.order.v1.Order:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "API to filter for the Aladdin orders by order criteria as defined in the FilterOrdersRequest.",
                "summary": "Filter Aladdin orders by order criteria",
                "operationId": "OrderAPI_FilterOrders",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1FilterOrdersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1FilterOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 500
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "enumsAssignedToStatus": {
            "description": "- ASSIGNED_TO_STATUS_UNSPECIFIED: Unspecified\n - ASSIGNED_TO_STATUS_REQUEST_CLOSE: Request Close\n - ASSIGNED_TO_STATUS_REQUEST_RETURN: Request Return\n - ASSIGNED_TO_STATUS_REQUEST_HOLD: Request Hold\n - ASSIGNED_TO_STATUS_REQUEST_REMOVE_HOLD: Request Remove hold\n - ASSIGNED_TO_STATUS_RETURNED: Returned\n - ASSIGNED_TO_STATUS_REASSIGNED: Reassigned\n - ASSIGNED_TO_STATUS_REQUEST_REJECT: Request reject\n - ASSIGNED_TO_STATUS_REQUEST_LIMIT_CHANGE: Request Limit Change\n - ASSIGNED_TO_STATUS_ACCEPTED: Accepted\n - ASSIGNED_TO_STATUS_HOLD: HOLD\n - ASSIGNED_TO_STATUS_DNT: DO NOT TRADE\n - ASSIGNED_TO_STATUS_REJECT: REJECT",
            "type": "string",
            "title": "Assigned to Status\n(-- api-linter: core::0216::synonyms=disabled\n aip.dev/not-precedent: Not a lifecycle status enum --)",
            "default": "ASSIGNED_TO_STATUS_UNSPECIFIED",
            "enum": [
                "ASSIGNED_TO_STATUS_UNSPECIFIED",
                "ASSIGNED_TO_STATUS_REQUEST_CLOSE",
                "ASSIGNED_TO_STATUS_REQUEST_RETURN",
                "ASSIGNED_TO_STATUS_REQUEST_HOLD",
                "ASSIGNED_TO_STATUS_REQUEST_REMOVE_HOLD",
                "ASSIGNED_TO_STATUS_RETURNED",
                "ASSIGNED_TO_STATUS_REASSIGNED",
                "ASSIGNED_TO_STATUS_REQUEST_REJECT",
                "ASSIGNED_TO_STATUS_REQUEST_LIMIT_CHANGE",
                "ASSIGNED_TO_STATUS_ACCEPTED",
                "ASSIGNED_TO_STATUS_HOLD",
                "ASSIGNED_TO_STATUS_DNT",
                "ASSIGNED_TO_STATUS_REJECT"
            ]
        },
        "enumsCompliancePositionSource": {
            "description": "- COMPLIANCE_POSITION_SOURCE_UNSPECIFIED: Unspecified position source\n - COMPLIANCE_POSITION_SOURCE_ORDER: The position source is order\n - COMPLIANCE_POSITION_SOURCE_TRADE: The position source is trade\n - COMPLIANCE_POSITION_SOURCE_POSITION: The position source is position\n - COMPLIANCE_POSITION_SOURCE_NEW_CASH: The position source is new cash\n - COMPLIANCE_POSITION_SOURCE_MISC_CASH: The position source is misc cash\n - COMPLIANCE_POSITION_SOURCE_COMMITTED_CASH: The position source is committed cash",
            "type": "string",
            "title": "Enumeration of position source for compliance transactions",
            "default": "COMPLIANCE_POSITION_SOURCE_UNSPECIFIED",
            "enum": [
                "COMPLIANCE_POSITION_SOURCE_UNSPECIFIED",
                "COMPLIANCE_POSITION_SOURCE_ORDER",
                "COMPLIANCE_POSITION_SOURCE_TRADE",
                "COMPLIANCE_POSITION_SOURCE_POSITION",
                "COMPLIANCE_POSITION_SOURCE_NEW_CASH",
                "COMPLIANCE_POSITION_SOURCE_MISC_CASH",
                "COMPLIANCE_POSITION_SOURCE_COMMITTED_CASH"
            ]
        },
        "enumsComplianceSeverity": {
            "description": "- COMPLIANCE_SEVERITY_UNSPECIFIED: Reserved Value\n - COMPLIANCE_SEVERITY_WARNING: The severity is warning\n - COMPLIANCE_SEVERITY_RESTRICTION: The severity is restriction\n - COMPLIANCE_SEVERITY_SILENT_ALARM: The severity is silent alarm.\n - COMPLIANCE_SEVERITY_SECURITY_LANDING: The severity is security landing.\n - COMPLIANCE_SEVERITY_TIMING_ISSUE: The severity is timing issue.\n - COMPLIANCE_SEVERITY_GAIN_LOSS_SENSITIVE: The severity is Gain/Loss sensitive.",
            "type": "string",
            "title": "Enumeration of possible severity",
            "default": "COMPLIANCE_SEVERITY_UNSPECIFIED",
            "enum": [
                "COMPLIANCE_SEVERITY_UNSPECIFIED",
                "COMPLIANCE_SEVERITY_WARNING",
                "COMPLIANCE_SEVERITY_RESTRICTION",
                "COMPLIANCE_SEVERITY_SILENT_ALARM",
                "COMPLIANCE_SEVERITY_SECURITY_LANDING",
                "COMPLIANCE_SEVERITY_TIMING_ISSUE",
                "COMPLIANCE_SEVERITY_GAIN_LOSS_SENSITIVE"
            ]
        },
        "enumsFinancingType": {
            "description": "- FINANCING_TYPE_UNSPECIFIED: Unspecified\n - FINANCING_TYPE_PHYSICAL: Physical\n - FINANCING_TYPE_SYNTHETIC: Synthetic",
            "type": "string",
            "title": "Financing Type",
            "default": "FINANCING_TYPE_UNSPECIFIED",
            "enum": [
                "FINANCING_TYPE_UNSPECIFIED",
                "FINANCING_TYPE_PHYSICAL",
                "FINANCING_TYPE_SYNTHETIC"
            ]
        },
        "enumsOrderReservationStatus": {
            "description": "- ORDER_RESERVATION_STATUS_UNSPECIFIED: Unspecified\n - ORDER_RESERVATION_STATUS_PENDING: Code I\n - ORDER_RESERVATION_STATUS_ACKNOWLEDGE: Code S\n - ORDER_RESERVATION_STATUS_RESERVED: Code R\n - ORDER_RESERVATION_STATUS_UNAVAILABLE: Code U\n - ORDER_RESERVATION_STATUS_AVAILABLE: Code A\n - ORDER_RESERVATION_STATUS_ERROR: Code E\n - ORDER_RESERVATION_STATUS_CANCELLED: Code C\n - ORDER_RESERVATION_STATUS_EXPIRED: Code X\n - ORDER_RESERVATION_STATUS_PLACEHOLDER: Code P",
            "type": "string",
            "title": "Order Reservation Status\n(-- api-linter: core::0216::synonyms=disabled\n aip.dev/not-precedent: Not a lifecycle status enum --)",
            "default": "ORDER_RESERVATION_STATUS_UNSPECIFIED",
            "enum": [
                "ORDER_RESERVATION_STATUS_UNSPECIFIED",
                "ORDER_RESERVATION_STATUS_PENDING",
                "ORDER_RESERVATION_STATUS_ACKNOWLEDGE",
                "ORDER_RESERVATION_STATUS_RESERVED",
                "ORDER_RESERVATION_STATUS_UNAVAILABLE",
                "ORDER_RESERVATION_STATUS_AVAILABLE",
                "ORDER_RESERVATION_STATUS_ERROR",
                "ORDER_RESERVATION_STATUS_CANCELLED",
                "ORDER_RESERVATION_STATUS_EXPIRED",
                "ORDER_RESERVATION_STATUS_PLACEHOLDER"
            ]
        },
        "enumsOrderReservationType": {
            "description": "- ORDER_RESERVATION_TYPE_UNSPECIFIED: Unspecified\n - ORDER_RESERVATION_TYPE_CREDIT: Code C\n - ORDER_RESERVATION_TYPE_LOCATE: Code L",
            "type": "string",
            "title": "Order Reservation Type",
            "default": "ORDER_RESERVATION_TYPE_UNSPECIFIED",
            "enum": [
                "ORDER_RESERVATION_TYPE_UNSPECIFIED",
                "ORDER_RESERVATION_TYPE_CREDIT",
                "ORDER_RESERVATION_TYPE_LOCATE"
            ]
        },
        "enumsOwnerType": {
            "description": "- OWNER_TYPE_UNSPECIFIED: Unspecified\n - OWNER_TYPE_TRADER: Trader\n - OWNER_TYPE_PM: PM\n - OWNER_TYPE_HYBRID: HYBRID",
            "type": "string",
            "title": "The Type of Owner",
            "default": "OWNER_TYPE_UNSPECIFIED",
            "enum": [
                "OWNER_TYPE_UNSPECIFIED",
                "OWNER_TYPE_TRADER",
                "OWNER_TYPE_PM",
                "OWNER_TYPE_HYBRID"
            ]
        },
        "portfolioPortfolioReference": {
            "description": "Reference to a portfolio. this include the portfolio id and the portfolio\nticker. Both are returned for `read` but only one of them is required for a\n`write`. If both are provided for a `write` then portfolio id takes\nprecedence.",
            "type": "object",
            "properties": {
                "portfolioId": {
                    "type": "string",
                    "title": "portfolio id"
                },
                "portfolioTicker": {
                    "type": "string",
                    "title": "portfolio ticker"
                }
            }
        },
        "rpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "type": "object",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "v1BasketIdCriterion": {
            "description": "A criterion to filter orders by basket IDs. Users must input at least one Basket ID, along with either an order date or the portfolio/status option, but not both.\nUsers should be aware that an order basket can spread across multiple portfolios, only the orders for the specified portfolio IDs will be returned when using the portfolio ID parameter.",
            "type": "object",
            "required": [
                "basketIds"
            ],
            "properties": {
                "basketIds": {
                    "description": "Basket IDs associated with the orders. This is a required field and at least one non-empty basket ID should be specified.",
                    "type": "array",
                    "required": [
                        "basket_ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "showTraderOrders": {
                    "type": "boolean",
                    "title": "True to show trader orders. Otherwise, PM orders are shown by default. Note that hybrid orders are always returned (i.e. without the owner type assignment).\n(-- api-linter: core::0144::message-field-plural=disabled aip.dev/not-precedent: Plural refers to the order query results but the boolean flag is singular. --)"
                },
                "portStatusOption": {
                    "title": "options to filter by portfolio and order statuses",
                    "$ref": "#/definitions/v1PortfolioAndOrderStatusFilterOption"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Open date for the order"
                }
            }
        },
        "v1BatchCancelOrdersMetaData": {
            "description": "Meta data related to a BatchCancelOrdersResponse.",
            "type": "object"
        },
        "v1BatchCancelOrdersRequest": {
            "type": "object",
            "title": "Request message to batch cancel orders",
            "required": [
                "requests"
            ],
            "properties": {
                "requests": {
                    "description": "List of cancel order request details. At least one request must be specified. Maximum allowed is 500.",
                    "type": "array",
                    "required": [
                        "requests"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1CancelOrderRequest"
                    }
                }
            }
        },
        "v1BatchCancelOrdersResponse": {
            "type": "object",
            "title": "Response to batch cancel orders\n(-- api-linter: aladdin::9050::response-results-field=disabled aip.dev/not-precedent: CancelOrderResult was the chosen object name --)",
            "properties": {
                "results": {
                    "type": "array",
                    "title": "Cancelled order results",
                    "items": {
                        "$ref": "#/definitions/v1CancelOrderResult"
                    }
                }
            }
        },
        "v1BatchPostOrdersMetaData": {
            "description": "Meta data related to a BatchPostOrdersResponse.",
            "type": "object"
        },
        "v1BatchPostOrdersRequest": {
            "type": "object",
            "title": "Request message to create and/or update Aladdin orders\n(-- api-linter: aladdin::9050::request-ids-field=disabled aip.dev/not-precedent: As agreed with AGraph team, use of repeated orders and config instead of repeated \"requests\" is more appropriate. --)",
            "required": [
                "orders"
            ],
            "properties": {
                "postOrderConfig": {
                    "title": "Post order options\n(-- api-linter: aladdin::9050::request-unknown-fields=disabled aip.dev/not-precedent: As agreed with AGraph team, use of repeated orders and config instead of repeated \"requests\" is more appropriate. --)",
                    "$ref": "#/definitions/v1PostOrderConfig"
                },
                "orders": {
                    "type": "array",
                    "title": "Orders to create or update. At least one order must be specified. Maximum allowed is 1000. Users are advised to use small batch sizes and increase parallelism for performance.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Order is the preferred naming --)\n(-- api-linter: aladdin::9050::request-unknown-fields=disabled aip.dev/not-precedent: Order is the preferred naming --)",
                    "required": [
                        "orders"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1Order"
                    }
                }
            }
        },
        "v1BatchPostOrdersResponse": {
            "type": "object",
            "title": "Response to batch post orders\n(-- api-linter: aladdin::9050::response-results-field=disabled aip.dev/not-precedent: We need to do this because a PostOrderResult is the expected output here --)",
            "properties": {
                "results": {
                    "type": "array",
                    "title": "Order results",
                    "items": {
                        "$ref": "#/definitions/v1PostOrderResult"
                    }
                }
            }
        },
        "v1CancelExternalOrderReference": {
            "type": "object",
            "title": "External Order reference information",
            "required": [
                "externalId1",
                "accountCode"
            ],
            "properties": {
                "externalId1": {
                    "type": "string",
                    "title": "First external order number",
                    "required": [
                        "external_id1"
                    ]
                },
                "accountCode": {
                    "description": "Aladdin's unique account code/ID for an organization or system (e.g. an external broker or counterparty). Also known as \"org_id\" to some legacy systems.",
                    "type": "string",
                    "format": "int64",
                    "required": [
                        "account_code"
                    ]
                }
            }
        },
        "v1CancelOrderRequest": {
            "type": "object",
            "title": "Request detail to cancel a single order",
            "properties": {
                "orderId": {
                    "type": "string",
                    "title": "Id of the order to cancel"
                },
                "externalReference": {
                    "title": "Reference to the external order to cancel",
                    "$ref": "#/definitions/v1CancelExternalOrderReference"
                },
                "orderComments": {
                    "type": "array",
                    "title": "Associated comments for this order cancelling change\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Order comment is the preferred naming --)",
                    "items": {
                        "$ref": "#/definitions/v1OrderComment"
                    }
                }
            }
        },
        "v1CancelOrderResult": {
            "description": "Result of cancelling an order as part of a batch operation.",
            "type": "object",
            "properties": {
                "error": {
                    "description": "The error result of the operation in case of failure or cancellation.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "output": {
                    "description": "The normal response of the operation in case of success.",
                    "$ref": "#/definitions/v1Order"
                }
            }
        },
        "v1ClientIdReference": {
            "description": "The client ID reference used for resolving assets via a security reference type that is not in the regular types as defined in OrderAssetReference.",
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string",
                    "title": "The security identifier in this client ID type\n(-- api-linter: core::0124::required-reference=disabled aip.dev/not-precedent: This field is the ID of this ClientIdReference and not a reference to another message.--)"
                },
                "aliasCode": {
                    "description": "Code of the organisation or account where the identifier is assigned from. Please refer to Aladdin Support for the list of valid codes.",
                    "type": "string",
                    "format": "int64"
                },
                "aliasPurpose": {
                    "description": "The purpose field is an additional tag to the alias code for mapping this ID reference. Please refer to Aladdin Support for the list of associated values.",
                    "type": "string"
                }
            }
        },
        "v1ExternalIdCriterion": {
            "type": "object",
            "title": "A criterion to filter by external system trade identifier",
            "required": [
                "externalId1",
                "accountCode"
            ],
            "properties": {
                "externalId1": {
                    "description": "External system's trade identifier. Maps to Order.external_id1.",
                    "type": "string",
                    "required": [
                        "external_id1"
                    ]
                },
                "accountCode": {
                    "description": "Aladdin's unique account code/ID for an organization or system (e.g. external broker / counterparty). Also known as \"org_id\" to some legacy systems.",
                    "type": "string",
                    "format": "int64",
                    "required": [
                        "account_code"
                    ]
                }
            }
        },
        "v1ExternalIdListCriterion": {
            "type": "object",
            "title": "A criterion to filter by multiple external system trade identifiers",
            "required": [
                "externalIdsGroups"
            ],
            "properties": {
                "externalIdsGroups": {
                    "description": "External system's trade identifier groups. Maps to Order.external_id1. The combined maximum number of external identifiers allowed is 10000.",
                    "type": "array",
                    "required": [
                        "external_ids_groups"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1ExternalIdsGroup"
                    }
                }
            }
        },
        "v1ExternalIdsGroup": {
            "description": "Group containing a list of external system's trade identifiers and the associated Aladdin's account code/ID.",
            "type": "object",
            "required": [
                "externalId1s",
                "accountCode"
            ],
            "properties": {
                "externalId1s": {
                    "description": "List of external system's trade identifiers. Maps to Order.external_id1. At least one identifier must be specified. Maximum allowed is 10000.",
                    "type": "array",
                    "required": [
                        "external_id1s"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "accountCode": {
                    "description": "Aladdin's unique account code/ID for an organization or system (e.g. external broker / counterparty). Also known as \"org_id\" to some legacy systems.",
                    "type": "string",
                    "format": "int64",
                    "required": [
                        "account_code"
                    ]
                }
            }
        },
        "v1ExternalOrderReference": {
            "type": "object",
            "title": "External Order Info",
            "properties": {
                "externalId1": {
                    "description": "First external order number. A limit of 64 characters is applied.",
                    "type": "string"
                },
                "externalId2": {
                    "description": "Second external order number. A limit of 64 characters is applied.",
                    "type": "string"
                },
                "accountCode": {
                    "description": "Aladdin's unique account code/ID for an organization or system (e.g. an external broker or counterparty). Also known as \"org_id\" to some legacy systems.",
                    "type": "string",
                    "format": "int64"
                }
            }
        },
        "v1FilterOrderIdsRequest": {
            "type": "object",
            "title": "Filter order identifiers by order ID query criteria.\n(-- api-linter: aladdin::9016::request-message-name=disabled aip.dev/not-precedent: \"OrderIds\" is the plural resource name. --)",
            "properties": {
                "pageSize": {
                    "description": "The maximum number of results desired to be returned by the API in a single page of data. If this value exceeds the maximum supported for the operation or there are fewer data results than this value, a smaller number of results will be returned.\nThe maximum value is 20000. If unspecified or out of range, the default value of 20000 is used.",
                    "type": "integer",
                    "format": "int32"
                },
                "pageToken": {
                    "description": "A page token, received from a previous 'FilterOrderIds' call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to 'FilterOrderIds' must match the call that provided the page token.",
                    "type": "string"
                },
                "query": {
                    "title": "Query to filter orders on",
                    "$ref": "#/definitions/v1OrderIdQuery"
                }
            }
        },
        "v1FilterOrderIdsResponse": {
            "type": "object",
            "title": "Response message containing the filtered order identifier results\n(-- api-linter: aladdin::9016::response-message=disabled aip.dev/not-precedent: Response already includes one repeated field to return orders. --)\n(-- api-linter: aladdin::9016::response-message-name=disabled aip.dev/not-precedent: \"OrderIds\" is the plural resource name. --)",
            "properties": {
                "orderIds": {
                    "type": "array",
                    "title": "Order ID results. A maximum of 20000 order IDs will be returned",
                    "items": {
                        "type": "string"
                    }
                },
                "nextPageToken": {
                    "description": "A token, which can be sent as 'pageToken' to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "title": "A message that contains information about how many results in the returned page could not be found and how many were hidden due to permissions issues"
                }
            }
        },
        "v1FilterOrdersRequest": {
            "type": "object",
            "title": "Filter orders by order query criteria.\n(-- api-linter: aladdin::9016::request-message-name=disabled aip.dev/not-precedent: Message name has previously been agreed. --)",
            "properties": {
                "pageSize": {
                    "description": "The maximum number of results desired to be returned by the API in a single page of data. If this value exceeds the maximum supported for the operation or there are fewer data results than this value, a smaller number of results will be returned.\nThe maximum value is 4000. If unspecified or out of range, the default value of 4000 is used.",
                    "type": "integer",
                    "format": "int32"
                },
                "pageToken": {
                    "description": "A page token, received from a previous 'FilterOrders' call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to 'FilterOrders' must match the call that provided the page token.",
                    "type": "string"
                },
                "query": {
                    "title": "Query to filter orders on",
                    "$ref": "#/definitions/v1OrderQuery"
                }
            }
        },
        "v1FilterOrdersResponse": {
            "type": "object",
            "title": "Response message containing the filtered order results\n(-- api-linter: aladdin::9016::response-message=disabled aip.dev/not-precedent: Response already includes one repeated field to return orders. --)\n(-- api-linter: aladdin::9016::response-message-name=disabled aip.dev/not-precedent: Message name has previously been agreed. --)",
            "properties": {
                "orders": {
                    "type": "array",
                    "title": "Order results. A maximum of 4000 orders will be returned\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Order is the preferred naming --)",
                    "items": {
                        "$ref": "#/definitions/v1Order"
                    }
                },
                "nextPageToken": {
                    "description": "A token, which can be sent as 'pageToken' to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "title": "A message that contains information about how many results in the returned page could not be found and how many were hidden due to permissions issues"
                }
            }
        },
        "v1LongrunningOperation": {
            "description": "LongrunningOperation represents a long-running operation that is the result\nof a network API call.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The server-assigned id, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`id` should have the format of `operations/some/unique/id`.",
                    "type": "string"
                },
                "meta": {
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "$ref": "#/definitions/Any"
                },
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "description": "The error result of the operation in case of failure or cancellation.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "response": {
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "$ref": "#/definitions/Any"
                }
            }
        },
        "v1ModifiedTimeRange": {
            "description": "A time range used to filter orders by their modified time.  The start time range is a required field.  The end time range is an optional field, and will \ndefault to the current server time if omitted.  The start time range must be before the end time range for a valid query range and \nmust not be more than 7 days from the end time range.  The timezone used will be the default aladdin timezone on the server.",
            "type": "object",
            "properties": {
                "startTimeRange": {
                    "description": "The start time range parameter. It must be before the end time.",
                    "$ref": "#/definitions/v1TimeRangeParameter"
                },
                "endTimeRange": {
                    "description": "The end time range parameter. When omitted, the default value is the current time.",
                    "$ref": "#/definitions/v1TimeRangeParameter"
                }
            }
        },
        "v1Order": {
            "description": "An order is a directive from a portfolio manager to the trading desk to execute a particular investment decision.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Aladdin order number. Request treated as an update when order number is specified"
                },
                "orderStatus": {
                    "description": "Aladdin order status. Examples: \"Open\", \"Compl Pending\", \"Authorized\", \"Active\", \"Expired\", \"Rejected\", \"Canceled\", \"Booked\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string",
                    "readOnly": true
                },
                "orderDetails": {
                    "type": "array",
                    "title": "List of order details associated with this order",
                    "items": {
                        "$ref": "#/definitions/v1OrderDetail"
                    }
                },
                "externalOrderReference": {
                    "title": "External order reference",
                    "$ref": "#/definitions/v1ExternalOrderReference"
                },
                "orderSource": {
                    "description": "Source of the modification to the order, this can be a user ID or a system like TRADES.",
                    "type": "string",
                    "readOnly": true
                },
                "assetId": {
                    "type": "string",
                    "title": "Security associated with the order"
                },
                "assetReference": {
                    "title": "Additional references associated with the security",
                    "$ref": "#/definitions/v1OrderAssetReference"
                },
                "transactionType": {
                    "description": "Transaction type of the order. Examples: \"BUY\", \"SELL\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "settleDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Settlement date for the order"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Open date for the order"
                },
                "tradeDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Trade date for the order"
                },
                "basketId": {
                    "description": "Users may provide a Basket ID to mark orders that are related to each other. For example, if ten orders are raised for ten securities which are part of a basket trade\nor program trade or any other type of multi-order trade, the same free-form Basket ID text can be specified across all of these orders for the purpose of tagging.\nThe Basket ID is entered into Aladdin as is and is visible in the \"Basket\" column in Order Monitor of Aladdin Dashboard. A limit of 64 characters is applied. Values over the limit will be truncated.",
                    "type": "string"
                },
                "marketPrice": {
                    "type": "number",
                    "format": "double",
                    "title": "Market price of the security"
                },
                "settleCurrencyCode": {
                    "type": "string",
                    "title": "Currency associated with the price"
                },
                "tradingLimitType": {
                    "description": "Limit type of the order. Examples: \"Price\", \"Yield\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "tradingLimitValue": {
                    "type": "number",
                    "format": "double",
                    "title": "Limit value"
                },
                "tradingStopType": {
                    "description": "Limit stop type of the order. Examples: \"Price\", \"Yield\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "tradingStopValue": {
                    "type": "number",
                    "format": "double",
                    "title": "Stop value"
                },
                "orderType": {
                    "type": "string",
                    "title": "Order type. Examples: \"Market\", \"Limit\". Contact Aladdin Support for full list of accepted values.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Field name must be preserved. --)"
                },
                "expirationType": {
                    "description": "Expiration type. Examples: \"Day\", \"Good Till Cancel\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Expiration date"
                },
                "pmInstruction": {
                    "description": "Update instructions for the order. Examples: \"100% Complete\", \"Approved\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "pmInitials": {
                    "type": "string",
                    "title": "Portfolio manager initials.\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: Initials can be formed using one string --)"
                },
                "traderInitials": {
                    "type": "string",
                    "title": "Trader initials\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: Initials can be formed using one string --)"
                },
                "tradePurpose": {
                    "description": "Trade purpose. Examples: \"Origination\", \"Arbitrage\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "directedCounterparty": {
                    "type": "string",
                    "title": "Directed counterparty"
                },
                "assignedTo": {
                    "type": "string",
                    "title": "Assigned to initials\n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: Dashboard Column Requirement --)"
                },
                "assignedToStatus": {
                    "title": "Assigned to status set to either \"Hold\" or \"Do not Trade\"\n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: Dashboard Column Requirement --)",
                    "$ref": "#/definitions/enumsAssignedToStatus"
                },
                "directedBrokerAccount": {
                    "type": "string",
                    "title": "Directed broker account"
                },
                "counterpartyId": {
                    "description": "Numerical ID associated with the counterparty. This can be retrieved using the Brokers API.",
                    "type": "string"
                },
                "externalCounterpartyId": {
                    "description": "The client-provided non-Aladdin identifier of the executing broker. This is an input-only field that may be used in place of the counterpartyId to select the counterparty via an external account code.",
                    "type": "string"
                },
                "duration": {
                    "type": "number",
                    "format": "double",
                    "title": "Duration"
                },
                "convexity": {
                    "type": "number",
                    "format": "double",
                    "title": "Convexity"
                },
                "dealId": {
                    "description": "Deal ID is a freeform string that is used to link two orders together. See deal type for further information. \nWhen used as a request input, assign the orders by specifying the same string value to connect all the related orders.\nThis ID will be reassigned with a system-wide unique identifier after the orders are posted, and is returned in this field in the order response.",
                    "type": "string"
                },
                "dealType": {
                    "description": "Deal type is the order relationship type. Valid values are: SWAP, SWITCH, PACKAGE, CSWAP, ROLL, SPREAD, RND_ROBIN, COVERED_OPT.\nUse this field in conjunction with deal ID to establish a relationship between two orders.",
                    "type": "string"
                },
                "settleDateOffset": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Settlement date offset"
                },
                "traderFolder": {
                    "description": "Grouping identifier for traders.",
                    "type": "string"
                },
                "dealingCapacity": {
                    "description": "Dealing capacity. Examples: \"Agency Basis\", \"Principal Basis\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "unitType": {
                    "description": "The Unit type of the order Examples: \"VALUE\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "executionInstruction": {
                    "description": "Execution instrutions. Examples: \"All or None\", \"Do not Increase\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "tradingBenchmark": {
                    "description": "Trading benchmark. Examples: \"Market\", \"Best Effort\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "tradingBenchmarkDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Trading benchmark date"
                },
                "tradingBenchmarkPrice": {
                    "type": "number",
                    "format": "double",
                    "title": "Trading benchmark price"
                },
                "activeTime": {
                    "description": "Time when the order was activated by trader.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "authorizeTime": {
                    "description": "Time when the order was authorized. Note regarding the PM/Trader split model: The PM authorizes the order which populates the AUTH_TIME on the PM order.\nFrom the authorized PM order, the trader order is created. The trader does not authorize the trader order; rather, the trader order inherits the AUTH_TIME from the PM order.\nOne may see the situation of having the authorizeTime before the entryTime on the trader orders where the order is authorized before it was created.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "entryTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Entry Timestamp",
                    "readOnly": true
                },
                "factor": {
                    "description": "Factor of the security for the given factor date. For floating rate securities that do not pay down, the factor will always be set to 1.",
                    "type": "number",
                    "format": "double"
                },
                "factorDate": {
                    "description": "The effective date of the factor.",
                    "type": "string",
                    "format": "date"
                },
                "interest": {
                    "type": "number",
                    "format": "double",
                    "title": "Interest Value"
                },
                "modifier": {
                    "type": "string",
                    "title": "Modified by"
                },
                "modifyTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Modified time",
                    "readOnly": true
                },
                "principal": {
                    "type": "number",
                    "format": "double",
                    "title": "Principal"
                },
                "softDollarFlag": {
                    "type": "boolean",
                    "title": "Soft dollar - Designate order to soft dollar account?"
                },
                "version": {
                    "description": "Version number. Each time the order is updated, the version may or may not increment based on business rules, but the touch count will increment.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "marketYield": {
                    "type": "number",
                    "format": "double",
                    "title": "Yield (market convention)"
                },
                "ownerType": {
                    "title": "Owner type",
                    "$ref": "#/definitions/enumsOwnerType"
                },
                "averagePrice": {
                    "type": "number",
                    "format": "double",
                    "title": "Average price"
                },
                "assignToRule": {
                    "type": "string",
                    "title": "Assign to rule\n(-- api-linter: core::0140::prepositions=disabled\n aip.dev/not-precedent: Dashboard Column Name --)"
                },
                "raiser": {
                    "type": "string",
                    "title": "Created by"
                },
                "touchCount": {
                    "description": "This number will be incremented every time the order is touched.",
                    "type": "integer",
                    "format": "int32"
                },
                "urgency": {
                    "description": "Urgency of the order. Examples: \"1\", \"2\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "orderComments": {
                    "description": "Comments on the order.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1OrderComment"
                    }
                },
                "flags": {
                    "type": "array",
                    "title": "Order Flags. Please refer to BQL ord_flags. When updating an existing order with a non-empty list of flags, any existing order flags will be replaced by the new list of flags. To remove all flags from an order, set the list to an empty object: {}",
                    "items": {
                        "$ref": "#/definitions/v1OrderFlag"
                    }
                },
                "referenceAssetId": {
                    "type": "string",
                    "title": "Collateral security identifier"
                },
                "referenceHaircut": {
                    "type": "number",
                    "format": "double",
                    "title": "Repo haircut (percentage)"
                },
                "referencePrice": {
                    "type": "number",
                    "format": "double",
                    "title": "Collateral security price"
                },
                "financingType": {
                    "description": "An input-only field that is used to trigger a run of the Prime Broker Financing selection algo which selects the optimal PB(s) based on the jacket portfolio. Valid values are 'PHYSICAL' (non-cfd legal_structure) or 'SYNTHETIC' (cfd legal_structure) and are used to determine which sleeves to consider.",
                    "$ref": "#/definitions/enumsFinancingType"
                },
                "face": {
                    "type": "number",
                    "format": "double",
                    "title": "The total quantity of the order across all portfolio allocations"
                },
                "internalUniqueKey": {
                    "type": "integer",
                    "format": "int32",
                    "title": "An internal unique key used for mapping between Orders (e.g. in merge, split or order-rel workflows)",
                    "readOnly": true
                },
                "relationships": {
                    "type": "array",
                    "title": "Order Relationships (currently not supported)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Relationships is the preferred field name. --)",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readOnly": true
                },
                "fillAmount": {
                    "type": "number",
                    "format": "double",
                    "title": "Amount filled and booked for this order",
                    "readOnly": true
                },
                "splitSource": {
                    "type": "integer",
                    "format": "int32",
                    "title": "if a split order, split from order num",
                    "readOnly": true
                },
                "mergedDestination": {
                    "type": "integer",
                    "format": "int32",
                    "title": "if a merged order, merged into order num",
                    "readOnly": true
                }
            }
        },
        "v1OrderAssetReference": {
            "type": "object",
            "title": "Asset References",
            "properties": {
                "snpCusip": {
                    "type": "string",
                    "title": "CUSIP Identifier"
                },
                "cins": {
                    "type": "string",
                    "title": "CINS Identifier\n(-- api-linter: core::0144::message-field-plural=disabled aip.dev/not-precedent: The S in CINS stands for \"system\" so it's not actually plural --)"
                },
                "isin": {
                    "type": "string",
                    "title": "ISIN Identifier"
                },
                "sedol": {
                    "type": "string",
                    "title": "SEDOL Identifier"
                },
                "ric": {
                    "type": "string",
                    "title": "Reuters Instrument Code"
                },
                "localId": {
                    "type": "string",
                    "title": "Local ID (only the China local ID is currently supported)\n(-- api-linter: core::0124::required-reference=disabled aip.dev/not-precedent: Local ID is the Aladdin term used for a local security alias and is not a specific reference in another agraph domain --)"
                },
                "clientIdReference": {
                    "description": "Client ID reference. An input-only field that allows the asset reference to be resolved via an alternative identifier. Typically, this is used to refine the search results down to a single security if any of the other main identifiers in this reference are mapped to multiple securities (e.g. ISIN for an index futures).\nPlease refer to Aladdin Support for the available reference types to use.",
                    "$ref": "#/definitions/v1ClientIdReference"
                },
                "ccyPair": {
                    "type": "string",
                    "title": "Currency Pair. An input-only field for resolving FX securities with. Both formats are supported: \"USD/EUR\", \"USDEUR\".\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled aip.dev/not-precedent: The term ccy_pair is required as it denotes the string combining two ccy for resolving FX --)"
                }
            }
        },
        "v1OrderComment": {
            "type": "object",
            "title": "Order Comment",
            "properties": {
                "orderCommentKey": {
                    "description": "Comment name. Examples: \"General\", \"Instructions\". Contact Aladdin Support for full list of accepted values.",
                    "type": "string"
                },
                "orderCommentValue": {
                    "type": "string",
                    "title": "Comment value"
                }
            }
        },
        "v1OrderDetail": {
            "type": "object",
            "title": "Order detail",
            "properties": {
                "orderDetailId": {
                    "description": "Unique identifier for the portfolio allocation.",
                    "type": "integer",
                    "format": "int32"
                },
                "originalOrderDetailId": {
                    "description": "Original order detail ID record before mergers or splits.",
                    "type": "integer",
                    "format": "int32"
                },
                "originalOrderNumber": {
                    "description": "Original order ID before mergers or splits.",
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Version number. Each time the order detail is updated, the version may or may not increment based on business rules, but the touch count will increment.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Field name must be preserved. --)",
                    "readOnly": true
                },
                "portfolioReference": {
                    "title": "Fund",
                    "$ref": "#/definitions/portfolioPortfolioReference"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "title": "(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Field name must be preserved. --)\nQuantity"
                },
                "strategyId": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Strategy ID"
                },
                "strategyName": {
                    "type": "string",
                    "title": "Strategy Name"
                },
                "quantityBooked": {
                    "type": "number",
                    "format": "double",
                    "title": "Quantity Booked"
                },
                "modifier": {
                    "type": "string",
                    "title": "Modified by"
                },
                "modifyTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Modified Time",
                    "readOnly": true
                },
                "requestStatus": {
                    "title": "Assigned to status request status",
                    "$ref": "#/definitions/enumsAssignedToStatus"
                },
                "centralClearingParty": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Central Clearing Party"
                },
                "reservations": {
                    "type": "array",
                    "title": "Order Reservations",
                    "items": {
                        "$ref": "#/definitions/v1OrderReservation"
                    }
                },
                "referenceFace": {
                    "type": "number",
                    "format": "double",
                    "title": "Collateral security quantity"
                },
                "referenceFillAmount": {
                    "type": "number",
                    "format": "double",
                    "title": "Collateral security fill amount"
                },
                "externalPortfolioId": {
                    "description": "External identifier/account for the portfolio of this order detail. This may be used in place of the portfolioReference. Users must also specify the accountCode and externalEntityType in the postOrderConfig when used in order posting.",
                    "type": "string"
                },
                "clearingCounterpartyId": {
                    "type": "string",
                    "title": "External counterparty identifier",
                    "readOnly": true
                }
            }
        },
        "v1OrderFlag": {
            "description": "OrderFlag. Please refer to BQL ord_flags.",
            "type": "object",
            "properties": {
                "flagKey": {
                    "type": "string",
                    "title": "OrderFlag name - both the description and the value3 of the BQL mapping are accepted. Accepted Inputs: DELIVER_FREE, Deliver Free, HAIRCUT_ON_CASH, Haircut on cash, SHORT_SELL, Short Sell, UNWIND_VIA_NET_PAYMENT, Unwind via Net Payment, RIGHT_OF_SUB, Right of sub, RIGHT_OF_EXIT, Right of exit"
                },
                "flagValue": {
                    "type": "string",
                    "title": "OrderFlag value - Value1 of the BQL mapping. Accepted Inputs: FOP, HOC, SHO, UNP, ROS, ROE"
                }
            }
        },
        "v1OrderIdQuery": {
            "type": "object",
            "title": "Query to filter order identifiers on",
            "properties": {
                "portfolioGroupCriterion": {
                    "title": "Filter criterion for live orders by portfolio / portfolio group, and additionally by live order statuses and asset IDs",
                    "$ref": "#/definitions/v1PortfolioGroupCriterion"
                },
                "basketIdCriterion": {
                    "title": "Filter by Basket IDs criterion",
                    "$ref": "#/definitions/v1BasketIdCriterion"
                }
            }
        },
        "v1OrderIdsCriterion": {
            "type": "object",
            "title": "A criterion to filter by order numbers/IDs",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "description": "Aladdin unique order numbers. Maps to Order.id field. At least one order ID must be specified. Maximum allowed is 10,000.",
                    "type": "array",
                    "required": [
                        "ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1OrderQuery": {
            "type": "object",
            "title": "Query to filter orders on",
            "properties": {
                "retrieveOrderReservations": {
                    "type": "boolean",
                    "title": "This flag determines whether to pull order locate / FCM details. If set to true, locate / FCM details will be returned within the reservations node of the orderDetails section.\n(-- api-linter: core::0144::message-field-plural=disabled aip.dev/not-precedent: To indicate retrieval of multiple order reservations per order --)"
                },
                "orderIdCriterion": {
                    "title": "Filter by order IDs (order numbers) criterion",
                    "$ref": "#/definitions/v1OrderIdsCriterion"
                },
                "externalIdCriterion": {
                    "title": "Filter by external system identifier criterion",
                    "$ref": "#/definitions/v1ExternalIdCriterion"
                },
                "externalIdListCriterion": {
                    "title": "Filter by multiple external system identifiers criterion",
                    "$ref": "#/definitions/v1ExternalIdListCriterion"
                },
                "portfolioGroupCriterion": {
                    "title": "Filter criterion for live orders by portfolio / portfolio group, and additionally by live order statuses and asset IDs",
                    "$ref": "#/definitions/v1PortfolioGroupCriterion"
                },
                "basketIdCriterion": {
                    "title": "Filter by Basket IDs criterion",
                    "$ref": "#/definitions/v1BasketIdCriterion"
                },
                "portfolioModifiedTimeCriterion": {
                    "title": "Filter by portfolio and modified time\n(-- api-linter: core::0142::time-field-names=disabled aip.dev/not-precedent: Criterion uses a time range to query against the order's modified time --)",
                    "$ref": "#/definitions/v1PortfolioModifiedTimeCriterion"
                }
            }
        },
        "v1OrderReservation": {
            "type": "object",
            "title": "Order Reservation",
            "properties": {
                "orderReservationId": {
                    "title": "Id",
                    "$ref": "#/definitions/v1OrderReservationID"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "title": "Quantity"
                },
                "orderReservationStatus": {
                    "title": "Status",
                    "$ref": "#/definitions/enumsOrderReservationStatus"
                },
                "orderReservationType": {
                    "title": "Type",
                    "$ref": "#/definitions/enumsOrderReservationType"
                },
                "statusMessage": {
                    "type": "string",
                    "title": "Status message",
                    "readOnly": true
                },
                "approvalId": {
                    "type": "string",
                    "title": "Approval ID - externally assigned identifier for external OrderReservation Requests"
                },
                "requestor": {
                    "type": "string",
                    "title": "Requested By"
                },
                "requestedTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Requested time"
                },
                "modifier": {
                    "type": "string",
                    "title": "Modified by"
                },
                "modifyTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Modified time",
                    "readOnly": true
                },
                "expiryTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Expiry time"
                },
                "tradingFcm": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Trading Futures Clearing Merchant"
                },
                "revision": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Revision"
                },
                "orderReservationRate": {
                    "type": "number",
                    "format": "double",
                    "title": "Rate for the security's order reservation"
                }
            }
        },
        "v1OrderReservationID": {
            "type": "object",
            "title": "Order Reservation ID",
            "properties": {
                "orderDetailId": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Order Detail Id"
                },
                "source": {
                    "type": "integer",
                    "format": "int32",
                    "title": "Order Source"
                },
                "reservationDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Reservation Date"
                }
            }
        },
        "v1PortfolioAndOrderStatusFilterOption": {
            "description": "Option to filter order by specifying the portfolio and order status.",
            "type": "object",
            "required": [
                "portfolioIds"
            ],
            "properties": {
                "portfolioIds": {
                    "description": "The numerical ID associated with a portfolio. This can be retrieved using the Portfolios API.\nAt least one portfolio must be specified. The maximum allowed is 20.",
                    "type": "array",
                    "required": [
                        "portfolio_ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "orderStatuses": {
                    "description": "Specify a list of Aladdin order statuses to filter orders by.\nNote only live order statuses are currently supported: “Open”, “Compl Pending”, “Authorized”, and “Active”.\nIf no status is specified, all live orders will be included in the response. Both CDE and DECDE values are accepted as well.\nPlease reference the Aladdin Decode table ‘ORDER_STATUS’ for the list of all order statuses (live and completed) in Aladdin.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1PortfolioGroupCriterion": {
            "description": "A criterion to filter live orders by portfolio / portfolio groups, and optionally by order statuses and asset IDs\nPlease note that orders not in a live status or older than 365 days, will not be returned.",
            "type": "object",
            "required": [
                "portfolioGroupTicker"
            ],
            "properties": {
                "portfolioGroupTicker": {
                    "description": "The portfolio (fund) or portfolio group ticker to filter by. If a portfolio group is specified, the maximum number of expanded portfolios allowed is 5000. An error will be returned if this limit is exceeded.\nThis is a required field.",
                    "type": "string",
                    "required": [
                        "portfolio_group_ticker"
                    ]
                },
                "orderStatuses": {
                    "description": "Specify a list of Aladdin order statuses to filter orders by.\nNote only live order statuses are currently supported: \"Open\", \"Compl Pending\", \"Authorized\", and \"Active\".\nIf no status is specified, all live orders will be included in the response. Both CDE and DECDE values are accepted as well.\nPlease reference the Aladdin Decode table 'ORDER_STATUS' for the list of all order statuses (live and completed) in Aladdin.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assetIds": {
                    "description": "List of asset IDs to query orders for. If not specified, this query will search for all orders raised for any assets matching the portfolios and statuses in this criterion.\nEmpty strings or spaces are ignored.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "showTraderOrders": {
                    "type": "boolean",
                    "title": "True to show trader orders. Otherwise, PM orders are shown by default. Note that hybrid orders are always returned (i.e. without the owner type assignment).\n(-- api-linter: core::0144::message-field-plural=disabled aip.dev/not-precedent: Plural refers to the order query results but the boolean flag is singular. --)"
                }
            }
        },
        "v1PortfolioModifiedTimeCriterion": {
            "description": "A criterion used to filter orders by a portoflio and modified date range.",
            "type": "object",
            "required": [
                "portfolioId"
            ],
            "properties": {
                "portfolioId": {
                    "description": "The numerical ID associated with a portfolio. This can be retrieved using the Portfolios API.",
                    "type": "string",
                    "required": [
                        "portfolio_id"
                    ]
                },
                "modifiedTimeRange": {
                    "title": "A modified time range to filter by.\n(-- api-linter: core::0142::time-field-names=disabled aip.dev/not-precedent: Contains a start and end date/hour/minute to create a query range --)",
                    "$ref": "#/definitions/v1ModifiedTimeRange"
                },
                "showTraderOrders": {
                    "type": "boolean",
                    "title": "True to show trader orders. Otherwise, PM orders are shown by default. Note that hybrid orders are always returned (i.e. without the owner type assignment).\n(-- api-linter: core::0144::message-field-plural=disabled aip.dev/not-precedent: Plural refers to the order query results but the boolean flag is singular. --)"
                }
            }
        },
        "v1PostOrderConfig": {
            "type": "object",
            "title": "Post order config",
            "required": [
                "whatIf"
            ],
            "properties": {
                "whatIf": {
                    "type": "boolean",
                    "title": "True to post orders in a what-if mode",
                    "required": [
                        "what_if"
                    ]
                },
                "runCompliance": {
                    "description": "Default is true to run compliance on this post order request.",
                    "type": "boolean"
                },
                "accountCode": {
                    "description": "Aladdin's unique account code/ID for an organization or system (e.g. an external broker or counterparty). Also known as \"org_id\" to some legacy systems.\nUsed for linking to the external portfolio details.",
                    "type": "string",
                    "format": "int64"
                },
                "externalEntityType": {
                    "description": "External entity type like CUST - custodian, FUTR - futures agent. ADMN - administrator, etc., as per the EXTENT_TYPES decodes.\nUsed for linking to the external portfolio details.",
                    "type": "string"
                },
                "complianceTimeout": {
                    "description": "Timeout for running compliance, specified in seconds (example format: \"10s\"). The timer is set on the compliance run during order posting. If the non-zero time is reached and the run is not complete,\norders will be posted with the \"Compl Pending\" status set regardless of any violations that may have resulted if the run was successful. Default is infinite if not specified or if the value is 0s / negative.",
                    "type": "string"
                }
            }
        },
        "v1PostOrderRequest": {
            "description": "Request message to create and/or update a single Aladdin order.",
            "type": "object",
            "properties": {
                "postOrderConfig": {
                    "title": "Post order options",
                    "$ref": "#/definitions/v1PostOrderConfig"
                },
                "order": {
                    "title": "An order to create or update.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: Order is the preferred naming --)",
                    "$ref": "#/definitions/v1Order"
                }
            }
        },
        "v1PostOrderResponse": {
            "description": "Response message to posting an order.",
            "type": "object",
            "properties": {
                "complianceViolations": {
                    "description": "Compliance violations triggered by posting this order.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1Violation"
                    }
                },
                "order": {
                    "title": "The order that was created.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: Order is the preferred naming --)",
                    "$ref": "#/definitions/v1Order"
                }
            }
        },
        "v1PostOrderResult": {
            "type": "object",
            "title": "Result of posting an order as part of a batch operation.\n(-- api-linter: aladdin::9050::result-message-fields=disabled aip.dev/not-precedent: We need to do this because a PostOrderResponse is the expected output here --)",
            "properties": {
                "error": {
                    "description": "The error result of the operation in case of failure or cancellation.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "output": {
                    "description": "The normal response of the operation in case of success.",
                    "$ref": "#/definitions/v1PostOrderResponse"
                }
            }
        },
        "v1SinglePostOrderResponse": {
            "description": "Response to single post order request.",
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "title": "Order results\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because result is the prefered naming --)",
                    "items": {
                        "$ref": "#/definitions/v1PostOrderResult"
                    }
                }
            }
        },
        "v1TimeRangeParameter": {
            "description": "A date, hour, and minute used as a query parameter when filtering orders by modified time.  The timezone used will be the default aladdin timezone on the server.",
            "type": "object",
            "required": [
                "filterDate"
            ],
            "properties": {
                "filterDate": {
                    "description": "The date to filter by.",
                    "type": "string",
                    "format": "date",
                    "required": [
                        "filter_date"
                    ]
                },
                "hour": {
                    "description": "The hour to filter by, 0 - 23 inclusive.  When omitted, the default value is 0.",
                    "type": "integer",
                    "format": "int32"
                },
                "minute": {
                    "description": "The minute to filter by, 0 - 59 inclusive.  When omitted, the default value is 0.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "v1Violation": {
            "description": "Violation describes the intraday and overnight violation generated at time of the compliance breach...",
            "type": "object",
            "required": [
                "actionStatus"
            ],
            "properties": {
                "id": {
                    "description": "unique Violation Id.",
                    "type": "string"
                },
                "violationDate": {
                    "description": "The date when this violation occurred.",
                    "type": "string",
                    "format": "date"
                },
                "portfolioId": {
                    "description": "Aladdin unique numeric portfolio id, e.g. -1123.",
                    "type": "string"
                },
                "ruleAssignmentName": {
                    "description": "Name given to a mapping (assignment) between a compliance rule and a portfolio in Aladdin.",
                    "type": "string"
                },
                "ruleId": {
                    "description": "A unique name for a rule which is violated.",
                    "type": "string"
                },
                "complianceSeverity": {
                    "description": "The compliance severity of the violation.",
                    "$ref": "#/definitions/enumsComplianceSeverity"
                },
                "offender": {
                    "description": "The offender of the violation, e.g. the Issuer, Security, Country or Currency etcetera that is in violation of the rule.",
                    "type": "string"
                },
                "violationDetail": {
                    "description": "The detail of a violation. This will include any transactions or positions that are part of the violation.",
                    "type": "string"
                },
                "violationDisposition": {
                    "description": "The current  disposition of the violation. This will be populated for closed violations and include values such as Approved, Rejected, Manual etc.",
                    "type": "string"
                },
                "violationOwner": {
                    "description": "The current team or group who owns the next step in resolving this violation.",
                    "type": "string"
                },
                "actionStatus": {
                    "description": "The current action status of the violation. This will be populated with values such as Closed, Action Required, Action Taken.",
                    "type": "string",
                    "required": [
                        "action_status"
                    ]
                },
                "resolutionComment": {
                    "description": "The current resolution comment for the violation which has been populated by a user.",
                    "type": "string"
                },
                "violationContributions": {
                    "description": "One or more allocations which contributed to the violation. Each violation is caused by one or more underlying positions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1ViolationContribution"
                    }
                },
                "creationTime": {
                    "description": "This records the latest timestamp when the item is entered or updated.",
                    "type": "string",
                    "format": "date-time"
                },
                "modifier": {
                    "description": "The user who last modified the violation.",
                    "type": "string"
                },
                "lastModifiedTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "The last time when violations was updated.\n(-- api-linter: core::0142::time-field-names=disabled\n aip.dev/not-precedent: We need to do this because this is the correct field name --)"
                },
                "violationDescription": {
                    "description": "The description of the violation.",
                    "type": "string"
                }
            }
        },
        "v1ViolationContribution": {
            "description": "Violation Contribution describes one or more allocations which contributed to the violation. Each violation is caused by one or more underlying positions.",
            "type": "object",
            "properties": {
                "assetId": {
                    "description": "Aladdin Security Identifier.",
                    "type": "string"
                },
                "transactionDate": {
                    "description": "The date on which the transaction took place.",
                    "type": "string",
                    "format": "date"
                },
                "allocationQuantity": {
                    "description": "Size of the allocation, dependent on the asset class of the security. e.g. in the case of equities, this will be the number of shares. Sign indicates the direction of the transaction.",
                    "type": "number",
                    "format": "double"
                },
                "portfolioId": {
                    "description": "Aladdin unique numeric portfolio id, e.g. -1123.",
                    "type": "string"
                },
                "compliancePositionSource": {
                    "description": "The source of the position like ORD for orders and TRD for trades.",
                    "$ref": "#/definitions/enumsCompliancePositionSource"
                },
                "allocationId": {
                    "description": "The id of the allocation.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "offline_access": "This keeps you signed in to the app, even when you are not using it.",
                "trading.order_management.order.v1.Order:read": "non-sensitive read",
                "trading.order_management.order.v1.Order:write": "non-sensitive write"
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "offline_access": "This keeps you signed in to the app, even when you are not using it.",
                "trading.order_management.order.v1.Order:read": "non-sensitive read",
                "trading.order_management.order.v1.Order:write": "non-sensitive write"
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "offline_access",
                "trading.order_management.order.v1.Order:read",
                "trading.order_management.order.v1.Order:write"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "offline_access",
                "trading.order_management.order.v1.Order:read",
                "trading.order_management.order.v1.Order:write"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}