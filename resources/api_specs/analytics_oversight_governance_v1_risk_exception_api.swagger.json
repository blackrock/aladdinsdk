{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Retrieve, update, or create Exceptions as surfaced in Risk Radar.",
        "title": "Risk Governance - Exceptions",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.analytics.oversight.governance.RiskExceptionAPI",
        "x-aladdin-api-stability": "stable",
        "x-aladdin-spec-id": "agraph.analytics.oversight.governance.v1.RiskExceptionAPI"
    },
    "basePath": "/api/analytics/oversight/governance/v1/",
    "paths": {
        "/exceptions": {
            "get": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Retrieve exceptions matching the parameters provided.",
                "summary": "Lists the latest state of ongoing exceptions",
                "operationId": "RiskExceptionAPI_ListRiskExceptions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "When provided, retrieves exceptions as they appeared at the specified point in time, expressed in UTC.  \nIf absent, the current UTC server time will be used instead and exceptions will be returned on an as-is rather than as-was basis.",
                        "name": "reportTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "When provided, retrieves historical exception records with business validity after the specified date (exclusive). \nThis parameter is used in conjunction with the endRangeDate parameter, typically to retrieve a time series of exception records.  \nThis time series is uses as-is data - combining date range parameters with the reportTime parameter is not supported.",
                        "name": "beginRangeDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "When provided, retrieves historical exception records with business validity up to and including the specified date (inclusive).\nThis parameter is used in conjunction with the beginRangeDate parameter, typically to retrieve a time series of exception records.\nThis time series is uses as-is data - combining date range parameters with the reportTime parameter is not supported.",
                        "name": "endRangeDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A field mask to restrict which fields on the exception are returned. \nBy default, all fields of the exception are returned. \nField names should be specified in camelCase. \nIn addition to the fields specified, the response will contain scopeId, scopeType, entityId, entityType and ruleId.",
                        "name": "readMask",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The offset value used to set the starting point into the result set found at the repository.",
                        "name": "pageToken",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of entries to be returned as a response. The service may return fewer\nthan this value. The maximum value is 1000. If unspecified, at most 1000 entries will be returned.",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Used to provide with https://google.aip.dev/160 filtering capabilities.",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Used to provide with ordering to the returned entries. The supported syntax (for now):\n[target field]:asc or [target field]:desc.",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Used to provide with facet search capabilities by simply specifiying the fields to be used as base\nand by consequence, returned with an array for each of the specified fields and it's terms and matches for each of the entries.",
                        "name": "facetFields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1ListRiskExceptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 300
            }
        },
        "/exceptions/longrunningoperations/{id}": {
            "get": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Get the latest state of a long-running operation for exception bulk request",
                "summary": "Get latest state of a long-running operation",
                "operationId": "RiskExceptionAPI_GetLongrunningOperation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id of the LongrunningOperation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1LongrunningOperation"
                        },
                        "x-aladdin-lro": {
                            "meta-data-type": {
                                "$ref": "#/definitions/v1BatchCreateRiskExceptionsMetaData"
                            },
                            "response-type": {
                                "$ref": "#/definitions/v1BatchCreateRiskExceptionsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 300
            }
        },
        "/exceptions/{asOfDate}": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create, update, or close an exception based on the aggregate Evaluation State of the Exception provided.",
                "summary": "Create, update or close an Exception",
                "operationId": "RiskExceptionAPI_CreateRiskException",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The effective date for the exception record being submitted. The expected format is yyyy-MM-dd\n(-- api-linter: core::0133::request-unknown-fields=disabled aip.dev/not-precedent: We need to do this because this information defines the point in time where the risk was identified --)\n(-- api-linter: core::0142::time-field-type=disabled aip.dev/not-precedent: We need to do this because making it a google.type.Date build breaks the build  --)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: We need to do this because using google.type.Date as a path parameter breaks the build  --)",
                        "name": "asOfDate",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The risk exception record being submitted to create or update an existing exception.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1RiskException"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1RiskException"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 300
            }
        },
        "/exceptions:batchCreate": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:write"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Create, update, or close exceptions in bulk.",
                "summary": "Bulk create, update or close Exceptions",
                "operationId": "RiskExceptionAPI_BatchCreateRiskExceptions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1BatchCreateRiskExceptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1LongrunningOperation"
                        },
                        "x-aladdin-lro": {
                            "meta-data-type": {
                                "$ref": "#/definitions/v1BatchCreateRiskExceptionsMetaData"
                            },
                            "response-type": {
                                "$ref": "#/definitions/v1BatchCreateRiskExceptionsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "WRITE",
                "x-quota-limit": 300
            }
        },
        "/exceptions:filter": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Retrieves the results of risk exceptions based on the provided query.\n(-- api-linter: aladdin::9016::query-custom-method-http=disabled\n    aip.dev/not-precedent: We need to keep the name consistent with existing exceptions endpoint. --)",
                "summary": "Retrives risk exceptions",
                "operationId": "RiskExceptionAPI_FilterRiskExceptions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1FilterRiskExceptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1FilterRiskExceptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 300
            }
        },
        "/exceptions:retrieveRiskExceptionsById": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.oversight.governance.v1.RiskException:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Retrieve a large number of Exceptions in bulk by specifically filtering on the Exception's natural unique identifier. This operation is designed to complement the more flexible filtering capabilities supported by the list operation.\n(-- api-linter: aladdin::9016::query-custom-method-http=disabled\n    aip.dev/not-precedent: We need to do this because it is an existing api, changing existing URI to suggested URI will break all citizen developers code. --)",
                "summary": "Bulk retrieve Exceptions by Id",
                "operationId": "RiskExceptionAPI_RetrieveRiskExceptionsById",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1RetrieveRiskExceptionsByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1RetrieveRiskExceptionsByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 300
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "rpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "type": "object",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "v1BatchCreateRiskExceptionsMetaData": {
            "type": "object",
            "title": "Metadata for longrunning operation on create risk exceptions\nCurrently it is not possible to determine progress, but it may be possible in the future"
        },
        "v1BatchCreateRiskExceptionsRequest": {
            "type": "object",
            "title": "Bulk Create exceptions API payload",
            "required": [
                "requests"
            ],
            "properties": {
                "requests": {
                    "description": "Risk exceptions record being submitted to create or update an existing exception.",
                    "type": "array",
                    "required": [
                        "requests"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1CreateRiskExceptionRequest"
                    }
                }
            }
        },
        "v1BatchCreateRiskExceptionsResponse": {
            "type": "object",
            "title": "Bulk Create exceptions results",
            "properties": {
                "results": {
                    "type": "array",
                    "title": "Bulk Create exception results",
                    "items": {
                        "$ref": "#/definitions/v1CreateRiskExceptionResult"
                    }
                }
            }
        },
        "v1ConditionDetail": {
            "type": "object",
            "title": "The relevant information/definitions to be used in conjunction with\ncondition definitions ans results",
            "required": [
                "name",
                "metric",
                "containsBreakdown"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "title": "The name of the condition",
                    "required": [
                        "name"
                    ]
                },
                "metric": {
                    "type": "string",
                    "title": "The metric name",
                    "required": [
                        "metric"
                    ]
                },
                "metricUnit": {
                    "title": "The metric unit to be used when evaluating the condition",
                    "$ref": "#/definitions/v1MetricUnit"
                },
                "breakdownName": {
                    "type": "string",
                    "title": "The breakdown name"
                },
                "breakdownType": {
                    "type": "string",
                    "title": "The type of breakdown applied with this condition, specified by the evaluator"
                },
                "containsBreakdown": {
                    "type": "boolean",
                    "title": "Indicates whether the condition contains a breakdown",
                    "required": [
                        "contains_breakdown"
                    ]
                },
                "ruleOverrideId": {
                    "description": "Unique identifier of the RiskRuleOverride applied to this condition.\nIf present, it indicates some properties of the condition have been set from a RiskRuleOverride that is in effect.",
                    "type": "string"
                },
                "ruleOverrideVersion": {
                    "type": "string",
                    "title": "The rule_override_version identifier for this particular revision of the rule override"
                },
                "metricSource": {
                    "title": "Metric source to be used for evaluation",
                    "$ref": "#/definitions/v1MetricSource"
                }
            }
        },
        "v1ConditionResult": {
            "type": "object",
            "title": "The condition definition for sector results related evaluations",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Unique identifier, which should map to the corresponding Rule condition id if applicable"
                },
                "conditionDetail": {
                    "title": "The additional information about the condition",
                    "$ref": "#/definitions/v1ConditionDetail"
                },
                "sectorResults": {
                    "type": "array",
                    "title": "The sector results resulting from the evaluation of the condition",
                    "items": {
                        "$ref": "#/definitions/v1SectorResult"
                    }
                },
                "evaluationState": {
                    "title": "The overall evaluation state resulting from the evaluation of the condition",
                    "$ref": "#/definitions/v1EvaluationState"
                }
            }
        },
        "v1CreateRiskExceptionRequest": {
            "type": "object",
            "title": "Submit exception API payload",
            "required": [
                "asOfDate"
            ],
            "properties": {
                "asOfDate": {
                    "type": "string",
                    "title": "The effective date for the exception record being submitted. The expected format is yyyy-MM-dd\n(-- api-linter: core::0133::request-unknown-fields=disabled aip.dev/not-precedent: We need to do this because this information defines the point in time where the risk was identified --)\n(-- api-linter: core::0142::time-field-type=disabled aip.dev/not-precedent: We need to do this because making it a google.type.Date build breaks the build  --)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled aip.dev/not-precedent: We need to do this because using google.type.Date as a path parameter breaks the build  --)",
                    "required": [
                        "as_of_date"
                    ]
                },
                "riskException": {
                    "description": "The risk exception record being submitted to create or update an existing exception.",
                    "$ref": "#/definitions/v1RiskException"
                }
            }
        },
        "v1CreateRiskExceptionResult": {
            "type": "object",
            "title": "Risk Exception create result",
            "properties": {
                "error": {
                    "description": "The error result of the operation in case of failure or cancellation.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "output": {
                    "description": "The normal response of the operation in case of success.",
                    "$ref": "#/definitions/v1RiskException"
                }
            }
        },
        "v1EvaluationState": {
            "description": "- EVALUATION_STATE_UNSPECIFIED: No definition present (not a valid input value)\n - EVALUATION_STATE_BREACH: High severity state signalling that the evaluation has identified a BREACH\n - EVALUATION_STATE_WARNING: Lower severity state signalling that the valuation has identified a WARNING\n - EVALUATION_STATE_OK: OK state signalling that a prior exception is no longer an exception and is to\nbe closed out by the system",
            "type": "string",
            "title": "The possible outcomes from an evaluation",
            "default": "EVALUATION_STATE_UNSPECIFIED",
            "enum": [
                "EVALUATION_STATE_UNSPECIFIED",
                "EVALUATION_STATE_BREACH",
                "EVALUATION_STATE_WARNING",
                "EVALUATION_STATE_OK"
            ]
        },
        "v1FilterRiskExceptionsRequest": {
            "type": "object",
            "title": "Query message for the exceptions query endpoint",
            "properties": {
                "query": {
                    "description": "The query used to filter against RiskExceptions, such as filter, report_type, begin_range_date, end_range_date etc.",
                    "$ref": "#/definitions/v1RiskExceptionsQuery"
                },
                "pageToken": {
                    "description": "A page token, received from a previous `FilterRiskExceptions` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `FilterRiskExceptions` must match\nthe call that provided the page token.",
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of entries to be returned as a response. The service may return fewer\nthan this value. The maximum value is 1000. If unspecified, at most 1000 entries will be returned"
                }
            }
        },
        "v1FilterRiskExceptionsResponse": {
            "type": "object",
            "title": "Query response to retrieve exceptions",
            "properties": {
                "riskExceptions": {
                    "type": "array",
                    "title": "The payload to be returned to the client, in this case",
                    "items": {
                        "$ref": "#/definitions/v1RiskException"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of entries matching the specified criterias at the repository"
                },
                "nextPageToken": {
                    "description": "A token that can be sent as `pageToken` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                }
            }
        },
        "v1Limit": {
            "type": "object",
            "title": "Defines the numerical thresholds associated with a Condition of a Rule",
            "properties": {
                "limitType": {
                    "title": "Indicates how the numerical limits are being represented.\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because lint error is for resource defined in other domain --)",
                    "$ref": "#/definitions/v1LimitType"
                },
                "target": {
                    "type": "number",
                    "format": "double",
                    "title": "The target value for the metric bound to this limit.\nThis is optional if the limit type is Absolute, but required if it is Relative.\n(-- api-linter: core::0203::optional=disabled\n aip.dev/not-precedent: We need to do this because the required/optional behaviour is\n conditional on the limit_type property, which cannot be enforced at the schema-level --)\n(-- api-linter: core::0203::required=disabled\n aip.dev/not-precedent: We need to do this because the required/optional behaviour is\n conditional on the limit_type property, which cannot be enforced at the schema-level --)"
                },
                "thresholds": {
                    "description": "Specifies the individual thresholds captured for this limit and their numerical values. \nThe permitted keys are 'upperBreach', 'upperWarning', 'lowerWarning', 'lowerBreach'. \nA limit has at least one entry specified.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                }
            }
        },
        "v1LimitType": {
            "description": "- LIMIT_TYPE_UNSPECIFIED: No definition present\n - LIMIT_TYPE_ABSOLUTE: An absolute threshold level, e.g. 250 bps tracking error\n - LIMIT_TYPE_RELATIVE: A relative threshold level, e.g. 1.2 which is then multiplied with the target value",
            "type": "string",
            "title": "The limit type indicating whether thresholds are specified in absolute terms\nor relative to the target value",
            "default": "LIMIT_TYPE_UNSPECIFIED",
            "enum": [
                "LIMIT_TYPE_UNSPECIFIED",
                "LIMIT_TYPE_ABSOLUTE",
                "LIMIT_TYPE_RELATIVE"
            ]
        },
        "v1ListRiskExceptionsResponse": {
            "type": "object",
            "title": "Response for the List Exceptions requests",
            "properties": {
                "navigation": {
                    "title": "Links used to navigate through the available entries matching the specified criteria found at the repository",
                    "$ref": "#/definitions/v1RiskNavigationLinks"
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of entries returned with the current response"
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of records matching the specified criterias at the repository\nDeprecated - use total_size instead"
                },
                "nextPageToken": {
                    "description": "A token that can be sent as `pageToken` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                },
                "searchFacets": {
                    "type": "object",
                    "title": "A map of all the facet result terms",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1RiskFacetSearchList"
                    }
                },
                "exceptions": {
                    "type": "array",
                    "title": "The payload to be returned to the client, in this case",
                    "items": {
                        "$ref": "#/definitions/v1RiskException"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of entries matching the specified criterias at the repository"
                }
            }
        },
        "v1LongrunningOperation": {
            "description": "LongrunningOperation represents a long-running operation that is the result\nof a network API call.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The server-assigned id, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`id` should have the format of `operations/some/unique/id`.",
                    "type": "string"
                },
                "meta": {
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "$ref": "#/definitions/Any"
                },
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "description": "The error result of the operation in case of failure or cancellation.",
                    "$ref": "#/definitions/rpcStatus"
                },
                "response": {
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "$ref": "#/definitions/Any"
                }
            }
        },
        "v1MetricSource": {
            "description": "- METRIC_SOURCE_UNSPECIFIED: No definition present\n - METRIC_SOURCE_ALADDIN_ANALYTICS: Evaluator will use Aladdin Analytics as metric source\n - METRIC_SOURCE_CUSTOM: Evaluator will use CUSTOM DATA as metric source",
            "type": "string",
            "title": "Allowed metric sources",
            "default": "METRIC_SOURCE_UNSPECIFIED",
            "enum": [
                "METRIC_SOURCE_UNSPECIFIED",
                "METRIC_SOURCE_ALADDIN_ANALYTICS",
                "METRIC_SOURCE_CUSTOM"
            ]
        },
        "v1MetricUnit": {
            "description": "- METRIC_UNIT_UNSPECIFIED: No definition present\n - METRIC_UNIT_BPS: Basis Points\n - METRIC_UNIT_PCT: Percent\n - METRIC_UNIT_NONE: Comment placeholder",
            "type": "string",
            "title": "The units in which the metric and its thresholds are specified",
            "default": "METRIC_UNIT_UNSPECIFIED",
            "enum": [
                "METRIC_UNIT_UNSPECIFIED",
                "METRIC_UNIT_BPS",
                "METRIC_UNIT_PCT",
                "METRIC_UNIT_NONE"
            ]
        },
        "v1RetrieveRiskExceptionsByIdRequest": {
            "type": "object",
            "title": "The request message for RiskExceptionAPI.RetrieveRiskExceptionsById",
            "required": [
                "exceptionIds"
            ],
            "properties": {
                "exceptionIds": {
                    "type": "array",
                    "title": "A list of exception ids",
                    "required": [
                        "exception_ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1RetrieveRiskExceptionsByIdResponse": {
            "type": "object",
            "title": "The response message for RiskExceptionAPI.RetrieveRiskExceptionsById",
            "properties": {
                "exceptions": {
                    "type": "array",
                    "title": "List of RiskExceptions matching the specified exception ids",
                    "items": {
                        "$ref": "#/definitions/v1RiskException"
                    }
                }
            }
        },
        "v1RiskException": {
            "description": "Representation of Risk Exception, its available fields and the flexible one \"exceptionDetail\" to store more specific details.",
            "type": "object",
            "required": [
                "externalId",
                "scopeId",
                "scopeType",
                "entityId",
                "entityType",
                "ruleId",
                "ruleVersion"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Unique identifier"
                },
                "externalId": {
                    "type": "string",
                    "title": "The unique user-specified identifier for the exception (not used by the system)",
                    "required": [
                        "external_id"
                    ]
                },
                "validBeginDate": {
                    "type": "string",
                    "format": "date",
                    "title": "The date on which the exception record is valid. Dictated by the date of the \nunderlying positions used to calculate the exception. In most instances, \nthe beginning date of the exceptions may precede the creation date (e.g. T-1 or T-2)"
                },
                "validEndDate": {
                    "type": "string",
                    "format": "date",
                    "title": "The date at which the exception record stops being valid, e.g. it is superseded by a new \nrecord on the following day or because it has been closed out"
                },
                "entryTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "The timestamp when the record entered the system"
                },
                "expiryTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "The INTERNAL timestamp when the record expires"
                },
                "createTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "The timestamp when the first time-series risk entry was first created"
                },
                "modifier": {
                    "type": "string",
                    "title": "Identifies the modifier of the exception"
                },
                "workflowId": {
                    "type": "string",
                    "title": "The workflow Id which the exception is associated with"
                },
                "scopeId": {
                    "type": "string",
                    "title": "The unique identifier of the scope of the exception. E.g. for a portfolio, this should be the portoflio code",
                    "required": [
                        "scope_id"
                    ]
                },
                "scopeType": {
                    "type": "string",
                    "title": "The scope of the exception e.g. one of 'GLOBAL', 'PORTFOLIO_GROUP', 'PORTFOLIO', 'OTHER'",
                    "required": [
                        "scope_type"
                    ]
                },
                "scope": {
                    "type": "string",
                    "title": "The name of the scope, e.g. the porfolio name"
                },
                "entityId": {
                    "type": "string",
                    "title": "The unique identifier of the entity the exception refers to. E.g. for an issuer, this should be the issuer code",
                    "required": [
                        "entity_id"
                    ]
                },
                "entityType": {
                    "type": "string",
                    "title": "Used to determine the type of entity the exception refers to, e.g. one of \n'PORTFOLIO_GROUP', 'PORTFOLIO', 'SECTOR', 'FACTOR', 'ISSUER', 'SECURITY', 'OTHER'",
                    "required": [
                        "entity_type"
                    ]
                },
                "entity": {
                    "type": "string",
                    "title": "The name of the entity that the exception is concerned with"
                },
                "evaluationState": {
                    "title": "The status set by the evaluation process. Currently supported: BREACH, WARNING and OK",
                    "$ref": "#/definitions/v1EvaluationState"
                },
                "rulePriority": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The priority as provided by the rule that generated the exception and used as a common way to rank exceptions across rules"
                },
                "ruleId": {
                    "type": "string",
                    "title": "The ID of the Rule that the exception is based on",
                    "required": [
                        "rule_id"
                    ]
                },
                "ruleVersion": {
                    "type": "string",
                    "title": "The ID of the specific version of the Rule that the exception is based on",
                    "required": [
                        "rule_version"
                    ]
                },
                "exceptionTier": {
                    "type": "string",
                    "title": "Visibility tier/level of the exception e.g. Prime/Prod, Beta, Testing, Local, Team etc"
                },
                "evaluationResults": {
                    "type": "array",
                    "title": "The results from evaluating the Rule Conditions the exception is based on",
                    "items": {
                        "$ref": "#/definitions/v1ConditionResult"
                    }
                },
                "exceptionDetails": {
                    "type": "object",
                    "title": "Any additional details that custom exception producers may store alongside the exception to provide additional context",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1RiskExceptionsQuery": {
            "description": "The query required to perform a FilterRiskExceptions call.",
            "type": "object",
            "properties": {
                "reportTime": {
                    "description": "When provided, retrieves exceptions as they appeared at the specified point in time, expressed in UTC.\nIf absent, the current UTC server time will be used instead and exceptions will be returned on an as-is rather than as-was basis.",
                    "type": "string",
                    "format": "date-time"
                },
                "beginRangeDate": {
                    "description": "When provided, retrieves historical exception records with business validity after the specified date (exclusive). \nThis parameter is used in conjunction with the endRangeDate parameter, typically to retrieve a time series of exception records.  \nThis time series is uses as-is data - combining date range parameters with the reportTime parameter is not supported.",
                    "type": "string",
                    "format": "date"
                },
                "endRangeDate": {
                    "description": "When provided, retrieves historical exception records with business validity up to and including the specified date (inclusive).\nThis parameter is used in conjunction with the beginRangeDate parameter, typically to retrieve a time series of exception records.\nThis time series is uses as-is data - combining date range parameters with the reportTime parameter is not supported.",
                    "type": "string",
                    "format": "date"
                },
                "readMask": {
                    "description": "A field mask to restrict which fields on the exception are returned. \nBy default, all fields of the exception are returned. \nField names should be specified in camelCase. \nIn addition to the fields specified, the response will contain scopeId, scopeType, entityId, entityType and ruleId.",
                    "type": "string"
                },
                "filter": {
                    "type": "string",
                    "title": "Used to provide with https://google.aip.dev/160 filtering capabilities"
                },
                "orderBy": {
                    "type": "string",
                    "title": "Used to provide with ordering to the returned entries. The supported syntax (for now):\n[target field]:asc or [target field]:desc"
                }
            }
        },
        "v1RiskFacetSearchEntry": {
            "type": "object",
            "title": "Description of a facet search entry",
            "properties": {
                "term": {
                    "type": "string",
                    "title": "The term representing a facet unit"
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "title": "The number of entries matching the term"
                }
            }
        },
        "v1RiskFacetSearchList": {
            "type": "object",
            "title": "The values of a facet search listing",
            "properties": {
                "facets": {
                    "type": "array",
                    "title": "The facet search results used mainly by the UI",
                    "items": {
                        "$ref": "#/definitions/v1RiskFacetSearchEntry"
                    }
                }
            }
        },
        "v1RiskNavigationLinks": {
            "description": "Class to carry the links to be used when navigating across the data matched by a given criteria.",
            "type": "object",
            "properties": {
                "self": {
                    "type": "string",
                    "title": "Link to the current set of data"
                },
                "first": {
                    "type": "string",
                    "title": "Link to the first chunk of data matching the given criteria"
                },
                "previous": {
                    "type": "string",
                    "title": "Link to the previuos chunk of data matching the given criteria"
                },
                "next": {
                    "type": "string",
                    "title": "Link to the next chunk of data matching the given criteria"
                },
                "last": {
                    "type": "string",
                    "title": "Latest chunk of chunk of data matching the given criteria"
                }
            }
        },
        "v1SectorResult": {
            "type": "object",
            "title": "It represents the evaluation results\nfor specific category values for the selected breakdown",
            "properties": {
                "sector": {
                    "type": "string",
                    "title": "The name of the sector"
                },
                "lastThresholdCrossed": {
                    "title": "The most severe predefined threshold crossed when performing an evaluation",
                    "$ref": "#/definitions/v1Threshold"
                },
                "evaluationState": {
                    "title": "The evaluated state of the sector result indicating the exception severity (or OK)",
                    "$ref": "#/definitions/v1EvaluationState"
                },
                "actualValue": {
                    "type": "number",
                    "format": "double",
                    "title": "The actual value of the underlying metric being validated against the Rule Condition limits"
                },
                "limit": {
                    "title": "The numerical thresholds associated with the corresponding Rule Condition",
                    "$ref": "#/definitions/v1Limit"
                }
            }
        },
        "v1Threshold": {
            "description": "- THRESHOLD_UNSPECIFIED: No definition present\n - THRESHOLD_UPPER_BREACH: An evaluation has identified a scenario which the values are beyond any pre-defined limit\n - THRESHOLD_LOWER_BREACH: An evaluation has identified a scenario which the values are somewhere\nin betewen OK and UPPER_BREACH\n - THRESHOLD_UPPER_WARNING: An evaluation has identified a scenario where the values are close \nbut not yet to be considered a breach\n - THRESHOLD_LOWER_WARNING: An evaluation has identified a scenario where the values are on\nthe way to be considered a breach",
            "type": "string",
            "title": "The available threshold levels to be used in order to better identify\nthe most severe problems",
            "default": "THRESHOLD_UNSPECIFIED",
            "enum": [
                "THRESHOLD_UNSPECIFIED",
                "THRESHOLD_UPPER_BREACH",
                "THRESHOLD_LOWER_BREACH",
                "THRESHOLD_UPPER_WARNING",
                "THRESHOLD_LOWER_WARNING"
            ]
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "analytics.oversight.governance.v1.RiskException:read": "non-sensitive read",
                "analytics.oversight.governance.v1.RiskException:write": "non-sensitive write",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "analytics.oversight.governance.v1.RiskException:read": "non-sensitive read",
                "analytics.oversight.governance.v1.RiskException:write": "non-sensitive write",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "analytics.oversight.governance.v1.RiskException:read",
                "analytics.oversight.governance.v1.RiskException:write",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "analytics.oversight.governance.v1.RiskException:read",
                "analytics.oversight.governance.v1.RiskException:write",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}