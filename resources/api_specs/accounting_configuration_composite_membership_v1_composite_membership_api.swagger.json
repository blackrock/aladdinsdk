{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This service briefs about composite membership.",
        "title": "Composite Membership",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.accounting.configuration.composite_membership.CompositeMembershipAPI",
        "x-aladdin-api-stability": "alpha",
        "x-aladdin-spec-id": "agraph.accounting.configuration.composite_membership.v1.CompositeMembershipAPI"
    },
    "basePath": "/api/accounting/configuration/composite-membership/v1/",
    "paths": {
        "/portfolios/{parent}/compositeMemberships": {
            "get": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "accounting.configuration.composite_membership.v1.CompositeMembership:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "accounting.configuration.composite_membership.v1.CompositeMembership:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "Gets membership for a given composite",
                "summary": "Gets membership",
                "operationId": "CompositeMembershipAPI_ListCompositeMemberships",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "composite ticker",
                        "name": "parent",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum number of composite memberships to return.\nThe maximum value : 1000\nthe default value : 100.",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A page token, received from a previous 'ListCompositeMemberships' call.",
                        "name": "pageToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1ListCompositeMembershipsResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 1000
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "rpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "type": "object",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "v1CompositeMembership": {
            "type": "object",
            "title": "Composite membership describes relationship of portfolios with composite",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "describes the comp_funds_id"
                },
                "compositeName": {
                    "type": "string",
                    "title": "describes the composite ticker"
                },
                "portfolioId": {
                    "type": "string",
                    "title": "describes the portfolio_id of portfolio"
                },
                "entryDate": {
                    "type": "string",
                    "format": "date",
                    "title": "describes the entry_date of portfolio entered in composite"
                },
                "exitDate": {
                    "type": "string",
                    "format": "date",
                    "title": "describes the exit_date of portfolio exited from composite"
                },
                "entryReason": {
                    "type": "string",
                    "title": "describes the entry_reason for portfolio to enter in composite"
                },
                "exitReason": {
                    "type": "string",
                    "title": "describes the exit_reason for portfolio to exit from composite"
                },
                "latestComment": {
                    "type": "string",
                    "title": "describes the comments"
                },
                "author": {
                    "type": "string",
                    "title": "describes the  modified_by"
                },
                "modifyTime": {
                    "type": "string",
                    "format": "date-time",
                    "title": "describes the modify_time"
                },
                "oldLatestComment": {
                    "type": "string",
                    "title": "describes the old comments"
                },
                "oldEntryDate": {
                    "type": "string",
                    "format": "date",
                    "title": "describes the old entry_date of portfolio entered in composite"
                },
                "oldExitDate": {
                    "type": "string",
                    "format": "date",
                    "title": "describes the old exit_date of portfolio entered in composite"
                },
                "oldEntryReason": {
                    "type": "string",
                    "title": "describes the old entry_reason for portfolio to enter in composite"
                },
                "oldExitReason": {
                    "type": "string",
                    "title": "describes the old exit_reason for portfolio to enter in composite"
                }
            }
        },
        "v1ListCompositeMembershipsResponse": {
            "description": "The response message for CompositeMembershipAPI.ListCompositeMemberships.",
            "type": "object",
            "title": "ListCompositeMemberships",
            "properties": {
                "compositeMemberships": {
                    "description": "Composite memberships to be returned.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1CompositeMembership"
                    }
                },
                "nextPageToken": {
                    "description": "A token, which can be sent as 'page_token' to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "accounting.configuration.composite_membership.v1.CompositeMembership:read": "non-sensitive read",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "accounting.configuration.composite_membership.v1.CompositeMembership:read": "non-sensitive read",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "accounting.configuration.composite_membership.v1.CompositeMembership:read",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "accounting.configuration.composite_membership.v1.CompositeMembership:read",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}