{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "The Aladdin Climate Data API exposes physical, transition, and temperature alignment analytics as of a given date. Users can retrieve data for selected entity types by specifying the desired datapoints for each climate risk type and scenario. The Aladdin Climate Meta Data API outlines the datapoints available across physical, transition, and temperature alignment analytics.",
        "title": "Climate",
        "version": "1.0.0",
        "x-aladdin-api-id": "agraph.analytics.data.climate.ClimateAPI",
        "x-aladdin-api-stability": "stable",
        "x-aladdin-spec-id": "agraph.analytics.data.climate.v1.ClimateAPI"
    },
    "basePath": "/api/analytics/data/climate/v1/",
    "paths": {
        "/data:retrieve": {
            "post": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.data.climate.v1.Climate:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.data.climate.v1.Climate:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "The Aladdin Climate Data API exposes physical, transition, and temperature alignment analytics as of a given date. Users can retrieve data for selected entity types by specifying the desired datapoints for each climate risk type and scenario.\n(-- api-linter: core::0132::response-message-name=disabled\n aip.dev/not-precedent: We need to do this because this response is common across AsOfDate \u0026 TimeSeries endpoints --)\n(-- api-linter: core::0136::prepositions=disabled\n aip.dev/not-precedent: We need to do this because gives more idea about the API and differentiates from the other API --)\n(-- api-linter: aladdin::9016::rpc-name=disabled\naip.dev/not-precedent: We need to do this because there are multiple criteria by which the data is pulled --)\n(-- api-linter: aladdin::9016::query-custom-method-http=disabled\naip.dev/not-precedent: We need to do this because there are multiple criteria by which the data is pulled --)",
                "summary": "Retrieve climate data for a given date",
                "operationId": "ClimateAPI_RetrieveClimateDataAsOfDate",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "alpha",
                            "beta",
                            "stable"
                        ],
                        "type": "string",
                        "default": "stable",
                        "description": "The channel to send the request to",
                        "name": "VND.com.blackrock.Channel",
                        "in": "header"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1RetrieveClimateDataAsOfDateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1ClimateDataSetResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 1000
            }
        },
        "/metadata:retrieve": {
            "get": {
                "security": [
                    {
                        "APIKeyHeader": [],
                        "OAuth2AccessCode": [
                            "analytics.data.climate.v1.Climate:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "OAuth2ClientCredentials": [
                            "analytics.data.climate.v1.Climate:read"
                        ]
                    },
                    {
                        "APIKeyHeader": [],
                        "ClientKeyHeader": []
                    },
                    {
                        "APIKeyHeader": [],
                        "basicAuth": []
                    }
                ],
                "description": "The Aladdin Climate Meta Data API outlines the datapoints available across physical, transition, and temperature alignment analytics. Users can query for data using a specific metricType (PHYSICAL, TRANSITION, and TEMP_ALIGNMENT) and can optionally specify for which metricCodes.\n(-- api-linter: aladdin::9016::query-custom-method-http=disabled\naip.dev/not-precedent: We need to do this because climate is there is the url already and want to keep the structure similar to other APIs --)\n(-- api-linter: aladdin::9016::rpc-name=disabled\n aip.dev/not-precedent: We need to do this because this is the climate metadata request and hence follows the naming accodingly --)",
                "summary": "Retrieve climate meta data",
                "operationId": "ClimateAPI_RetrieveClimateMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": "A unique identifier for this request.",
                        "name": "VND.com.blackrock.Request-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp assigned to this request at origin, in \"HTTP-date\" format as defined by RFC 7231.",
                        "name": "VND.com.blackrock.Origin-Timestamp",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "alpha",
                            "beta",
                            "stable"
                        ],
                        "type": "string",
                        "default": "stable",
                        "description": "The channel to send the request to",
                        "name": "VND.com.blackrock.Channel",
                        "in": "header"
                    },
                    {
                        "enum": [
                            "METRIC_TYPE_UNSPECIFIED",
                            "METRIC_TYPE_PHYSICAL",
                            "METRIC_TYPE_TRANSITION",
                            "METRIC_TYPE_TEMP_ALIGNMENT",
                            "METRIC_TYPE_COMBINED_CLIMATE"
                        ],
                        "type": "string",
                        "default": "METRIC_TYPE_UNSPECIFIED",
                        "description": "Climate risk type for which a user wants the associated meta data. Example : 'METRIC_TYPE_PHYSICAL', 'METRIC_TYPE_TEMP_ALIGNMENT'.\n\n - METRIC_TYPE_UNSPECIFIED: Default Value - Error is thrown in this case\n - METRIC_TYPE_PHYSICAL: Related to physical risk\n - METRIC_TYPE_TRANSITION: Related to transition risk\n - METRIC_TYPE_TEMP_ALIGNMENT: Related to temperature alignment\n - METRIC_TYPE_COMBINED_CLIMATE: Related to combined tr and pr climate",
                        "name": "metricType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Specific metric codes for which more information is needed. Example : 'TR_CAPACITY_PROJ_WIND_REG_MWH', 'TR_GLOBAL_SALES_PROJ_EV'.",
                        "name": "metricCodes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/v1RetrieveClimateMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Aladdin® will not process the request due to an apparent client error.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "401": {
                        "description": "Aladdin® will not process the request as the necessary credentials were not provided or were invalid.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "403": {
                        "description": "Aladdin® understood the request but is refusing to authorize it.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    },
                    "404": {
                        "description": "Aladdin® did not find the resource requested or is unwilling to disclose if it exists. Could indicate a defect in the client program or data which is no longer accessible.",
                        "schema": {
                            "description": "Defines an error that occurred.",
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "description": "A short mnemonic reference code for the error.",
                                    "type": "string",
                                    "maxLength": 40
                                },
                                "message": {
                                    "description": "A human readable description of the error.",
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "VND.com.blackrock.Request-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "The unique identifier assigned by the client to the request that originated this response."
                            },
                            "VND.com.blackrock.Response-ID": {
                                "type": "string",
                                "format": "UUID",
                                "description": "A Unique Identifier for this response."
                            },
                            "VND.com.blackrock.Response-Timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp assigned to this response, in \"HTTP-date\" format as defined by RFC 7231."
                            }
                        }
                    }
                },
                "x-access-type": "READ",
                "x-quota-limit": 1000
            }
        }
    },
    "definitions": {
        "Any": {
            "description": "`Any` contains an arbitrary serialized message along with a\nURL that describes the type of the serialized message",
            "type": "object",
            "properties": {
                "@type": {
                    "description": "A URL/resource name that uniquely identifies the type of the serialized message.",
                    "type": "string"
                }
            }
        },
        "climatev1Segment": {
            "type": "object",
            "title": "Defines different segment for short codes in field mappings",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Defines the name of segment"
                },
                "attributes": {
                    "description": "(-- api-linter: core::0124::required-reference=disabled\n    aip.dev/not-precedent: We need to do this because this is an existing field and does not require resource association--)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n    aip.dev/not-precedent: This field in independent and conflict is cross-domain, hence we need to override the type--)\nAttributes are the different levels of segmentation in which the entity is involved in for the specific metric value that is returned.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rpcStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Any"
                    }
                }
            }
        },
        "typesAnalyticDataValue": {
            "type": "object",
            "title": "Wrapper for security analytic value which could be one of many data types",
            "properties": {
                "valueString": {
                    "type": "string",
                    "title": "This field stores the data when it's in string data type"
                },
                "valueNumeric": {
                    "type": "number",
                    "format": "double",
                    "title": "This field stores the data when it's in a numeric data type"
                },
                "valueInteger": {
                    "type": "string",
                    "format": "int64",
                    "title": "This field stores the data when it's in a integer data type"
                },
                "valueDate": {
                    "type": "string",
                    "format": "date",
                    "title": "This field stores the data when it's in date data type"
                }
            }
        },
        "v1ClimateCommonDataSet": {
            "type": "object",
            "title": "Climate common data set is a collection of scenario independent data points available for different metrics",
            "properties": {
                "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date as of which this data was generated"
                },
                "metrics": {
                    "type": "array",
                    "title": "Metrics to represent climate common data sets",
                    "items": {
                        "$ref": "#/definitions/v1ClimateCommonMetrics"
                    }
                }
            }
        },
        "v1ClimateCommonMetrics": {
            "type": "object",
            "title": "Climate common metrics",
            "properties": {
                "metricCode": {
                    "type": "string",
                    "title": "Metric code for the data"
                },
                "metricValues": {
                    "type": "array",
                    "title": "Values for metrics which are common for all scenarios",
                    "items": {
                        "$ref": "#/definitions/v1CommonMetricValue"
                    }
                }
            }
        },
        "v1ClimateDataSet": {
            "type": "object",
            "title": "List of climate data retrieved for each entity \n(-- api-linter: core::0123::resource-annotation=disabled\n aip.dev/not-precedent: We need to do this because this is not a resource --)",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Entity identifiers for which the data returns"
                },
                "climateScenarioDataSets": {
                    "type": "array",
                    "title": "Reflects the collection of data returned for the entity\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled\n aip.dev/not-precedent: We need to do this because this field depicts the data sets returned per scenario --)",
                    "items": {
                        "$ref": "#/definitions/v1ClimateScenarioDataSet"
                    }
                },
                "assetClass": {
                    "type": "string",
                    "title": "This is used to determine the view in research and DeX for cusip/issuer.\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to this because both the asset classes are different-)\n(-- api-linter: core::0124::required-reference=disabled\n    aip.dev/not-precedent: asset_class is not a resource --)"
                },
                "idAttributes": {
                    "type": "array",
                    "title": "This is used to determine id attributes which will be used for aggregation",
                    "items": {
                        "$ref": "#/definitions/v1IdAttributes"
                    }
                },
                "climateCommonDataSets": {
                    "type": "array",
                    "title": "Reflects the collection of data returned for any entity which is common for all scenarios\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled\n aip.dev/not-precedent: We need to do this because this field depicts the data sets returned for all scenarios --)",
                    "items": {
                        "$ref": "#/definitions/v1ClimateCommonDataSet"
                    }
                }
            }
        },
        "v1ClimateDataSetResponse": {
            "description": "Response message for ClimateAPI.RetrieveClimateDataAsOfDate.",
            "type": "object",
            "properties": {
                "climateDataSets": {
                    "type": "array",
                    "title": "List of climate data retrieved for each entity\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled\n aip.dev/not-precedent: We need to do this because we need to define that a dataset is being returned in the name --)",
                    "items": {
                        "$ref": "#/definitions/v1ClimateDataSet"
                    }
                },
                "nextPageToken": {
                    "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
                    "type": "string"
                }
            }
        },
        "v1ClimateMetadata": {
            "type": "object",
            "title": "ClimateMetadata details the meta data about each available datapoint",
            "properties": {
                "metricCode": {
                    "type": "string",
                    "title": "Reflects the metric code for the datapoint. Example : 'PR_PRICE_DELTA' is the metric code for the Physical Climate Adj. Value % Change"
                },
                "metricName": {
                    "type": "string",
                    "title": "Reflects the user friendly name of the metric"
                },
                "description": {
                    "type": "string",
                    "title": "Describes the metric in more detail\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because the two description fields are different --)\n(-- api-linter: core::0124::required-reference=disabled\n aip.dev/not-precedent: We need to do this because the two description fields are different --)"
                },
                "category": {
                    "type": "string",
                    "title": "Reflects a thematic category for metric. Example : 'Environmental Impacts', 'Decomposition of TCAV%'"
                },
                "idTypes": {
                    "type": "array",
                    "title": "Reflects for which id level a metric is readily available. Example : 'ID_TYPE_SECURITY'",
                    "items": {
                        "$ref": "#/definitions/v1IdType"
                    }
                },
                "dataType": {
                    "title": "Reflects the data type of the metric. Example : 'DATA_TYPE_DATE'\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled\n aip.dev/not-precedent: We need to do this because this field describes the type of data --)\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because the two data_type fields are different --)\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to do this because the data_type field is different from others --)",
                    "$ref": "#/definitions/v1DataType"
                },
                "unit": {
                    "type": "string",
                    "title": "Reflects the unit in which the metric is expressed as\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to do this because the two unti fields are different --)"
                },
                "metadataExt": {
                    "type": "object",
                    "title": "Some extra information specific to the metric\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: We need to do this because we want to keep it consistent with the ESG Metadata API --)\n(-- api-linter: aladdin::0901::forbidden-message-field=disabled\n aip.dev/not-precedent: We need to do this because we want to keep it consistent with the ESG Metadata API --)",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1ClimateRiskRequest": {
            "type": "object",
            "title": "ClimateRiskRequest reflects the details needed to fetch the climate data such as scenario types, metric codes, etc",
            "required": [
                "metricCodes"
            ],
            "properties": {
                "metricType": {
                    "title": "Metric type defines the type of climate risk. Example : 'METRIC_TYPE_PHYSICAL', 'METRIC_TYPE_TEMP_ALIGNMENT'",
                    "$ref": "#/definitions/v1MetricType"
                },
                "metricCodes": {
                    "type": "array",
                    "title": "Defines the datapoint for which a value is being fetched. Example : 'PR_DAYS_OVER_90F', 'TR_CAPACITY_MACRO_WIND_PROJ_MWH'",
                    "required": [
                        "metric_codes"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "climateScenarios": {
                    "type": "array",
                    "title": "List of various scenario combinations available for each datapoint",
                    "items": {
                        "$ref": "#/definitions/v1ClimateScenario"
                    }
                }
            }
        },
        "v1ClimateScenario": {
            "type": "object",
            "title": "ClimateScenario details the various scenario combinations available for each climate risk type",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Refers to the name of the scenario. Example : 'RCP 4.5', 'RCP 8.5', '2 Degree' (mapped to NGFS Orderly Net Zero), '2 Degree Disorderly'",
                    "required": [
                        "name"
                    ]
                },
                "percentile": {
                    "type": "string",
                    "title": "Refers to the percentile impact associated with climate risk. Only applicable to physical risk ('mean' or '0.83'), transition risk has a default impact of 'mean'"
                },
                "timeframe": {
                    "type": "string",
                    "title": "Refers to timeframe for which the data should be retrieved. Example : 'Today', '2020', '2030', '2040'\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because the two timeframe fields are different --)"
                }
            }
        },
        "v1ClimateScenarioDataSet": {
            "type": "object",
            "title": "ClimateScenarioDataSet is the collection of datapoints available for a given scenario type and metric code",
            "properties": {
                "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date as of which this data is fetched"
                },
                "riskDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date as of which this data was generated"
                },
                "metricType": {
                    "title": "Type of climate risk (physical, transition, or temperature alignment)",
                    "$ref": "#/definitions/v1MetricType"
                },
                "climateScenario": {
                    "title": "Scenario queried against the climate risk type\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to do this because the two climate_scenario are different --)",
                    "$ref": "#/definitions/v1ClimateScenario"
                },
                "metrics": {
                    "type": "array",
                    "title": "Retrieved data for the given set of metric codes",
                    "items": {
                        "$ref": "#/definitions/v1Metric"
                    }
                },
                "version": {
                    "type": "string",
                    "title": "This field defines the version of DataSet\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n    aip.dev/not-precedent: We need to do this because thie field can't be renamed due to business significnace. --)"
                },
                "modelParameters": {
                    "type": "array",
                    "title": "List of different model parameters provided to the model",
                    "items": {
                        "$ref": "#/definitions/v1ModelParameter"
                    }
                }
            }
        },
        "v1CommonMetricValue": {
            "type": "object",
            "title": "Climate common metric value",
            "properties": {
                "valueString": {
                    "type": "string",
                    "title": "This field stores the data when it's in string data type"
                },
                "valueNumeric": {
                    "type": "number",
                    "format": "double",
                    "title": "This field stores the data when it's in a numeric data type"
                },
                "mapValues": {
                    "type": "object",
                    "title": "metric value map for climate common data sets",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1DataType": {
            "description": "- DATA_TYPE_UNSPECIFIED: Unspecified data type\n - DATA_TYPE_STRING: String based data\n - DATA_TYPE_NUMERIC: Numeric based data\n - DATA_TYPE_DATE: Date/time data\n - DATA_TYPE_MAP_DOUBLE: Map based data with string key and double value\n - DATA_TYPE_MAP_STRING: Map based data with string key and string value",
            "type": "string",
            "title": "Reflects the datatypes for each metric",
            "default": "DATA_TYPE_UNSPECIFIED",
            "enum": [
                "DATA_TYPE_UNSPECIFIED",
                "DATA_TYPE_STRING",
                "DATA_TYPE_NUMERIC",
                "DATA_TYPE_DATE",
                "DATA_TYPE_MAP_DOUBLE",
                "DATA_TYPE_MAP_STRING"
            ]
        },
        "v1FieldMapping": {
            "description": "FieldMapping describes the mapping for different field in response.",
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string",
                    "title": "Refers to field name in response"
                },
                "mappings": {
                    "type": "object",
                    "title": "Refers to the key-value pair mappings",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1IdAttributes": {
            "type": "object",
            "title": "Holds id attribute name and list of values which will be used for aggregation",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "name of the id attribute"
                },
                "attributeValues": {
                    "type": "array",
                    "title": "values of the attribute to be used for aggregation\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n    aip.dev/not-precedent: Conflict is cross domain, and the field is independent. --)",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1IdType": {
            "description": "- ID_TYPE_UNSPECIFIED: Default Value - Error is thrown in this case\n - ID_TYPE_SECURITY: SECURITY - Used to query for security level metrics for all supported asset classes\n - ID_TYPE_DEAL: DEAL - Used to query for deal level metrics mapped to a CMBS security\n - ID_TYPE_LOAN: LOAN - Used to query for loan level metrics mapped to a CMBS security\n - ID_TYPE_PROPERTY: PROPERTY - Used to query for property level metrics mapped to a CMBS security\n - ID_TYPE_ISSUER: ISSUER - Used to query for issuer level metrics (includes corporate issuers and sovereign entities)\n - ID_TYPE_SECTOR: SECTOR - Used to query for the highest level GICS sector level climate scores. Example : 'Energy', 'Consumer Staples'\n - ID_TYPE_MACRO: MACRO- Used to query country and global data for macroenvironmental measures, can be used without any entry in the “ids” section",
            "type": "string",
            "title": "Defines the type of entity IDs being passed",
            "default": "ID_TYPE_UNSPECIFIED",
            "enum": [
                "ID_TYPE_UNSPECIFIED",
                "ID_TYPE_SECURITY",
                "ID_TYPE_DEAL",
                "ID_TYPE_LOAN",
                "ID_TYPE_PROPERTY",
                "ID_TYPE_ISSUER",
                "ID_TYPE_SECTOR",
                "ID_TYPE_MACRO"
            ]
        },
        "v1Metric": {
            "type": "object",
            "title": "Metric stores the metric details (code,value)",
            "properties": {
                "metricCode": {
                    "type": "string",
                    "title": "Reflects the datapoint for which a value is being fetched. Example : 'PR_PRICE_DELTA'"
                },
                "metricValue": {
                    "title": "Reflects the value of the associated metric for the given inputs such as scenario type",
                    "$ref": "#/definitions/v1MetricValue"
                },
                "outputValues": {
                    "type": "array",
                    "title": "List of output values",
                    "items": {
                        "$ref": "#/definitions/v1OutputValue"
                    }
                }
            }
        },
        "v1MetricType": {
            "description": "- METRIC_TYPE_UNSPECIFIED: Default Value - Error is thrown in this case\n - METRIC_TYPE_PHYSICAL: Related to physical risk\n - METRIC_TYPE_TRANSITION: Related to transition risk\n - METRIC_TYPE_TEMP_ALIGNMENT: Related to temperature alignment\n - METRIC_TYPE_COMBINED_CLIMATE: Related to combined tr and pr climate",
            "type": "string",
            "title": "Defines the type of climate risk. Example : 'METRIC_TYPE_PHYSICAL', 'METRIC_TYPE_TEMP_ALIGNMENT'",
            "default": "METRIC_TYPE_UNSPECIFIED",
            "enum": [
                "METRIC_TYPE_UNSPECIFIED",
                "METRIC_TYPE_PHYSICAL",
                "METRIC_TYPE_TRANSITION",
                "METRIC_TYPE_TEMP_ALIGNMENT",
                "METRIC_TYPE_COMBINED_CLIMATE"
            ]
        },
        "v1MetricValue": {
            "type": "object",
            "title": "Value for the desired metric code which could be one of many data types",
            "properties": {
                "value": {
                    "title": "The value has a generic data type, which means it can be a numeric value, string, date etc\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\n aip.dev/not-precedent: We need to do this because this keeps it in sync with AnalyticDataValue --)\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to do this because the value field is different from others --)",
                    "$ref": "#/definitions/typesAnalyticDataValue"
                },
                "valueMapDouble": {
                    "type": "object",
                    "title": "This field stores the data when there is a string key and double value\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: We need to do this because it does not require a plural name due to the presence of map in the name --)\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\n aip.dev/not-precedent: We need to do this because this keeps it in sync with AnalyticDataValue --)",
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "valueMapString": {
                    "type": "object",
                    "title": "This field stores the data when there is a string key and string value\n(-- api-linter: core::0144::message-field-plural=disabled\n aip.dev/not-precedent: We need to do this because it does not require a plural name due to the presence of map in the name --)\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\n aip.dev/not-precedent: We need to do this because this keeps it in sync with AnalyticDataValue --)",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v1ModelParameter": {
            "type": "object",
            "title": "Defines the model parameter and it's value",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Name of the model parameter"
                },
                "value": {
                    "title": "Value of the parameter passed to the model\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\n    aip.dev/not-precedent: We need to do this because thie field should only be value. --)\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: Our value field is not of the same type as the values fields in other messages. --)",
                    "$ref": "#/definitions/typesAnalyticDataValue"
                }
            }
        },
        "v1OutputValue": {
            "type": "object",
            "title": "Holds value per metric for different configurations of the model and different segment and regions",
            "properties": {
                "regionalSegment": {
                    "type": "array",
                    "title": "Reflects the regional segment values\n(-- api-linter: core::0144::message-field-plural=disabled\n    aip.dev/not-precedent: We need to do this because we want segment to be singular --)",
                    "items": {
                        "$ref": "#/definitions/v1RegionalSegment"
                    }
                }
            }
        },
        "v1RegionalSegment": {
            "type": "object",
            "title": "Defines the Regional Segments",
            "properties": {
                "segment": {
                    "title": "Defines different segment mappings as defined in the fieldMappings decodes",
                    "$ref": "#/definitions/climatev1Segment"
                },
                "region": {
                    "type": "string",
                    "title": "Defines the region name\n(-- api-linter: aladdin::0901::dictionary-message-field=disabled\n    aip.dev/not-precedent: We need to do this because this field is differnt from region that is in other domain. --)\n(-- api-linter: core::0124::required-reference=disabled\n    aip.dev/not-precedent: We need to do this because region is not a resource. --)"
                },
                "value": {
                    "title": "Defines the value for regional segment\n(-- api-linter: aladdin::0901::prefix-required-field=disabled\n aip.dev/not-precedent: We need to do this because this keeps it in sync with AnalyticDataValue --)\n(-- api-linter: aladdin::9027::dictionary-conflicting-types-existing=disabled\n aip.dev/not-precedent: We need to do this because the value field is different from others --)",
                    "$ref": "#/definitions/typesAnalyticDataValue"
                }
            }
        },
        "v1RetrieveClimateDataAsOfDateRequest": {
            "type": "object",
            "title": "The request message for ClimateAPI.RetrieveClimateDataAsOfDate.\n(-- api-linter: core::0132::request-unknown-fields=disabled\n aip.dev/not-precedent: We need to do this because we need this as an input to fetch the data --)\n(-- api-linter: aladdin::9016::request-message-name=disabled\n aip.dev/not-precedent: We need to do this because we need to differentiate from time series api and there are multiple criteria to get data --)\n(-- api-linter: 0901::dictionary-message-field=disabled\n aip.dev/not-precedent: We need to do this because id_type is not referring to any other fields. --)",
            "required": [
                "idType",
                "ids",
                "asOfDate",
                "climateRiskRequests"
            ],
            "properties": {
                "idType": {
                    "title": "Type of the identifiers provided",
                    "required": [
                        "id_type"
                    ],
                    "$ref": "#/definitions/v1IdType"
                },
                "ids": {
                    "type": "array",
                    "title": "Entity identifiers such as CUSIPS, Issuer IDs, etc. Example : 'S60180858', 'R53975'",
                    "required": [
                        "ids"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "asOfDate": {
                    "type": "string",
                    "format": "date",
                    "title": "Date for which the data needs to provided as of ('YYYY-MM-DD'). Example : '2022-08-17'",
                    "required": [
                        "as_of_date"
                    ]
                },
                "climateRiskRequests": {
                    "description": "Details needed to fetch the climate data such as scenario types, metric codes, etc.",
                    "type": "array",
                    "required": [
                        "climate_risk_requests"
                    ],
                    "items": {
                        "$ref": "#/definitions/v1ClimateRiskRequest"
                    }
                },
                "pageSize": {
                    "description": "Maximum number of ids for which data will be returned in each\nresponse. If unspecified, limit is set to the default maximum.\nValues above this will be coerced to this maximum.",
                    "type": "integer",
                    "format": "int32"
                },
                "pageToken": {
                    "description": "A page token, received from a previous `RetrieveClimateDataAsOfDate` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to\n`RetrieveClimateDataAsOfDate` must match the call that provided the\npage token.",
                    "type": "string"
                },
                "appKey": {
                    "description": "Optional App id key used for identifying the calling application.",
                    "type": "string"
                }
            }
        },
        "v1RetrieveClimateMetadataResponse": {
            "type": "object",
            "title": "Response message for ClimateAPI.RetrieveClimateMetadata.\n(-- api-linter: core::0158::response-next-page-token-field=disabled\naip.dev/not-precedent: We need to do this because we do not have pagination in responses for metadata request --)\n(-- api-linter: aladdin::9016::response-message-name=disabled\naip.dev/not-precedent: We need to do this because this is for the metadata function and hence has the metadata name in it --)\n(-- api-linter: aladdin::9016::response-message=disabled\naip.dev/not-precedent: We need to do this because this is for the metadata function and hence returns climate_metadata field --)",
            "properties": {
                "climateMetadata": {
                    "type": "array",
                    "title": "List of datapoints available for each climate risk metric type",
                    "items": {
                        "$ref": "#/definitions/v1ClimateMetadata"
                    }
                },
                "scenarioOptions": {
                    "type": "array",
                    "title": "List of various scenario combinations available for each datapoint",
                    "items": {
                        "$ref": "#/definitions/v1ScenarioOption"
                    }
                },
                "fieldMappings": {
                    "type": "array",
                    "title": "Key-value pair decode mappings",
                    "items": {
                        "$ref": "#/definitions/v1FieldMapping"
                    }
                }
            }
        },
        "v1ScenarioOption": {
            "type": "object",
            "title": "ScenarioOption describes the list of various scenario combinations for which the datapoint can be fetched against",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Refers to the name of the scenario. Example : 'RCP 4.5', 'RCP 8.5', '2 Degree' (mapped to NGFS Orderly Net Zero), '2 Degree Disorderly'"
                },
                "percentile": {
                    "type": "string",
                    "title": "Refers to the percentile impact associated with climate risk. Only applicable to physical risk ('mean' or '0.83'), transition risk has a default impact of 'mean'"
                },
                "timeframes": {
                    "type": "array",
                    "title": "Refers to timeframe for which the data should be retrieved. Example : 'Today', '2020', '2030', '2040'",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "name": "VND.com.blackrock.API-Key",
            "in": "header"
        },
        "ClientKeyHeader": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "OAuth2AccessCode": {
            "description": "This API uses OAuth 2.0 with the access code flow.",
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://client.blackrock.com/api/oauth2/default/v1/authorize",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "analytics.data.climate.v1.Climate:read": "non-sensitive read",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "OAuth2ClientCredentials": {
            "description": "This API uses OAuth 2.0 with the client credentials flow.",
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://client.blackrock.com/api/oauth2/default/v1/token",
            "scopes": {
                "analytics.data.climate.v1.Climate:read": "non-sensitive read",
                "offline_access": "This keeps you signed in to the app, even when you are not using it."
            }
        },
        "basicAuth": {
            "type": "basic"
        }
    },
    "security": [
        {
            "APIKeyHeader": [],
            "OAuth2AccessCode": [
                "analytics.data.climate.v1.Climate:read",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "OAuth2ClientCredentials": [
                "analytics.data.climate.v1.Climate:read",
                "offline_access"
            ]
        },
        {
            "APIKeyHeader": [],
            "ClientKeyHeader": []
        },
        {
            "APIKeyHeader": [],
            "basicAuth": []
        }
    ],
    "tags": [
        {
            "name": "Access.Internal"
        }
    ],
    "x-access-level": "Public"
}